{"version":3,"file":"microsoft.cognitiveservices.speech.sdk-aOlq1Vge.js","sources":["../../../node_modules/uuid/dist/commonjs-browser/rng.js","../../../node_modules/uuid/dist/commonjs-browser/regex.js","../../../node_modules/uuid/dist/commonjs-browser/validate.js","../../../node_modules/uuid/dist/commonjs-browser/stringify.js","../../../node_modules/uuid/dist/commonjs-browser/v1.js","../../../node_modules/uuid/dist/commonjs-browser/parse.js","../../../node_modules/uuid/dist/commonjs-browser/v35.js","../../../node_modules/uuid/dist/commonjs-browser/md5.js","../../../node_modules/uuid/dist/commonjs-browser/v3.js","../../../node_modules/uuid/dist/commonjs-browser/native.js","../../../node_modules/uuid/dist/commonjs-browser/v4.js","../../../node_modules/uuid/dist/commonjs-browser/sha1.js","../../../node_modules/uuid/dist/commonjs-browser/v5.js","../../../node_modules/uuid/dist/commonjs-browser/nil.js","../../../node_modules/uuid/dist/commonjs-browser/version.js","../../../node_modules/uuid/dist/commonjs-browser/index.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Guid.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/PlatformEvent.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/AudioSourceEvents.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ConnectionEvents.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Error.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ConnectionMessage.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ConnectionOpenResponse.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/DeferralMap.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/DialogEvents.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/EventSource.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Events.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IAudioSource.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IConnection.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IDetachable.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IDictionary.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IDisposable.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IEventListener.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IEventSource.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IErrorMessages.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ITimer.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IWebsocketMessageFormatter.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/List.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Promise.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Queue.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/RawWebsocketMessage.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/RiffPcmEncoder.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Stream.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranslationStatus.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ChunkedArrayBufferStream.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IAudioDestination.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Timeout.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/OCSPEvents.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/BackgroundError.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/HeaderNames.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IAuthentication.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/CognitiveSubscriptionKeyAuthentication.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/CognitiveTokenAuthentication.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IConnectionFactory.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ISynthesisConnectionFactory.js","../../__vite-browser-external","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/LogLevel.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/ConsoleLoggingListener.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/IRecorder.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioStreamFormat.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/MicAudioSource.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/FileAudioSource.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/PCMRecorder.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/WebsocketMessageAdapter.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/WebsocketConnection.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/ReplayableAudioNode.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioFileWriter.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioInputStream.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisOutputFormat.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioOutputFormat.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioOutputStream.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioConfig.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationReason.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/PullAudioInputStreamCallback.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/PushAudioOutputStreamCallback.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/KeywordRecognitionModel.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SessionEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/RecognitionEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/OutputFormat.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognitionEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/RecognitionResult.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognitionResult.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognitionResult.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/LanguageUnderstandingModel.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognitionEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationEventArgsBase.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognitionCanceledEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognitionEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationSynthesisEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognitionResult.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationSynthesisResult.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ResultReason.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechConfig.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechTranslationConfig.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PropertyCollection.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PropertyId.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Recognizer.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/PhraseDetection/PhraseDetectionContext.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognizer.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognizer.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileType.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConnectionMessage.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Connection.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognizer.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Translations.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/NoMatchReason.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/NoMatchDetails.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognitionCanceledEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognitionCanceledEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationDetailsBase.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationDetails.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationErrorCodes.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConnectionEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ServiceEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PhraseListGrammar.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/DialogServiceConfig.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/BotFrameworkConfig.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CustomCommandsConfig.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/QueryParameterNames.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConnectionFactoryBase.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogConnectorFactory.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/DialogServiceConnector.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ActivityReceivedEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TurnStatusPayload.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TurnStatusReceivedEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ServicePropertyChannel.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ProfanityOption.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/BaseAudioPlayer.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConnectionMessageEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfile.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileEnrollmentResult.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileResult.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfilePhraseResult.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileClient.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerRecognizer.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerIdentificationModel.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerVerificationModel.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/LanguageIdMode.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AutoDetectSourceLanguageConfig.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AutoDetectSourceLanguageResult.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SourceLanguageConfig.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerRecognitionResult.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/Conversation.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationCommon.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationExpirationEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationParticipantsChangedEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslationCanceledEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslationEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslationResult.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/StringUtils.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorConnectionFactory.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslator.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranscriber.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/IParticipant.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ParticipantChangedReason.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/Meeting.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/MeetingTranscriptionCanceledEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/MeetingTranscriber.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranscriptionResult.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/Exports.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Synthesizer.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesizer.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SynthesisResult.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisResult.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisWordBoundaryEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisBookmarkEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisVisemeEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisBoundaryType.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SynthesisVoicesResult.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceInfo.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/SpeakerAudioDestination.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConversationTranscriptionCanceledEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/MeetingTranscriptionCanceledEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentGradingSystem.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentGranularity.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentConfig.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentResult.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarConfig.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechSynthesisConnectionFactory.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarSynthesizer.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarVideoFormat.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarWebRTCConnectionResult.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Diagnostics.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/ProxyInfo.js","../../../node_modules/bent/src/core.js","../../../node_modules/bent/src/browser.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/RestMessageAdapter.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/RestConfigBase.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IntentConnectionFactory.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeakerRecognitionConnectionFactory.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/RecognitionEvents.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechConnectionMessage.Internal.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/PhraseDetection/Segmentation.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/Translation/OnSuccess.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/Translation/InterimResults.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/LanguageId/LanguageIdContext.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/LanguageId/OnSuccess.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/LanguageId/OnUnknown.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/PhraseOutput/InterimResults.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/PhraseOutput/PhraseResults.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/PhraseDetection/OnSuccess.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceRecognizerBase.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConversationServiceRecognizer.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/RecognizerConfig.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechServiceInterfaces.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/WebsocketMessageFormatter.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechConnectionFactory.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConversationTranscriberConnectionFactory.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranscriberConnectionFactory.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranslationConnectionFactory.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/EnumTranslation.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/Enums.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TranslationSynthesisEnd.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TranslationHypothesis.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TranslationPhrase.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranslationServiceRecognizer.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeechDetected.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeechHypothesis.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeechKeyword.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechServiceRecognizer.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/PhraseDetection/SpeakerDiarization.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConversationTranscriptionServiceRecognizer.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranscriptionServiceRecognizer.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/DetailedSpeechPhrase.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SimpleSpeechPhrase.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/AddedLmIntent.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IntentServiceRecognizer.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/IntentResponse.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeakerResponse.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceTelemetryListener.Internal.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/RequestSession.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/PhraseOutput/PhraseOutput.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechContext.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/Dgi/Group.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DynamicGrammarBuilder.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/ActivityResponsePayload.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogServiceTurnState.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogServiceTurnStateManager.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/InvocationSource.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/KeywordDetection/KeywordDetection.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogServiceAdapter.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/AgentConfig.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionConfig.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationManager.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionMessage.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationWebsocketMessageFormatter.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionFactory.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationRequestSession.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorEventArgs.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorInterfaces.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/CommandResponsePayload.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/ParticipantResponsePayload.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/TranslationResponsePayload.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/Exports.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationServiceAdapter.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorRecognizer.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/TranscriberRecognizer.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/Exports.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SynthesisAudioMetadata.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisEvents.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisTurn.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisAdapterBase.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/AvatarSynthesisAdapter.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechSynthesisAdapter.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisRestAdapter.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesizerConfig.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisContext.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeakerRecognitionConfig.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeakerServiceRecognizer.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/VoiceServiceRecognizer.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechServiceConfig.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js","../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/microsoft.cognitiveservices.speech.sdk.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\n\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regex = _interopRequireDefault(require(\"./regex.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.unsafeStringify = unsafeStringify;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = require(\"./stringify.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.unsafeStringify)(b);\n}\n\nvar _default = v1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.URL = exports.DNS = void 0;\nexports.default = v35;\n\nvar _stringify = require(\"./stringify.js\");\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0, _stringify.unsafeStringify)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nvar _default = md5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nvar _default = {\n  randomUUID\n};\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _native = _interopRequireDefault(require(\"./native.js\"));\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = require(\"./stringify.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  if (_native.default.randomUUID && !buf && !options) {\n    return _native.default.randomUUID();\n  }\n\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _stringify.unsafeStringify)(rnds);\n}\n\nvar _default = v4;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nvar _default = sha1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = '00000000-0000-0000-0000-000000000000';\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.slice(14, 15), 16);\n}\n\nvar _default = version;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function get() {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function get() {\n    return _parse.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function get() {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function get() {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function get() {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function get() {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function get() {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function get() {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function get() {\n    return _version.default;\n  }\n});\n\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\n\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\n\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\n\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\n\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\n\nvar _version = _interopRequireDefault(require(\"./version.js\"));\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createNoDashGuid = exports.createGuid = void 0;\nconst uuid_1 = require(\"uuid\");\nconst createGuid = () => (0, uuid_1.v4)();\nexports.createGuid = createGuid;\nconst createNoDashGuid = () => createGuid().replace(new RegExp(\"-\", \"g\"), \"\").toUpperCase();\nexports.createNoDashGuid = createNoDashGuid;\n\n//# sourceMappingURL=Guid.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PlatformEvent = exports.EventType = void 0;\nconst Guid_js_1 = require(\"./Guid.js\");\nvar EventType;\n(function (EventType) {\n    EventType[EventType[\"Debug\"] = 0] = \"Debug\";\n    EventType[EventType[\"Info\"] = 1] = \"Info\";\n    EventType[EventType[\"Warning\"] = 2] = \"Warning\";\n    EventType[EventType[\"Error\"] = 3] = \"Error\";\n    EventType[EventType[\"None\"] = 4] = \"None\";\n})(EventType = exports.EventType || (exports.EventType = {}));\nclass PlatformEvent {\n    constructor(eventName, eventType) {\n        this.privName = eventName;\n        this.privEventId = (0, Guid_js_1.createNoDashGuid)();\n        this.privEventTime = new Date().toISOString();\n        this.privEventType = eventType;\n        this.privMetadata = {};\n    }\n    get name() {\n        return this.privName;\n    }\n    get eventId() {\n        return this.privEventId;\n    }\n    get eventTime() {\n        return this.privEventTime;\n    }\n    get eventType() {\n        return this.privEventType;\n    }\n    get metadata() {\n        return this.privMetadata;\n    }\n}\nexports.PlatformEvent = PlatformEvent;\n\n//# sourceMappingURL=PlatformEvent.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AudioStreamNodeErrorEvent = exports.AudioStreamNodeDetachedEvent = exports.AudioStreamNodeAttachedEvent = exports.AudioStreamNodeAttachingEvent = exports.AudioStreamNodeEvent = exports.AudioSourceErrorEvent = exports.AudioSourceOffEvent = exports.AudioSourceReadyEvent = exports.AudioSourceInitializingEvent = exports.AudioSourceEvent = void 0;\n/* eslint-disable max-classes-per-file */\nconst PlatformEvent_js_1 = require(\"./PlatformEvent.js\");\nclass AudioSourceEvent extends PlatformEvent_js_1.PlatformEvent {\n    constructor(eventName, audioSourceId, eventType = PlatformEvent_js_1.EventType.Info) {\n        super(eventName, eventType);\n        this.privAudioSourceId = audioSourceId;\n    }\n    get audioSourceId() {\n        return this.privAudioSourceId;\n    }\n}\nexports.AudioSourceEvent = AudioSourceEvent;\nclass AudioSourceInitializingEvent extends AudioSourceEvent {\n    constructor(audioSourceId) {\n        super(\"AudioSourceInitializingEvent\", audioSourceId);\n    }\n}\nexports.AudioSourceInitializingEvent = AudioSourceInitializingEvent;\nclass AudioSourceReadyEvent extends AudioSourceEvent {\n    constructor(audioSourceId) {\n        super(\"AudioSourceReadyEvent\", audioSourceId);\n    }\n}\nexports.AudioSourceReadyEvent = AudioSourceReadyEvent;\nclass AudioSourceOffEvent extends AudioSourceEvent {\n    constructor(audioSourceId) {\n        super(\"AudioSourceOffEvent\", audioSourceId);\n    }\n}\nexports.AudioSourceOffEvent = AudioSourceOffEvent;\nclass AudioSourceErrorEvent extends AudioSourceEvent {\n    constructor(audioSourceId, error) {\n        super(\"AudioSourceErrorEvent\", audioSourceId, PlatformEvent_js_1.EventType.Error);\n        this.privError = error;\n    }\n    get error() {\n        return this.privError;\n    }\n}\nexports.AudioSourceErrorEvent = AudioSourceErrorEvent;\nclass AudioStreamNodeEvent extends AudioSourceEvent {\n    constructor(eventName, audioSourceId, audioNodeId) {\n        super(eventName, audioSourceId);\n        this.privAudioNodeId = audioNodeId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n}\nexports.AudioStreamNodeEvent = AudioStreamNodeEvent;\nclass AudioStreamNodeAttachingEvent extends AudioStreamNodeEvent {\n    constructor(audioSourceId, audioNodeId) {\n        super(\"AudioStreamNodeAttachingEvent\", audioSourceId, audioNodeId);\n    }\n}\nexports.AudioStreamNodeAttachingEvent = AudioStreamNodeAttachingEvent;\nclass AudioStreamNodeAttachedEvent extends AudioStreamNodeEvent {\n    constructor(audioSourceId, audioNodeId) {\n        super(\"AudioStreamNodeAttachedEvent\", audioSourceId, audioNodeId);\n    }\n}\nexports.AudioStreamNodeAttachedEvent = AudioStreamNodeAttachedEvent;\nclass AudioStreamNodeDetachedEvent extends AudioStreamNodeEvent {\n    constructor(audioSourceId, audioNodeId) {\n        super(\"AudioStreamNodeDetachedEvent\", audioSourceId, audioNodeId);\n    }\n}\nexports.AudioStreamNodeDetachedEvent = AudioStreamNodeDetachedEvent;\nclass AudioStreamNodeErrorEvent extends AudioStreamNodeEvent {\n    constructor(audioSourceId, audioNodeId, error) {\n        super(\"AudioStreamNodeErrorEvent\", audioSourceId, audioNodeId);\n        this.privError = error;\n    }\n    get error() {\n        return this.privError;\n    }\n}\nexports.AudioStreamNodeErrorEvent = AudioStreamNodeErrorEvent;\n\n//# sourceMappingURL=AudioSourceEvents.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionRedirectEvent = exports.ConnectionMessageSentEvent = exports.ConnectionMessageReceivedEvent = exports.ConnectionEstablishErrorEvent = exports.ConnectionErrorEvent = exports.ConnectionClosedEvent = exports.ConnectionEstablishedEvent = exports.ConnectionStartEvent = exports.ConnectionEvent = exports.ServiceEvent = void 0;\nconst PlatformEvent_js_1 = require(\"./PlatformEvent.js\");\nclass ServiceEvent extends PlatformEvent_js_1.PlatformEvent {\n    constructor(eventName, jsonstring, eventType = PlatformEvent_js_1.EventType.Info) {\n        super(eventName, eventType);\n        this.privJsonResult = jsonstring;\n    }\n    get jsonString() {\n        return this.privJsonResult;\n    }\n}\nexports.ServiceEvent = ServiceEvent;\nclass ConnectionEvent extends PlatformEvent_js_1.PlatformEvent {\n    constructor(eventName, connectionId, eventType = PlatformEvent_js_1.EventType.Info) {\n        super(eventName, eventType);\n        this.privConnectionId = connectionId;\n    }\n    get connectionId() {\n        return this.privConnectionId;\n    }\n}\nexports.ConnectionEvent = ConnectionEvent;\nclass ConnectionStartEvent extends ConnectionEvent {\n    constructor(connectionId, uri, headers) {\n        super(\"ConnectionStartEvent\", connectionId);\n        this.privUri = uri;\n        this.privHeaders = headers;\n    }\n    get uri() {\n        return this.privUri;\n    }\n    get headers() {\n        return this.privHeaders;\n    }\n}\nexports.ConnectionStartEvent = ConnectionStartEvent;\nclass ConnectionEstablishedEvent extends ConnectionEvent {\n    constructor(connectionId) {\n        super(\"ConnectionEstablishedEvent\", connectionId);\n    }\n}\nexports.ConnectionEstablishedEvent = ConnectionEstablishedEvent;\nclass ConnectionClosedEvent extends ConnectionEvent {\n    constructor(connectionId, statusCode, reason) {\n        super(\"ConnectionClosedEvent\", connectionId, PlatformEvent_js_1.EventType.Debug);\n        this.privReason = reason;\n        this.privStatusCode = statusCode;\n    }\n    get reason() {\n        return this.privReason;\n    }\n    get statusCode() {\n        return this.privStatusCode;\n    }\n}\nexports.ConnectionClosedEvent = ConnectionClosedEvent;\nclass ConnectionErrorEvent extends ConnectionEvent {\n    constructor(connectionId, message, type) {\n        super(\"ConnectionErrorEvent\", connectionId, PlatformEvent_js_1.EventType.Debug);\n        this.privMessage = message;\n        this.privType = type;\n    }\n    get message() {\n        return this.privMessage;\n    }\n    get type() {\n        return this.privType;\n    }\n}\nexports.ConnectionErrorEvent = ConnectionErrorEvent;\nclass ConnectionEstablishErrorEvent extends ConnectionEvent {\n    constructor(connectionId, statuscode, reason) {\n        super(\"ConnectionEstablishErrorEvent\", connectionId, PlatformEvent_js_1.EventType.Error);\n        this.privStatusCode = statuscode;\n        this.privReason = reason;\n    }\n    get reason() {\n        return this.privReason;\n    }\n    get statusCode() {\n        return this.privStatusCode;\n    }\n}\nexports.ConnectionEstablishErrorEvent = ConnectionEstablishErrorEvent;\nclass ConnectionMessageReceivedEvent extends ConnectionEvent {\n    constructor(connectionId, networkReceivedTimeISO, message) {\n        super(\"ConnectionMessageReceivedEvent\", connectionId);\n        this.privNetworkReceivedTime = networkReceivedTimeISO;\n        this.privMessage = message;\n    }\n    get networkReceivedTime() {\n        return this.privNetworkReceivedTime;\n    }\n    get message() {\n        return this.privMessage;\n    }\n}\nexports.ConnectionMessageReceivedEvent = ConnectionMessageReceivedEvent;\nclass ConnectionMessageSentEvent extends ConnectionEvent {\n    constructor(connectionId, networkSentTimeISO, message) {\n        super(\"ConnectionMessageSentEvent\", connectionId);\n        this.privNetworkSentTime = networkSentTimeISO;\n        this.privMessage = message;\n    }\n    get networkSentTime() {\n        return this.privNetworkSentTime;\n    }\n    get message() {\n        return this.privMessage;\n    }\n}\nexports.ConnectionMessageSentEvent = ConnectionMessageSentEvent;\nclass ConnectionRedirectEvent extends ConnectionEvent {\n    constructor(connectionId, redirectUrl, originalUrl, context) {\n        super(\"ConnectionRedirectEvent\", connectionId, PlatformEvent_js_1.EventType.Info);\n        this.privRedirectUrl = redirectUrl;\n        this.privOriginalUrl = originalUrl;\n        this.privContext = context;\n    }\n    get redirectUrl() {\n        return this.privRedirectUrl;\n    }\n    get originalUrl() {\n        return this.privOriginalUrl;\n    }\n    get context() {\n        return this.privContext;\n    }\n}\nexports.ConnectionRedirectEvent = ConnectionRedirectEvent;\n\n//# sourceMappingURL=ConnectionEvents.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ObjectDisposedError = exports.InvalidOperationError = exports.ArgumentNullError = void 0;\n/* eslint-disable max-classes-per-file */\n/**\n * The error that is thrown when an argument passed in is null.\n *\n * @export\n * @class ArgumentNullError\n * @extends {Error}\n */\nclass ArgumentNullError extends Error {\n    /**\n     * Creates an instance of ArgumentNullError.\n     *\n     * @param {string} argumentName - Name of the argument that is null\n     *\n     * @memberOf ArgumentNullError\n     */\n    constructor(argumentName) {\n        super(argumentName);\n        this.name = \"ArgumentNull\";\n        this.message = argumentName;\n    }\n}\nexports.ArgumentNullError = ArgumentNullError;\n/**\n * The error that is thrown when an invalid operation is performed in the code.\n *\n * @export\n * @class InvalidOperationError\n * @extends {Error}\n */\nclass InvalidOperationError extends Error {\n    /**\n     * Creates an instance of InvalidOperationError.\n     *\n     * @param {string} error - The error\n     *\n     * @memberOf InvalidOperationError\n     */\n    constructor(error) {\n        super(error);\n        this.name = \"InvalidOperation\";\n        this.message = error;\n    }\n}\nexports.InvalidOperationError = InvalidOperationError;\n/**\n * The error that is thrown when an object is disposed.\n *\n * @export\n * @class ObjectDisposedError\n * @extends {Error}\n */\nclass ObjectDisposedError extends Error {\n    /**\n     * Creates an instance of ObjectDisposedError.\n     *\n     * @param {string} objectName - The object that is disposed\n     * @param {string} error - The error\n     *\n     * @memberOf ObjectDisposedError\n     */\n    constructor(objectName, error) {\n        super(error);\n        this.name = objectName + \"ObjectDisposed\";\n        this.message = error;\n    }\n}\nexports.ObjectDisposedError = ObjectDisposedError;\n\n//# sourceMappingURL=Error.js.map\n","\"use strict\";\n/* eslint-disable @typescript-eslint/no-unsafe-return */\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionMessage = exports.MessageType = void 0;\nconst Error_js_1 = require(\"./Error.js\");\nconst Guid_js_1 = require(\"./Guid.js\");\nvar MessageType;\n(function (MessageType) {\n    MessageType[MessageType[\"Text\"] = 0] = \"Text\";\n    MessageType[MessageType[\"Binary\"] = 1] = \"Binary\";\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\nclass ConnectionMessage {\n    constructor(messageType, body, headers, id) {\n        this.privBody = null;\n        if (messageType === MessageType.Text && body && !(typeof (body) === \"string\")) {\n            throw new Error_js_1.InvalidOperationError(\"Payload must be a string\");\n        }\n        if (messageType === MessageType.Binary && body && !(body instanceof ArrayBuffer)) {\n            throw new Error_js_1.InvalidOperationError(\"Payload must be ArrayBuffer\");\n        }\n        this.privMessageType = messageType;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this.privBody = body;\n        this.privHeaders = headers ? headers : {};\n        this.privId = id ? id : (0, Guid_js_1.createNoDashGuid)();\n        switch (this.messageType) {\n            case MessageType.Binary:\n                this.privSize = this.binaryBody !== null ? this.binaryBody.byteLength : 0;\n                break;\n            case MessageType.Text:\n                this.privSize = this.textBody.length;\n        }\n    }\n    get messageType() {\n        return this.privMessageType;\n    }\n    get headers() {\n        return this.privHeaders;\n    }\n    get body() {\n        return this.privBody;\n    }\n    get textBody() {\n        if (this.privMessageType === MessageType.Binary) {\n            throw new Error_js_1.InvalidOperationError(\"Not supported for binary message\");\n        }\n        return this.privBody;\n    }\n    get binaryBody() {\n        if (this.privMessageType === MessageType.Text) {\n            throw new Error_js_1.InvalidOperationError(\"Not supported for text message\");\n        }\n        return this.privBody;\n    }\n    get id() {\n        return this.privId;\n    }\n}\nexports.ConnectionMessage = ConnectionMessage;\n\n//# sourceMappingURL=ConnectionMessage.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionOpenResponse = void 0;\nclass ConnectionOpenResponse {\n    constructor(statusCode, reason) {\n        this.privStatusCode = statusCode;\n        this.privReason = reason;\n    }\n    get statusCode() {\n        return this.privStatusCode;\n    }\n    get reason() {\n        return this.privReason;\n    }\n}\nexports.ConnectionOpenResponse = ConnectionOpenResponse;\n\n//# sourceMappingURL=ConnectionOpenResponse.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeferralMap = void 0;\n/**\n * The error that is thrown when an argument passed in is null.\n *\n * @export\n * @class DefferalMap\n */\nclass DeferralMap {\n    constructor() {\n        this.privMap = {};\n    }\n    add(id, deferral) {\n        this.privMap[id] = deferral;\n    }\n    getId(id) {\n        return this.privMap[id];\n    }\n    complete(id, result) {\n        try {\n            this.privMap[id].resolve(result);\n        }\n        catch (error) {\n            this.privMap[id].reject(error);\n        }\n        finally {\n            this.privMap[id] = undefined;\n        }\n    }\n}\nexports.DeferralMap = DeferralMap;\n\n//# sourceMappingURL=DeferralMap.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SendingAgentContextMessageEvent = exports.DialogEvent = void 0;\nconst PlatformEvent_js_1 = require(\"./PlatformEvent.js\");\nclass DialogEvent extends PlatformEvent_js_1.PlatformEvent {\n    constructor(eventName, eventType = PlatformEvent_js_1.EventType.Info) {\n        super(eventName, eventType);\n    }\n}\nexports.DialogEvent = DialogEvent;\nclass SendingAgentContextMessageEvent extends DialogEvent {\n    constructor(agentConfig) {\n        super(\"SendingAgentContextMessageEvent\");\n        this.privAgentConfig = agentConfig;\n    }\n    get agentConfig() {\n        return this.privAgentConfig;\n    }\n}\nexports.SendingAgentContextMessageEvent = SendingAgentContextMessageEvent;\n\n//# sourceMappingURL=DialogEvents.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventSource = void 0;\nconst Error_js_1 = require(\"./Error.js\");\nconst Guid_js_1 = require(\"./Guid.js\");\nclass EventSource {\n    constructor(metadata) {\n        this.privEventListeners = {};\n        this.privIsDisposed = false;\n        this.privConsoleListener = undefined;\n        this.privMetadata = metadata;\n    }\n    onEvent(event) {\n        if (this.isDisposed()) {\n            throw (new Error_js_1.ObjectDisposedError(\"EventSource\"));\n        }\n        if (this.metadata) {\n            for (const paramName in this.metadata) {\n                if (paramName) {\n                    if (event.metadata) {\n                        if (!event.metadata[paramName]) {\n                            event.metadata[paramName] = this.metadata[paramName];\n                        }\n                    }\n                }\n            }\n        }\n        for (const eventId in this.privEventListeners) {\n            if (eventId && this.privEventListeners[eventId]) {\n                this.privEventListeners[eventId](event);\n            }\n        }\n    }\n    attach(onEventCallback) {\n        const id = (0, Guid_js_1.createNoDashGuid)();\n        this.privEventListeners[id] = onEventCallback;\n        return {\n            detach: () => {\n                delete this.privEventListeners[id];\n                return Promise.resolve();\n            },\n        };\n    }\n    attachListener(listener) {\n        return this.attach((e) => listener.onEvent(e));\n    }\n    attachConsoleListener(listener) {\n        if (!!this.privConsoleListener) {\n            void this.privConsoleListener.detach(); // Detach implementation for eventListeners is synchronous\n        }\n        this.privConsoleListener = this.attach((e) => listener.onEvent(e));\n        return this.privConsoleListener;\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    dispose() {\n        this.privEventListeners = null;\n        this.privIsDisposed = true;\n    }\n    get metadata() {\n        return this.privMetadata;\n    }\n}\nexports.EventSource = EventSource;\n\n//# sourceMappingURL=EventSource.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Events = void 0;\nconst Error_js_1 = require(\"./Error.js\");\nconst EventSource_js_1 = require(\"./EventSource.js\");\nclass Events {\n    static setEventSource(eventSource) {\n        if (!eventSource) {\n            throw new Error_js_1.ArgumentNullError(\"eventSource\");\n        }\n        Events.privInstance = eventSource;\n    }\n    static get instance() {\n        return Events.privInstance;\n    }\n}\nexports.Events = Events;\nEvents.privInstance = new EventSource_js_1.EventSource();\n\n//# sourceMappingURL=Events.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=IAudioSource.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionState = void 0;\nvar ConnectionState;\n(function (ConnectionState) {\n    ConnectionState[ConnectionState[\"None\"] = 0] = \"None\";\n    ConnectionState[ConnectionState[\"Connected\"] = 1] = \"Connected\";\n    ConnectionState[ConnectionState[\"Connecting\"] = 2] = \"Connecting\";\n    ConnectionState[ConnectionState[\"Disconnected\"] = 3] = \"Disconnected\";\n})(ConnectionState = exports.ConnectionState || (exports.ConnectionState = {}));\n\n//# sourceMappingURL=IConnection.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=IDetachable.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=IDictionary.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=IDisposable.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=IEventListener.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=IEventSource.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=IErrorMessages.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=ITimer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=IWebsocketMessageFormatter.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.List = void 0;\nconst Error_js_1 = require(\"./Error.js\");\nclass List {\n    constructor(list) {\n        this.privSubscriptionIdCounter = 0;\n        this.privAddSubscriptions = {};\n        this.privRemoveSubscriptions = {};\n        this.privDisposedSubscriptions = {};\n        this.privDisposeReason = null;\n        this.privList = [];\n        // copy the list rather than taking as is.\n        if (list) {\n            for (const item of list) {\n                this.privList.push(item);\n            }\n        }\n    }\n    get(itemIndex) {\n        this.throwIfDisposed();\n        return this.privList[itemIndex];\n    }\n    first() {\n        return this.get(0);\n    }\n    last() {\n        return this.get(this.length() - 1);\n    }\n    add(item) {\n        this.throwIfDisposed();\n        this.insertAt(this.privList.length, item);\n    }\n    insertAt(index, item) {\n        this.throwIfDisposed();\n        if (index === 0) {\n            this.privList.unshift(item);\n        }\n        else if (index === this.privList.length) {\n            this.privList.push(item);\n        }\n        else {\n            this.privList.splice(index, 0, item);\n        }\n        this.triggerSubscriptions(this.privAddSubscriptions);\n    }\n    removeFirst() {\n        this.throwIfDisposed();\n        return this.removeAt(0);\n    }\n    removeLast() {\n        this.throwIfDisposed();\n        return this.removeAt(this.length() - 1);\n    }\n    removeAt(index) {\n        this.throwIfDisposed();\n        return this.remove(index, 1)[0];\n    }\n    remove(index, count) {\n        this.throwIfDisposed();\n        const removedElements = this.privList.splice(index, count);\n        this.triggerSubscriptions(this.privRemoveSubscriptions);\n        return removedElements;\n    }\n    clear() {\n        this.throwIfDisposed();\n        this.remove(0, this.length());\n    }\n    length() {\n        this.throwIfDisposed();\n        return this.privList.length;\n    }\n    onAdded(addedCallback) {\n        this.throwIfDisposed();\n        const subscriptionId = this.privSubscriptionIdCounter++;\n        this.privAddSubscriptions[subscriptionId] = addedCallback;\n        return {\n            detach: () => {\n                delete this.privAddSubscriptions[subscriptionId];\n                return Promise.resolve();\n            },\n        };\n    }\n    onRemoved(removedCallback) {\n        this.throwIfDisposed();\n        const subscriptionId = this.privSubscriptionIdCounter++;\n        this.privRemoveSubscriptions[subscriptionId] = removedCallback;\n        return {\n            detach: () => {\n                delete this.privRemoveSubscriptions[subscriptionId];\n                return Promise.resolve();\n            },\n        };\n    }\n    onDisposed(disposedCallback) {\n        this.throwIfDisposed();\n        const subscriptionId = this.privSubscriptionIdCounter++;\n        this.privDisposedSubscriptions[subscriptionId] = disposedCallback;\n        return {\n            detach: () => {\n                delete this.privDisposedSubscriptions[subscriptionId];\n                return Promise.resolve();\n            },\n        };\n    }\n    join(seperator) {\n        this.throwIfDisposed();\n        return this.privList.join(seperator);\n    }\n    toArray() {\n        const cloneCopy = Array();\n        this.privList.forEach((val) => {\n            cloneCopy.push(val);\n        });\n        return cloneCopy;\n    }\n    any(callback) {\n        this.throwIfDisposed();\n        if (callback) {\n            return this.where(callback).length() > 0;\n        }\n        else {\n            return this.length() > 0;\n        }\n    }\n    all(callback) {\n        this.throwIfDisposed();\n        return this.where(callback).length() === this.length();\n    }\n    forEach(callback) {\n        this.throwIfDisposed();\n        for (let i = 0; i < this.length(); i++) {\n            callback(this.privList[i], i);\n        }\n    }\n    select(callback) {\n        this.throwIfDisposed();\n        const selectList = [];\n        for (let i = 0; i < this.privList.length; i++) {\n            selectList.push(callback(this.privList[i], i));\n        }\n        return new List(selectList);\n    }\n    where(callback) {\n        this.throwIfDisposed();\n        const filteredList = new List();\n        for (let i = 0; i < this.privList.length; i++) {\n            if (callback(this.privList[i], i)) {\n                filteredList.add(this.privList[i]);\n            }\n        }\n        return filteredList;\n    }\n    orderBy(compareFn) {\n        this.throwIfDisposed();\n        const clonedArray = this.toArray();\n        const orderedArray = clonedArray.sort(compareFn);\n        return new List(orderedArray);\n    }\n    orderByDesc(compareFn) {\n        this.throwIfDisposed();\n        return this.orderBy((a, b) => compareFn(b, a));\n    }\n    clone() {\n        this.throwIfDisposed();\n        return new List(this.toArray());\n    }\n    concat(list) {\n        this.throwIfDisposed();\n        return new List(this.privList.concat(list.toArray()));\n    }\n    concatArray(array) {\n        this.throwIfDisposed();\n        return new List(this.privList.concat(array));\n    }\n    isDisposed() {\n        return this.privList == null;\n    }\n    dispose(reason) {\n        if (!this.isDisposed()) {\n            this.privDisposeReason = reason;\n            this.privList = null;\n            this.privAddSubscriptions = null;\n            this.privRemoveSubscriptions = null;\n            this.triggerSubscriptions(this.privDisposedSubscriptions);\n        }\n    }\n    throwIfDisposed() {\n        if (this.isDisposed()) {\n            throw new Error_js_1.ObjectDisposedError(\"List\", this.privDisposeReason);\n        }\n    }\n    triggerSubscriptions(subscriptions) {\n        if (subscriptions) {\n            for (const subscriptionId in subscriptions) {\n                if (subscriptionId) {\n                    subscriptions[subscriptionId]();\n                }\n            }\n        }\n    }\n}\nexports.List = List;\n\n//# sourceMappingURL=List.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.marshalPromiseToCallbacks = exports.Sink = exports.Deferred = exports.PromiseResultEventSource = exports.PromiseResult = exports.PromiseState = void 0;\n/* eslint-disable max-classes-per-file, @typescript-eslint/typedef */\nvar PromiseState;\n(function (PromiseState) {\n    PromiseState[PromiseState[\"None\"] = 0] = \"None\";\n    PromiseState[PromiseState[\"Resolved\"] = 1] = \"Resolved\";\n    PromiseState[PromiseState[\"Rejected\"] = 2] = \"Rejected\";\n})(PromiseState = exports.PromiseState || (exports.PromiseState = {}));\nclass PromiseResult {\n    constructor(promiseResultEventSource) {\n        this.throwIfError = () => {\n            if (this.isError) {\n                throw this.error;\n            }\n        };\n        promiseResultEventSource.on((result) => {\n            if (!this.privIsCompleted) {\n                this.privIsCompleted = true;\n                this.privIsError = false;\n                this.privResult = result;\n            }\n        }, (error) => {\n            if (!this.privIsCompleted) {\n                this.privIsCompleted = true;\n                this.privIsError = true;\n                this.privError = error;\n            }\n        });\n    }\n    get isCompleted() {\n        return this.privIsCompleted;\n    }\n    get isError() {\n        return this.privIsError;\n    }\n    get error() {\n        return this.privError;\n    }\n    get result() {\n        return this.privResult;\n    }\n}\nexports.PromiseResult = PromiseResult;\nclass PromiseResultEventSource {\n    constructor() {\n        this.setResult = (result) => {\n            this.privOnSetResult(result);\n        };\n        this.setError = (error) => {\n            this.privOnSetError(error);\n        };\n        this.on = (onSetResult, onSetError) => {\n            this.privOnSetResult = onSetResult;\n            this.privOnSetError = onSetError;\n        };\n    }\n}\nexports.PromiseResultEventSource = PromiseResultEventSource;\nclass Deferred {\n    constructor() {\n        this.resolve = (result) => {\n            this.privResolve(result);\n            return this;\n        };\n        this.reject = (error) => {\n            this.privReject(error);\n            return this;\n        };\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        this.privPromise = new Promise((resolve, reject) => {\n            this.privResolve = resolve;\n            this.privReject = reject;\n        });\n    }\n    get promise() {\n        return this.privPromise;\n    }\n}\nexports.Deferred = Deferred;\nclass Sink {\n    constructor() {\n        this.privState = PromiseState.None;\n        this.privPromiseResult = null;\n        this.privPromiseResultEvents = null;\n        this.privSuccessHandlers = [];\n        this.privErrorHandlers = [];\n        this.privPromiseResultEvents = new PromiseResultEventSource();\n        this.privPromiseResult = new PromiseResult(this.privPromiseResultEvents);\n    }\n    get state() {\n        return this.privState;\n    }\n    get result() {\n        return this.privPromiseResult;\n    }\n    resolve(result) {\n        if (this.privState !== PromiseState.None) {\n            throw new Error(\"'Cannot resolve a completed promise'\");\n        }\n        this.privState = PromiseState.Resolved;\n        this.privPromiseResultEvents.setResult(result);\n        for (let i = 0; i < this.privSuccessHandlers.length; i++) {\n            this.executeSuccessCallback(result, this.privSuccessHandlers[i], this.privErrorHandlers[i]);\n        }\n        this.detachHandlers();\n    }\n    reject(error) {\n        if (this.privState !== PromiseState.None) {\n            throw new Error(\"'Cannot reject a completed promise'\");\n        }\n        this.privState = PromiseState.Rejected;\n        this.privPromiseResultEvents.setError(error);\n        for (const errorHandler of this.privErrorHandlers) {\n            this.executeErrorCallback(error, errorHandler);\n        }\n        this.detachHandlers();\n    }\n    on(successCallback, errorCallback) {\n        if (successCallback == null) {\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            successCallback = () => { };\n        }\n        if (this.privState === PromiseState.None) {\n            this.privSuccessHandlers.push(successCallback);\n            this.privErrorHandlers.push(errorCallback);\n        }\n        else {\n            if (this.privState === PromiseState.Resolved) {\n                this.executeSuccessCallback(this.privPromiseResult.result, successCallback, errorCallback);\n            }\n            else if (this.privState === PromiseState.Rejected) {\n                this.executeErrorCallback(this.privPromiseResult.error, errorCallback);\n            }\n            this.detachHandlers();\n        }\n    }\n    executeSuccessCallback(result, successCallback, errorCallback) {\n        try {\n            successCallback(result);\n        }\n        catch (e) {\n            this.executeErrorCallback(`'Unhandled callback error: ${e}'`, errorCallback);\n        }\n    }\n    executeErrorCallback(error, errorCallback) {\n        if (errorCallback) {\n            try {\n                errorCallback(error);\n            }\n            catch (e) {\n                throw new Error(`'Unhandled callback error: ${e}. InnerError: ${error}'`);\n            }\n        }\n        else {\n            throw new Error(`'Unhandled error: ${error}'`);\n        }\n    }\n    detachHandlers() {\n        this.privErrorHandlers = [];\n        this.privSuccessHandlers = [];\n    }\n}\nexports.Sink = Sink;\n// eslint-disable-next-line prefer-arrow/prefer-arrow-functions\nfunction marshalPromiseToCallbacks(promise, cb, err) {\n    promise.then((val) => {\n        try {\n            if (!!cb) {\n                cb(val);\n            }\n        }\n        catch (error) {\n            if (!!err) {\n                try {\n                    if (error instanceof Error) {\n                        const typedError = error;\n                        err(typedError.name + \": \" + typedError.message);\n                    }\n                    else {\n                        err(error);\n                    }\n                    // eslint-disable-next-line no-empty\n                }\n                catch (error) { }\n            }\n        }\n    }, (error) => {\n        if (!!err) {\n            try {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n                // eslint-disable-next-line no-empty\n            }\n            catch (error) { }\n        }\n    });\n}\nexports.marshalPromiseToCallbacks = marshalPromiseToCallbacks;\n\n//# sourceMappingURL=Promise.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Queue = void 0;\nconst Error_js_1 = require(\"./Error.js\");\nconst List_js_1 = require(\"./List.js\");\nconst Promise_js_1 = require(\"./Promise.js\");\nvar SubscriberType;\n(function (SubscriberType) {\n    SubscriberType[SubscriberType[\"Dequeue\"] = 0] = \"Dequeue\";\n    SubscriberType[SubscriberType[\"Peek\"] = 1] = \"Peek\";\n})(SubscriberType || (SubscriberType = {}));\nclass Queue {\n    constructor(list) {\n        this.privPromiseStore = new List_js_1.List();\n        this.privIsDrainInProgress = false;\n        this.privIsDisposing = false;\n        this.privDisposeReason = null;\n        this.privList = list ? list : new List_js_1.List();\n        this.privDetachables = [];\n        this.privSubscribers = new List_js_1.List();\n        this.privDetachables.push(this.privList.onAdded(() => this.drain()));\n    }\n    enqueue(item) {\n        this.throwIfDispose();\n        this.enqueueFromPromise(new Promise((resolve) => resolve(item)));\n    }\n    enqueueFromPromise(promise) {\n        this.throwIfDispose();\n        promise.then((val) => {\n            this.privList.add(val);\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n        }, () => { });\n    }\n    dequeue() {\n        this.throwIfDispose();\n        const deferredSubscriber = new Promise_js_1.Deferred();\n        if (this.privSubscribers) {\n            this.privSubscribers.add({ deferral: deferredSubscriber, type: SubscriberType.Dequeue });\n            this.drain();\n        }\n        return deferredSubscriber.promise;\n    }\n    peek() {\n        this.throwIfDispose();\n        const deferredSubscriber = new Promise_js_1.Deferred();\n        const subs = this.privSubscribers;\n        if (subs) {\n            this.privSubscribers.add({ deferral: deferredSubscriber, type: SubscriberType.Peek });\n            this.drain();\n        }\n        return deferredSubscriber.promise;\n    }\n    length() {\n        this.throwIfDispose();\n        return this.privList.length();\n    }\n    isDisposed() {\n        return this.privSubscribers == null;\n    }\n    async drainAndDispose(pendingItemProcessor, reason) {\n        if (!this.isDisposed() && !this.privIsDisposing) {\n            this.privDisposeReason = reason;\n            this.privIsDisposing = true;\n            const subs = this.privSubscribers;\n            if (subs) {\n                while (subs.length() > 0) {\n                    const subscriber = subs.removeFirst();\n                    // TODO: this needs work (Resolve(null) instead?).\n                    subscriber.deferral.resolve(undefined);\n                    // subscriber.deferral.reject(\"Disposed\");\n                }\n                // note: this block assumes cooperative multitasking, i.e.,\n                // between the if-statement and the assignment there are no\n                // thread switches.\n                // Reason is that between the initial const = this.; and this\n                // point there is the derral.resolve() operation that might have\n                // caused recursive calls to the Queue, especially, calling\n                // Dispose() on the queue alredy (which would reset the var\n                // here to null!).\n                // That should generally hold true for javascript...\n                if (this.privSubscribers === subs) {\n                    this.privSubscribers = subs;\n                }\n            }\n            for (const detachable of this.privDetachables) {\n                await detachable.detach();\n            }\n            if (this.privPromiseStore.length() > 0 && pendingItemProcessor) {\n                const promiseArray = [];\n                this.privPromiseStore.toArray().forEach((wrapper) => {\n                    promiseArray.push(wrapper);\n                });\n                return Promise.all(promiseArray).finally(() => {\n                    this.privSubscribers = null;\n                    this.privList.forEach((item) => {\n                        pendingItemProcessor(item);\n                    });\n                    this.privList = null;\n                    return;\n                }).then();\n            }\n            else {\n                this.privSubscribers = null;\n                this.privList = null;\n            }\n        }\n    }\n    async dispose(reason) {\n        await this.drainAndDispose(null, reason);\n    }\n    drain() {\n        if (!this.privIsDrainInProgress && !this.privIsDisposing) {\n            this.privIsDrainInProgress = true;\n            const subs = this.privSubscribers;\n            const lists = this.privList;\n            if (subs && lists) {\n                while (lists.length() > 0 && subs.length() > 0 && !this.privIsDisposing) {\n                    const subscriber = subs.removeFirst();\n                    if (subscriber.type === SubscriberType.Peek) {\n                        subscriber.deferral.resolve(lists.first());\n                    }\n                    else {\n                        const dequeuedItem = lists.removeFirst();\n                        subscriber.deferral.resolve(dequeuedItem);\n                    }\n                }\n                // note: this block assumes cooperative multitasking, i.e.,\n                // between the if-statement and the assignment there are no\n                // thread switches.\n                // Reason is that between the initial const = this.; and this\n                // point there is the derral.resolve() operation that might have\n                // caused recursive calls to the Queue, especially, calling\n                // Dispose() on the queue alredy (which would reset the var\n                // here to null!).\n                // That should generally hold true for javascript...\n                if (this.privSubscribers === subs) {\n                    this.privSubscribers = subs;\n                }\n                // note: this block assumes cooperative multitasking, i.e.,\n                // between the if-statement and the assignment there are no\n                // thread switches.\n                // Reason is that between the initial const = this.; and this\n                // point there is the derral.resolve() operation that might have\n                // caused recursive calls to the Queue, especially, calling\n                // Dispose() on the queue alredy (which would reset the var\n                // here to null!).\n                // That should generally hold true for javascript...\n                if (this.privList === lists) {\n                    this.privList = lists;\n                }\n            }\n            this.privIsDrainInProgress = false;\n        }\n    }\n    throwIfDispose() {\n        if (this.isDisposed()) {\n            if (this.privDisposeReason) {\n                throw new Error_js_1.InvalidOperationError(this.privDisposeReason);\n            }\n            throw new Error_js_1.ObjectDisposedError(\"Queue\");\n        }\n        else if (this.privIsDisposing) {\n            throw new Error_js_1.InvalidOperationError(\"Queue disposing\");\n        }\n    }\n}\nexports.Queue = Queue;\n\n//# sourceMappingURL=Queue.js.map\n","\"use strict\";\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RawWebsocketMessage = void 0;\nconst ConnectionMessage_js_1 = require(\"./ConnectionMessage.js\");\nconst Error_js_1 = require(\"./Error.js\");\nconst Guid_js_1 = require(\"./Guid.js\");\nclass RawWebsocketMessage {\n    constructor(messageType, payload, id) {\n        this.privPayload = null;\n        if (!payload) {\n            throw new Error_js_1.ArgumentNullError(\"payload\");\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (messageType === ConnectionMessage_js_1.MessageType.Binary && Object.getPrototypeOf(payload).constructor.name !== \"ArrayBuffer\") {\n            throw new Error_js_1.InvalidOperationError(\"Payload must be ArrayBuffer\");\n        }\n        if (messageType === ConnectionMessage_js_1.MessageType.Text && !(typeof (payload) === \"string\")) {\n            throw new Error_js_1.InvalidOperationError(\"Payload must be a string\");\n        }\n        this.privMessageType = messageType;\n        this.privPayload = payload;\n        this.privId = id ? id : (0, Guid_js_1.createNoDashGuid)();\n    }\n    get messageType() {\n        return this.privMessageType;\n    }\n    get payload() {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return this.privPayload;\n    }\n    get textContent() {\n        if (this.privMessageType === ConnectionMessage_js_1.MessageType.Binary) {\n            throw new Error_js_1.InvalidOperationError(\"Not supported for binary message\");\n        }\n        return this.privPayload;\n    }\n    get binaryContent() {\n        if (this.privMessageType === ConnectionMessage_js_1.MessageType.Text) {\n            throw new Error_js_1.InvalidOperationError(\"Not supported for text message\");\n        }\n        return this.privPayload;\n    }\n    get id() {\n        return this.privId;\n    }\n}\nexports.RawWebsocketMessage = RawWebsocketMessage;\n\n//# sourceMappingURL=RawWebsocketMessage.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RiffPcmEncoder = void 0;\nclass RiffPcmEncoder {\n    constructor(actualSampleRate, desiredSampleRate) {\n        this.privActualSampleRate = actualSampleRate;\n        this.privDesiredSampleRate = desiredSampleRate;\n    }\n    encode(actualAudioFrame) {\n        const audioFrame = this.downSampleAudioFrame(actualAudioFrame, this.privActualSampleRate, this.privDesiredSampleRate);\n        if (!audioFrame) {\n            return null;\n        }\n        const audioLength = audioFrame.length * 2;\n        const buffer = new ArrayBuffer(audioLength);\n        const view = new DataView(buffer);\n        this.floatTo16BitPCM(view, 0, audioFrame);\n        return buffer;\n    }\n    setString(view, offset, str) {\n        for (let i = 0; i < str.length; i++) {\n            view.setUint8(offset + i, str.charCodeAt(i));\n        }\n    }\n    floatTo16BitPCM(view, offset, input) {\n        for (let i = 0; i < input.length; i++, offset += 2) {\n            const s = Math.max(-1, Math.min(1, input[i]));\n            view.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n        }\n    }\n    downSampleAudioFrame(srcFrame, srcRate, dstRate) {\n        if (!srcFrame) {\n            return null;\n        }\n        if (dstRate === srcRate || dstRate > srcRate) {\n            return srcFrame;\n        }\n        const ratio = srcRate / dstRate;\n        const dstLength = Math.round(srcFrame.length / ratio);\n        const dstFrame = new Float32Array(dstLength);\n        let srcOffset = 0;\n        let dstOffset = 0;\n        while (dstOffset < dstLength) {\n            const nextSrcOffset = Math.round((dstOffset + 1) * ratio);\n            let accum = 0;\n            let count = 0;\n            while (srcOffset < nextSrcOffset && srcOffset < srcFrame.length) {\n                accum += srcFrame[srcOffset++];\n                count++;\n            }\n            dstFrame[dstOffset++] = accum / count;\n        }\n        return dstFrame;\n    }\n}\nexports.RiffPcmEncoder = RiffPcmEncoder;\n\n//# sourceMappingURL=RiffPcmEncoder.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Stream = void 0;\nconst Error_js_1 = require(\"./Error.js\");\nconst Guid_js_1 = require(\"./Guid.js\");\nconst Queue_js_1 = require(\"./Queue.js\");\nclass Stream {\n    constructor(streamId) {\n        this.privIsWriteEnded = false;\n        this.privIsReadEnded = false;\n        this.privId = streamId ? streamId : (0, Guid_js_1.createNoDashGuid)();\n        this.privReaderQueue = new Queue_js_1.Queue();\n    }\n    get isClosed() {\n        return this.privIsWriteEnded;\n    }\n    get isReadEnded() {\n        return this.privIsReadEnded;\n    }\n    get id() {\n        return this.privId;\n    }\n    close() {\n        if (!this.privIsWriteEnded) {\n            this.writeStreamChunk({\n                buffer: null,\n                isEnd: true,\n                timeReceived: Date.now(),\n            });\n            this.privIsWriteEnded = true;\n        }\n    }\n    writeStreamChunk(streamChunk) {\n        this.throwIfClosed();\n        if (!this.privReaderQueue.isDisposed()) {\n            try {\n                this.privReaderQueue.enqueue(streamChunk);\n            }\n            catch (e) {\n                // Do nothing\n            }\n        }\n    }\n    read() {\n        if (this.privIsReadEnded) {\n            throw new Error_js_1.InvalidOperationError(\"Stream read has already finished\");\n        }\n        return this.privReaderQueue\n            .dequeue()\n            .then(async (streamChunk) => {\n            if (streamChunk === undefined || streamChunk.isEnd) {\n                await this.privReaderQueue.dispose(\"End of stream reached\");\n            }\n            return streamChunk;\n        });\n    }\n    readEnded() {\n        if (!this.privIsReadEnded) {\n            this.privIsReadEnded = true;\n            this.privReaderQueue = new Queue_js_1.Queue();\n        }\n    }\n    throwIfClosed() {\n        if (this.privIsWriteEnded) {\n            throw new Error_js_1.InvalidOperationError(\"Stream closed\");\n        }\n    }\n}\nexports.Stream = Stream;\n\n//# sourceMappingURL=Stream.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationStatus = void 0;\n/**\n * Defines translation status.\n * @class TranslationStatus\n */\nvar TranslationStatus;\n(function (TranslationStatus) {\n    /**\n     * @member TranslationStatus.Success\n     */\n    TranslationStatus[TranslationStatus[\"Success\"] = 0] = \"Success\";\n    /**\n     * @member TranslationStatus.Error\n     */\n    TranslationStatus[TranslationStatus[\"Error\"] = 1] = \"Error\";\n})(TranslationStatus = exports.TranslationStatus || (exports.TranslationStatus = {}));\n\n//# sourceMappingURL=TranslationStatus.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChunkedArrayBufferStream = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\nclass ChunkedArrayBufferStream extends Exports_js_1.Stream {\n    constructor(targetChunkSize, streamId) {\n        super(streamId);\n        this.privTargetChunkSize = Math.round(targetChunkSize);\n        this.privNextBufferReadyBytes = 0;\n    }\n    writeStreamChunk(chunk) {\n        // No pending write, and the buffer is the right size so write it.\n        if (chunk.isEnd ||\n            (0 === this.privNextBufferReadyBytes && chunk.buffer.byteLength === this.privTargetChunkSize)) {\n            super.writeStreamChunk(chunk);\n            return;\n        }\n        let bytesCopiedFromBuffer = 0;\n        while (bytesCopiedFromBuffer < chunk.buffer.byteLength) {\n            // Fill the next buffer.\n            if (undefined === this.privNextBufferToWrite) {\n                this.privNextBufferToWrite = new ArrayBuffer(this.privTargetChunkSize);\n                this.privNextBufferStartTime = chunk.timeReceived;\n            }\n            // Find out how many bytes we can copy into the read buffer.\n            const bytesToCopy = Math.min(chunk.buffer.byteLength - bytesCopiedFromBuffer, this.privTargetChunkSize - this.privNextBufferReadyBytes);\n            const targetView = new Uint8Array(this.privNextBufferToWrite);\n            const sourceView = new Uint8Array(chunk.buffer.slice(bytesCopiedFromBuffer, bytesToCopy + bytesCopiedFromBuffer));\n            targetView.set(sourceView, this.privNextBufferReadyBytes);\n            this.privNextBufferReadyBytes += bytesToCopy;\n            bytesCopiedFromBuffer += bytesToCopy;\n            // Are we ready to write?\n            if (this.privNextBufferReadyBytes === this.privTargetChunkSize) {\n                super.writeStreamChunk({\n                    buffer: this.privNextBufferToWrite,\n                    isEnd: false,\n                    timeReceived: this.privNextBufferStartTime,\n                });\n                this.privNextBufferReadyBytes = 0;\n                this.privNextBufferToWrite = undefined;\n            }\n        }\n    }\n    close() {\n        // Send whatever is pending, then close the base class.\n        if (0 !== this.privNextBufferReadyBytes && !this.isClosed) {\n            super.writeStreamChunk({\n                buffer: this.privNextBufferToWrite.slice(0, this.privNextBufferReadyBytes),\n                isEnd: false,\n                timeReceived: this.privNextBufferStartTime,\n            });\n        }\n        super.close();\n    }\n}\nexports.ChunkedArrayBufferStream = ChunkedArrayBufferStream;\n\n//# sourceMappingURL=ChunkedArrayBufferStream.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=IAudioDestination.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Timeout = void 0;\nclass Timeout {\n    static load() {\n        // Prefilling the Maps with a function indexed by zero is necessary to be compliant with the specification.\n        const scheduledTimeoutFunctions = new Map([[0, () => { }]]); // eslint-disable-line @typescript-eslint/no-empty-function\n        const unhandledRequests = new Map();\n        // eslint-disable-next-line\n        const workerScript = `!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=14)}([function(e,t,n){\"use strict\";n.d(t,\"a\",(function(){return i})),n.d(t,\"b\",(function(){return u})),n.d(t,\"c\",(function(){return a})),n.d(t,\"d\",(function(){return d}));const r=new Map,o=new Map,i=e=>{const t=r.get(e);if(void 0===t)throw new Error('There is no interval scheduled with the given id \"'.concat(e,'\".'));clearTimeout(t),r.delete(e)},u=e=>{const t=o.get(e);if(void 0===t)throw new Error('There is no timeout scheduled with the given id \"'.concat(e,'\".'));clearTimeout(t),o.delete(e)},f=(e,t)=>{let n,r;if(\"performance\"in self){const o=performance.now();n=o,r=e-Math.max(0,o-t)}else n=Date.now(),r=e;return{expected:n+r,remainingDelay:r}},c=(e,t,n,r)=>{const o=\"performance\"in self?performance.now():Date.now();o>n?postMessage({id:null,method:\"call\",params:{timerId:t}}):e.set(t,setTimeout(c,n-o,e,t,n))},a=(e,t,n)=>{const{expected:o,remainingDelay:i}=f(e,n);r.set(t,setTimeout(c,i,r,t,o))},d=(e,t,n)=>{const{expected:r,remainingDelay:i}=f(e,n);o.set(t,setTimeout(c,i,o,t,r))}},function(e,t,n){\"use strict\";n.r(t);var r=n(2);for(var o in r)\"default\"!==o&&function(e){n.d(t,e,(function(){return r[e]}))}(o);var i=n(3);for(var o in i)\"default\"!==o&&function(e){n.d(t,e,(function(){return i[e]}))}(o);var u=n(4);for(var o in u)\"default\"!==o&&function(e){n.d(t,e,(function(){return u[e]}))}(o);var f=n(5);for(var o in f)\"default\"!==o&&function(e){n.d(t,e,(function(){return f[e]}))}(o);var c=n(6);for(var o in c)\"default\"!==o&&function(e){n.d(t,e,(function(){return c[e]}))}(o);var a=n(7);for(var o in a)\"default\"!==o&&function(e){n.d(t,e,(function(){return a[e]}))}(o);var d=n(8);for(var o in d)\"default\"!==o&&function(e){n.d(t,e,(function(){return d[e]}))}(o);var s=n(9);for(var o in s)\"default\"!==o&&function(e){n.d(t,e,(function(){return s[e]}))}(o)},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t,n){\"use strict\";n.r(t);var r=n(11);for(var o in r)\"default\"!==o&&function(e){n.d(t,e,(function(){return r[e]}))}(o);var i=n(12);for(var o in i)\"default\"!==o&&function(e){n.d(t,e,(function(){return i[e]}))}(o);var u=n(13);for(var o in u)\"default\"!==o&&function(e){n.d(t,e,(function(){return u[e]}))}(o)},function(e,t){},function(e,t){},function(e,t){},function(e,t,n){\"use strict\";n.r(t);var r=n(0),o=n(1);for(var i in o)\"default\"!==i&&function(e){n.d(t,e,(function(){return o[e]}))}(i);var u=n(10);for(var i in u)\"default\"!==i&&function(e){n.d(t,e,(function(){return u[e]}))}(i);addEventListener(\"message\",({data:e})=>{try{if(\"clear\"===e.method){const{id:t,params:{timerId:n}}=e;Object(r.b)(n),postMessage({error:null,id:t})}else{if(\"set\"!==e.method)throw new Error('The given method \"'.concat(e.method,'\" is not supported'));{const{params:{delay:t,now:n,timerId:o}}=e;Object(r.d)(t,o,n)}}}catch(t){postMessage({error:{message:t.message},id:e.id,result:null})}})}]);`;\n        const workerUrl = \"data:text/javascript;base64,\" + btoa(workerScript);\n        const worker = new Worker(workerUrl);\n        worker.addEventListener(\"message\", ({ data }) => {\n            if (Timeout.isCallNotification(data)) {\n                const { params: { timerId } } = data;\n                const idOrFunc = scheduledTimeoutFunctions.get(timerId);\n                if (typeof idOrFunc === \"number\") {\n                    const unhandledTimerId = unhandledRequests.get(idOrFunc);\n                    if (unhandledTimerId === undefined ||\n                        unhandledTimerId !== timerId) {\n                        throw new Error(\"The timer is in an undefined state.\");\n                    }\n                }\n                else if (typeof idOrFunc !== \"undefined\") {\n                    idOrFunc();\n                    // A timeout can be safely deleted because it is only called once.\n                    scheduledTimeoutFunctions.delete(timerId);\n                }\n                else {\n                    throw new Error(\"The timer is in an undefined state.\");\n                }\n            }\n            else if (Timeout.isClearResponse(data)) {\n                const { id } = data;\n                const unhandledTimerId = unhandledRequests.get(id);\n                if (unhandledTimerId === undefined) {\n                    throw new Error(\"The timer is in an undefined state.\");\n                }\n                unhandledRequests.delete(id);\n                scheduledTimeoutFunctions.delete(unhandledTimerId);\n            }\n            else {\n                const { error: { message } } = data;\n                throw new Error(message);\n            }\n        });\n        const clearTimeout = (timerId) => {\n            const id = Math.random();\n            unhandledRequests.set(id, timerId);\n            scheduledTimeoutFunctions.set(timerId, id);\n            worker.postMessage({\n                id,\n                method: \"clear\",\n                params: { timerId }\n            });\n        };\n        const setTimeout = (func, delay) => {\n            const timerId = Math.random();\n            scheduledTimeoutFunctions.set(timerId, func);\n            worker.postMessage({\n                id: null,\n                method: \"set\",\n                params: {\n                    delay,\n                    now: performance.now(),\n                    timerId\n                }\n            });\n            return timerId;\n        };\n        return {\n            clearTimeout,\n            setTimeout\n        };\n    }\n    static loadWorkerTimers() {\n        return () => {\n            if (Timeout.workerTimers !== null) {\n                return Timeout.workerTimers;\n            }\n            Timeout.workerTimers = Timeout.load();\n            return Timeout.workerTimers;\n        };\n    }\n    static isCallNotification(message) {\n        return message.method !== undefined && message.method === \"call\";\n    }\n    static isClearResponse(message) {\n        return message.error === null && typeof message.id === \"number\";\n    }\n}\nexports.Timeout = Timeout;\nTimeout.workerTimers = null;\nTimeout.clearTimeout = (timerId) => Timeout.timers().clearTimeout(timerId);\nTimeout.setTimeout = (func, delay) => Timeout.timers().setTimeout(func, delay);\nTimeout.timers = Timeout.loadWorkerTimers();\n\n//# sourceMappingURL=Timeout.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OCSPCacheUpdateErrorEvent = exports.OCSPResponseRetrievedEvent = exports.OCSPCacheFetchErrorEvent = exports.OCSPVerificationFailedEvent = exports.OCSPCacheHitEvent = exports.OCSPCacheEntryNeedsRefreshEvent = exports.OCSPCacheEntryExpiredEvent = exports.OCSPWSUpgradeStartedEvent = exports.OCSPStapleReceivedEvent = exports.OCSPCacheUpdateCompleteEvent = exports.OCSPDiskCacheStoreEvent = exports.OCSPMemoryCacheStoreEvent = exports.OCSPCacheUpdateNeededEvent = exports.OCSPDiskCacheHitEvent = exports.OCSPCacheMissEvent = exports.OCSPMemoryCacheHitEvent = exports.OCSPEvent = void 0;\n/* eslint-disable max-classes-per-file */\nconst PlatformEvent_js_1 = require(\"./PlatformEvent.js\");\nclass OCSPEvent extends PlatformEvent_js_1.PlatformEvent {\n    constructor(eventName, eventType, signature) {\n        super(eventName, eventType);\n        this.privSignature = signature;\n    }\n}\nexports.OCSPEvent = OCSPEvent;\nclass OCSPMemoryCacheHitEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPMemoryCacheHitEvent\", PlatformEvent_js_1.EventType.Debug, signature);\n    }\n}\nexports.OCSPMemoryCacheHitEvent = OCSPMemoryCacheHitEvent;\nclass OCSPCacheMissEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPCacheMissEvent\", PlatformEvent_js_1.EventType.Debug, signature);\n    }\n}\nexports.OCSPCacheMissEvent = OCSPCacheMissEvent;\nclass OCSPDiskCacheHitEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPDiskCacheHitEvent\", PlatformEvent_js_1.EventType.Debug, signature);\n    }\n}\nexports.OCSPDiskCacheHitEvent = OCSPDiskCacheHitEvent;\nclass OCSPCacheUpdateNeededEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPCacheUpdateNeededEvent\", PlatformEvent_js_1.EventType.Debug, signature);\n    }\n}\nexports.OCSPCacheUpdateNeededEvent = OCSPCacheUpdateNeededEvent;\nclass OCSPMemoryCacheStoreEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPMemoryCacheStoreEvent\", PlatformEvent_js_1.EventType.Debug, signature);\n    }\n}\nexports.OCSPMemoryCacheStoreEvent = OCSPMemoryCacheStoreEvent;\nclass OCSPDiskCacheStoreEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPDiskCacheStoreEvent\", PlatformEvent_js_1.EventType.Debug, signature);\n    }\n}\nexports.OCSPDiskCacheStoreEvent = OCSPDiskCacheStoreEvent;\nclass OCSPCacheUpdateCompleteEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPCacheUpdateCompleteEvent\", PlatformEvent_js_1.EventType.Debug, signature);\n    }\n}\nexports.OCSPCacheUpdateCompleteEvent = OCSPCacheUpdateCompleteEvent;\nclass OCSPStapleReceivedEvent extends OCSPEvent {\n    constructor() {\n        super(\"OCSPStapleReceivedEvent\", PlatformEvent_js_1.EventType.Debug, \"\");\n    }\n}\nexports.OCSPStapleReceivedEvent = OCSPStapleReceivedEvent;\nclass OCSPWSUpgradeStartedEvent extends OCSPEvent {\n    constructor(serialNumber) {\n        super(\"OCSPWSUpgradeStartedEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n    }\n}\nexports.OCSPWSUpgradeStartedEvent = OCSPWSUpgradeStartedEvent;\nclass OCSPCacheEntryExpiredEvent extends OCSPEvent {\n    constructor(serialNumber, expireTime) {\n        super(\"OCSPCacheEntryExpiredEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n        this.privExpireTime = expireTime;\n    }\n}\nexports.OCSPCacheEntryExpiredEvent = OCSPCacheEntryExpiredEvent;\nclass OCSPCacheEntryNeedsRefreshEvent extends OCSPEvent {\n    constructor(serialNumber, startTime, expireTime) {\n        super(\"OCSPCacheEntryNeedsRefreshEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n        this.privExpireTime = expireTime;\n        this.privStartTime = startTime;\n    }\n}\nexports.OCSPCacheEntryNeedsRefreshEvent = OCSPCacheEntryNeedsRefreshEvent;\nclass OCSPCacheHitEvent extends OCSPEvent {\n    constructor(serialNumber, startTime, expireTime) {\n        super(\"OCSPCacheHitEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n        this.privExpireTime = expireTime;\n        this.privExpireTimeString = new Date(expireTime).toLocaleDateString();\n        this.privStartTime = startTime;\n        this.privStartTimeString = new Date(startTime).toLocaleTimeString();\n    }\n}\nexports.OCSPCacheHitEvent = OCSPCacheHitEvent;\nclass OCSPVerificationFailedEvent extends OCSPEvent {\n    constructor(serialNumber, error) {\n        super(\"OCSPVerificationFailedEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n        this.privError = error;\n    }\n}\nexports.OCSPVerificationFailedEvent = OCSPVerificationFailedEvent;\nclass OCSPCacheFetchErrorEvent extends OCSPEvent {\n    constructor(serialNumber, error) {\n        super(\"OCSPCacheFetchErrorEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n        this.privError = error;\n    }\n}\nexports.OCSPCacheFetchErrorEvent = OCSPCacheFetchErrorEvent;\nclass OCSPResponseRetrievedEvent extends OCSPEvent {\n    constructor(serialNumber) {\n        super(\"OCSPResponseRetrievedEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n    }\n}\nexports.OCSPResponseRetrievedEvent = OCSPResponseRetrievedEvent;\nclass OCSPCacheUpdateErrorEvent extends OCSPEvent {\n    constructor(serialNumber, error) {\n        super(\"OCSPCacheUpdateErrorEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n        this.privError = error;\n    }\n}\nexports.OCSPCacheUpdateErrorEvent = OCSPCacheUpdateErrorEvent;\n\n//# sourceMappingURL=OCSPEvents.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BackgroundEvent = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\nclass BackgroundEvent extends Exports_js_1.PlatformEvent {\n    constructor(error) {\n        super(\"BackgroundEvent\", Exports_js_1.EventType.Error);\n        this.privError = error;\n    }\n    get error() {\n        return this.privError;\n    }\n}\nexports.BackgroundEvent = BackgroundEvent;\n\n//# sourceMappingURL=BackgroundError.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationStatus = void 0;\n__exportStar(require(\"./AudioSourceEvents.js\"), exports);\n__exportStar(require(\"./ConnectionEvents.js\"), exports);\n__exportStar(require(\"./ConnectionMessage.js\"), exports);\n__exportStar(require(\"./ConnectionOpenResponse.js\"), exports);\n__exportStar(require(\"./DeferralMap.js\"), exports);\n__exportStar(require(\"./DialogEvents.js\"), exports);\n__exportStar(require(\"./Error.js\"), exports);\n__exportStar(require(\"./Events.js\"), exports);\n__exportStar(require(\"./EventSource.js\"), exports);\n__exportStar(require(\"./Guid.js\"), exports);\n__exportStar(require(\"./IAudioSource.js\"), exports);\n__exportStar(require(\"./IConnection.js\"), exports);\n__exportStar(require(\"./IDetachable.js\"), exports);\n__exportStar(require(\"./IDictionary.js\"), exports);\n__exportStar(require(\"./IDisposable.js\"), exports);\n__exportStar(require(\"./IEventListener.js\"), exports);\n__exportStar(require(\"./IEventSource.js\"), exports);\n__exportStar(require(\"./IErrorMessages.js\"), exports);\n__exportStar(require(\"./ITimer.js\"), exports);\n__exportStar(require(\"./IWebsocketMessageFormatter.js\"), exports);\n__exportStar(require(\"./List.js\"), exports);\n__exportStar(require(\"./PlatformEvent.js\"), exports);\n__exportStar(require(\"./Promise.js\"), exports);\n__exportStar(require(\"./Queue.js\"), exports);\n__exportStar(require(\"./RawWebsocketMessage.js\"), exports);\n__exportStar(require(\"./RiffPcmEncoder.js\"), exports);\n__exportStar(require(\"./Stream.js\"), exports);\nvar TranslationStatus_js_1 = require(\"../common.speech/TranslationStatus.js\");\nObject.defineProperty(exports, \"TranslationStatus\", { enumerable: true, get: function () { return TranslationStatus_js_1.TranslationStatus; } });\n__exportStar(require(\"./ChunkedArrayBufferStream.js\"), exports);\n__exportStar(require(\"./IAudioDestination.js\"), exports);\n__exportStar(require(\"./Timeout.js\"), exports);\n__exportStar(require(\"./OCSPEvents.js\"), exports);\n__exportStar(require(\"./BackgroundError.js\"), exports);\n\n//# sourceMappingURL=Exports.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HeaderNames = void 0;\nclass HeaderNames {\n}\nexports.HeaderNames = HeaderNames;\nHeaderNames.AuthKey = \"Ocp-Apim-Subscription-Key\";\nHeaderNames.Authorization = \"Authorization\";\nHeaderNames.SpIDAuthKey = \"Apim-Subscription-Id\";\nHeaderNames.ConnectionId = \"X-ConnectionId\";\nHeaderNames.ContentType = \"Content-Type\";\nHeaderNames.CustomCommandsAppId = \"X-CommandsAppId\";\nHeaderNames.Path = \"Path\";\nHeaderNames.RequestId = \"X-RequestId\";\nHeaderNames.RequestStreamId = \"X-StreamId\";\nHeaderNames.RequestTimestamp = \"X-Timestamp\";\n\n//# sourceMappingURL=HeaderNames.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthInfo = void 0;\nclass AuthInfo {\n    constructor(headerName, token) {\n        this.privHeaderName = headerName;\n        this.privToken = token;\n    }\n    get headerName() {\n        return this.privHeaderName;\n    }\n    get token() {\n        return this.privToken;\n    }\n}\nexports.AuthInfo = AuthInfo;\n\n//# sourceMappingURL=IAuthentication.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CognitiveSubscriptionKeyAuthentication = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\nconst IAuthentication_js_1 = require(\"./IAuthentication.js\");\n/**\n * @class\n */\nclass CognitiveSubscriptionKeyAuthentication {\n    /**\n     * Creates and initializes an instance of the CognitiveSubscriptionKeyAuthentication class.\n     * @constructor\n     * @param {string} subscriptionKey - The subscription key\n     */\n    constructor(subscriptionKey) {\n        if (!subscriptionKey) {\n            throw new Exports_js_1.ArgumentNullError(\"subscriptionKey\");\n        }\n        this.privAuthInfo = new IAuthentication_js_1.AuthInfo(HeaderNames_js_1.HeaderNames.AuthKey, subscriptionKey);\n    }\n    /**\n     * Fetches the subscription key.\n     * @member\n     * @function\n     * @public\n     * @param {string} authFetchEventId - The id to fetch.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    fetch(authFetchEventId) {\n        return Promise.resolve(this.privAuthInfo);\n    }\n    /**\n     * Fetches the subscription key.\n     * @member\n     * @function\n     * @public\n     * @param {string} authFetchEventId - The id to fetch.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    fetchOnExpiry(authFetchEventId) {\n        return Promise.resolve(this.privAuthInfo);\n    }\n}\nexports.CognitiveSubscriptionKeyAuthentication = CognitiveSubscriptionKeyAuthentication;\n\n//# sourceMappingURL=CognitiveSubscriptionKeyAuthentication.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CognitiveTokenAuthentication = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst IAuthentication_js_1 = require(\"./IAuthentication.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\nclass CognitiveTokenAuthentication {\n    constructor(fetchCallback, fetchOnExpiryCallback) {\n        if (!fetchCallback) {\n            throw new Exports_js_1.ArgumentNullError(\"fetchCallback\");\n        }\n        if (!fetchOnExpiryCallback) {\n            throw new Exports_js_1.ArgumentNullError(\"fetchOnExpiryCallback\");\n        }\n        this.privFetchCallback = fetchCallback;\n        this.privFetchOnExpiryCallback = fetchOnExpiryCallback;\n    }\n    fetch(authFetchEventId) {\n        return this.privFetchCallback(authFetchEventId).then((token) => new IAuthentication_js_1.AuthInfo(HeaderNames_js_1.HeaderNames.Authorization, token === undefined ? undefined : CognitiveTokenAuthentication.privTokenPrefix + token));\n    }\n    fetchOnExpiry(authFetchEventId) {\n        return this.privFetchOnExpiryCallback(authFetchEventId).then((token) => new IAuthentication_js_1.AuthInfo(HeaderNames_js_1.HeaderNames.Authorization, token === undefined ? undefined : CognitiveTokenAuthentication.privTokenPrefix + token));\n    }\n}\nexports.CognitiveTokenAuthentication = CognitiveTokenAuthentication;\nCognitiveTokenAuthentication.privTokenPrefix = \"Bearer \";\n\n//# sourceMappingURL=CognitiveTokenAuthentication.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=IConnectionFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=ISynthesisConnectionFactory.js.map\n","export default {}","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogLevel = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nObject.defineProperty(exports, \"LogLevel\", { enumerable: true, get: function () { return Exports_js_1.EventType; } });\n\n//# sourceMappingURL=LogLevel.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Contracts = void 0;\n/**\n * @class Contracts\n * @private\n */\nclass Contracts {\n    static throwIfNullOrUndefined(param, name) {\n        if (param === undefined || param === null) {\n            throw new Error(\"throwIfNullOrUndefined:\" + name);\n        }\n    }\n    static throwIfNull(param, name) {\n        if (param === null) {\n            throw new Error(\"throwIfNull:\" + name);\n        }\n    }\n    static throwIfNullOrWhitespace(param, name) {\n        Contracts.throwIfNullOrUndefined(param, name);\n        if ((\"\" + param).trim().length < 1) {\n            throw new Error(\"throwIfNullOrWhitespace:\" + name);\n        }\n    }\n    static throwIfNullOrTooLong(param, name, maxLength) {\n        Contracts.throwIfNullOrUndefined(param, name);\n        if ((\"\" + param).length > maxLength) {\n            throw new Error(\"throwIfNullOrTooLong:\" + name + \" (more than \" + maxLength.toString() + \" characters)\");\n        }\n    }\n    static throwIfNullOrTooShort(param, name, minLength) {\n        Contracts.throwIfNullOrUndefined(param, name);\n        if ((\"\" + param).length < minLength) {\n            throw new Error(\"throwIfNullOrTooShort:\" + name + \" (less than \" + minLength.toString() + \" characters)\");\n        }\n    }\n    static throwIfDisposed(isDisposed) {\n        if (isDisposed) {\n            throw new Error(\"the object is already disposed\");\n        }\n    }\n    static throwIfArrayEmptyOrWhitespace(array, name) {\n        Contracts.throwIfNullOrUndefined(array, name);\n        if (array.length === 0) {\n            throw new Error(\"throwIfArrayEmptyOrWhitespace:\" + name);\n        }\n        for (const item of array) {\n            Contracts.throwIfNullOrWhitespace(item, name);\n        }\n    }\n    static throwIfFileDoesNotExist(param, name) {\n        Contracts.throwIfNullOrWhitespace(param, name);\n        // TODO check for file existence.\n    }\n    static throwIfNotUndefined(param, name) {\n        if (param !== undefined) {\n            throw new Error(\"throwIfNotUndefined:\" + name);\n        }\n    }\n}\nexports.Contracts = Contracts;\n\n//# sourceMappingURL=Contracts.js.map\n","\"use strict\";\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConsoleLoggingListener = void 0;\nconst fs = __importStar(require(\"fs\"));\nconst LogLevel_js_1 = require(\"../sdk/LogLevel.js\");\nconst Contracts_js_1 = require(\"../sdk/Contracts.js\");\nclass ConsoleLoggingListener {\n    constructor(logLevelFilter = LogLevel_js_1.LogLevel.None) {\n        this.privLogPath = undefined;\n        this.privEnableConsoleOutput = true;\n        this.privLogLevelFilter = logLevelFilter;\n    }\n    set logPath(path) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(fs.openSync, \"\\nFile System access not available\");\n        this.privLogPath = path;\n    }\n    set enableConsoleOutput(enableOutput) {\n        this.privEnableConsoleOutput = enableOutput;\n    }\n    onEvent(event) {\n        if (event.eventType >= this.privLogLevelFilter) {\n            const log = this.toString(event);\n            if (!!this.logCallback) {\n                this.logCallback(log);\n            }\n            if (!!this.privLogPath) {\n                fs.writeFileSync(this.privLogPath, log + \"\\n\", { flag: \"a+\" });\n            }\n            if (this.privEnableConsoleOutput) {\n                switch (event.eventType) {\n                    case LogLevel_js_1.LogLevel.Debug:\n                        // eslint-disable-next-line no-console\n                        console.debug(log);\n                        break;\n                    case LogLevel_js_1.LogLevel.Info:\n                        // eslint-disable-next-line no-console\n                        console.info(log);\n                        break;\n                    case LogLevel_js_1.LogLevel.Warning:\n                        // eslint-disable-next-line no-console\n                        console.warn(log);\n                        break;\n                    case LogLevel_js_1.LogLevel.Error:\n                        // eslint-disable-next-line no-console\n                        console.error(log);\n                        break;\n                    default:\n                        // eslint-disable-next-line no-console\n                        console.log(log);\n                        break;\n                }\n            }\n        }\n    }\n    toString(event) {\n        const logFragments = [\n            `${event.eventTime}`,\n            `${event.name}`,\n        ];\n        const e = event;\n        for (const prop in e) {\n            if (prop && event.hasOwnProperty(prop) &&\n                prop !== \"eventTime\" && prop !== \"eventType\" &&\n                prop !== \"eventId\" && prop !== \"name\" &&\n                prop !== \"constructor\") {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                const value = e[prop];\n                let valueToLog = \"<NULL>\";\n                if (value !== undefined && value !== null) {\n                    if (typeof (value) === \"number\" || typeof (value) === \"string\") {\n                        valueToLog = value.toString();\n                    }\n                    else {\n                        valueToLog = JSON.stringify(value);\n                    }\n                }\n                logFragments.push(`${prop}: ${valueToLog}`);\n            }\n        }\n        return logFragments.join(\" | \");\n    }\n}\nexports.ConsoleLoggingListener = ConsoleLoggingListener;\n\n//# sourceMappingURL=ConsoleLoggingListener.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=IRecorder.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AudioStreamFormatImpl = exports.AudioStreamFormat = exports.AudioFormatTag = void 0;\n// eslint-disable-next-line max-classes-per-file\nvar AudioFormatTag;\n(function (AudioFormatTag) {\n    AudioFormatTag[AudioFormatTag[\"PCM\"] = 1] = \"PCM\";\n    AudioFormatTag[AudioFormatTag[\"MuLaw\"] = 2] = \"MuLaw\";\n    AudioFormatTag[AudioFormatTag[\"Siren\"] = 3] = \"Siren\";\n    AudioFormatTag[AudioFormatTag[\"MP3\"] = 4] = \"MP3\";\n    AudioFormatTag[AudioFormatTag[\"SILKSkype\"] = 5] = \"SILKSkype\";\n    AudioFormatTag[AudioFormatTag[\"OGG_OPUS\"] = 6] = \"OGG_OPUS\";\n    AudioFormatTag[AudioFormatTag[\"WEBM_OPUS\"] = 7] = \"WEBM_OPUS\";\n    AudioFormatTag[AudioFormatTag[\"ALaw\"] = 8] = \"ALaw\";\n    AudioFormatTag[AudioFormatTag[\"FLAC\"] = 9] = \"FLAC\";\n    AudioFormatTag[AudioFormatTag[\"OPUS\"] = 10] = \"OPUS\";\n    AudioFormatTag[AudioFormatTag[\"AMR_WB\"] = 11] = \"AMR_WB\";\n    AudioFormatTag[AudioFormatTag[\"G722\"] = 12] = \"G722\";\n})(AudioFormatTag = exports.AudioFormatTag || (exports.AudioFormatTag = {}));\n/**\n * Represents audio stream format used for custom audio input configurations.\n * @class AudioStreamFormat\n */\nclass AudioStreamFormat {\n    /**\n     * Creates an audio stream format object representing the default audio stream\n     * format (16KHz 16bit mono PCM).\n     * @member AudioStreamFormat.getDefaultInputFormat\n     * @function\n     * @public\n     * @returns {AudioStreamFormat} The audio stream format being created.\n     */\n    static getDefaultInputFormat() {\n        return AudioStreamFormatImpl.getDefaultInputFormat();\n    }\n    /**\n     * Creates an audio stream format object with the specified format characteristics.\n     * @member AudioStreamFormat.getWaveFormat\n     * @function\n     * @public\n     * @param {number} samplesPerSecond - Sample rate, in samples per second (Hertz).\n     * @param {number} bitsPerSample - Bits per sample, typically 16.\n     * @param {number} channels - Number of channels in the waveform-audio data. Monaural data\n     * uses one channel and stereo data uses two channels.\n     * @param {AudioFormatTag} format - Audio format (PCM, alaw or mulaw).\n     * @returns {AudioStreamFormat} The audio stream format being created.\n     */\n    static getWaveFormat(samplesPerSecond, bitsPerSample, channels, format) {\n        return new AudioStreamFormatImpl(samplesPerSecond, bitsPerSample, channels, format);\n    }\n    /**\n     * Creates an audio stream format object with the specified pcm waveformat characteristics.\n     * @member AudioStreamFormat.getWaveFormatPCM\n     * @function\n     * @public\n     * @param {number} samplesPerSecond - Sample rate, in samples per second (Hertz).\n     * @param {number} bitsPerSample - Bits per sample, typically 16.\n     * @param {number} channels - Number of channels in the waveform-audio data. Monaural data\n     * uses one channel and stereo data uses two channels.\n     * @returns {AudioStreamFormat} The audio stream format being created.\n     */\n    static getWaveFormatPCM(samplesPerSecond, bitsPerSample, channels) {\n        return new AudioStreamFormatImpl(samplesPerSecond, bitsPerSample, channels);\n    }\n}\nexports.AudioStreamFormat = AudioStreamFormat;\n/**\n * @private\n * @class AudioStreamFormatImpl\n */\nclass AudioStreamFormatImpl extends AudioStreamFormat {\n    /**\n     * Creates an instance with the given values.\n     * @constructor\n     * @param {number} samplesPerSec - Samples per second.\n     * @param {number} bitsPerSample - Bits per sample.\n     * @param {number} channels - Number of channels.\n     * @param {AudioFormatTag} format - Audio format (PCM, alaw or mulaw).\n     */\n    constructor(samplesPerSec = 16000, bitsPerSample = 16, channels = 1, format = AudioFormatTag.PCM) {\n        super();\n        let isWavFormat = true;\n        /* 1 for PCM; 6 for alaw; 7 for mulaw */\n        switch (format) {\n            case AudioFormatTag.PCM:\n                this.formatTag = 1;\n                break;\n            case AudioFormatTag.ALaw:\n                this.formatTag = 6;\n                break;\n            case AudioFormatTag.MuLaw:\n                this.formatTag = 7;\n                break;\n            default:\n                isWavFormat = false;\n        }\n        this.bitsPerSample = bitsPerSample;\n        this.samplesPerSec = samplesPerSec;\n        this.channels = channels;\n        this.avgBytesPerSec = this.samplesPerSec * this.channels * (this.bitsPerSample / 8);\n        this.blockAlign = this.channels * Math.max(this.bitsPerSample, 8);\n        if (isWavFormat) {\n            this.privHeader = new ArrayBuffer(44);\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\n            const view = new DataView(this.privHeader);\n            /* RIFF identifier */\n            this.setString(view, 0, \"RIFF\");\n            /* file length */\n            view.setUint32(4, 0, true);\n            /* RIFF type & Format */\n            this.setString(view, 8, \"WAVEfmt \");\n            /* format chunk length */\n            view.setUint32(16, 16, true);\n            /* audio format */\n            view.setUint16(20, this.formatTag, true);\n            /* channel count */\n            view.setUint16(22, this.channels, true);\n            /* sample rate */\n            view.setUint32(24, this.samplesPerSec, true);\n            /* byte rate (sample rate * block align) */\n            view.setUint32(28, this.avgBytesPerSec, true);\n            /* block align (channel count * bytes per sample) */\n            view.setUint16(32, this.channels * (this.bitsPerSample / 8), true);\n            /* bits per sample */\n            view.setUint16(34, this.bitsPerSample, true);\n            /* data chunk identifier */\n            this.setString(view, 36, \"data\");\n            /* data chunk length */\n            view.setUint32(40, 0, true);\n        }\n    }\n    /**\n     * Retrieves the default input format.\n     * @member AudioStreamFormatImpl.getDefaultInputFormat\n     * @function\n     * @public\n     * @returns {AudioStreamFormatImpl} The default input format.\n     */\n    static getDefaultInputFormat() {\n        return new AudioStreamFormatImpl();\n    }\n    /**\n     * Creates an audio context appropriate to current browser\n     * @member AudioStreamFormatImpl.getAudioContext\n     * @function\n     * @public\n     * @returns {AudioContext} An audio context instance\n     */\n    /* eslint-disable */\n    static getAudioContext(sampleRate) {\n        // Workaround for Speech SDK bug in Safari.\n        const AudioContext = window.AudioContext // our preferred impl\n            || window.webkitAudioContext // fallback, mostly when on Safari\n            || false; // could not find.\n        // https://developer.mozilla.org/en-US/docs/Web/API/AudioContext\n        if (!!AudioContext) {\n            if (sampleRate !== undefined && navigator.mediaDevices.getSupportedConstraints().sampleRate) {\n                return new AudioContext({ sampleRate });\n            }\n            else {\n                return new AudioContext();\n            }\n        }\n        else {\n            throw new Error(\"Browser does not support Web Audio API (AudioContext is not available).\");\n        }\n    }\n    /* eslint-enable */\n    /**\n     * Closes the configuration object.\n     * @member AudioStreamFormatImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        return;\n    }\n    get header() {\n        return this.privHeader;\n    }\n    setString(view, offset, str) {\n        for (let i = 0; i < str.length; i++) {\n            view.setUint8(offset + i, str.charCodeAt(i));\n        }\n    }\n}\nexports.AudioStreamFormatImpl = AudioStreamFormatImpl;\n\n//# sourceMappingURL=AudioStreamFormat.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MicAudioSource = exports.AudioWorkletSourceURLPropertyName = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst AudioStreamFormat_js_1 = require(\"../sdk/Audio/AudioStreamFormat.js\");\nexports.AudioWorkletSourceURLPropertyName = \"MICROPHONE-WorkletSourceUrl\";\nclass MicAudioSource {\n    constructor(privRecorder, deviceId, audioSourceId, mediaStream) {\n        this.privRecorder = privRecorder;\n        this.deviceId = deviceId;\n        this.privStreams = {};\n        this.privOutputChunkSize = MicAudioSource.AUDIOFORMAT.avgBytesPerSec / 10;\n        this.privId = audioSourceId ? audioSourceId : (0, Exports_js_2.createNoDashGuid)();\n        this.privEvents = new Exports_js_2.EventSource();\n        this.privMediaStream = mediaStream || null;\n        this.privIsClosing = false;\n    }\n    get format() {\n        return Promise.resolve(MicAudioSource.AUDIOFORMAT);\n    }\n    turnOn() {\n        if (this.privInitializeDeferral) {\n            return this.privInitializeDeferral.promise;\n        }\n        this.privInitializeDeferral = new Exports_js_2.Deferred();\n        try {\n            this.createAudioContext();\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                const typedError = error;\n                this.privInitializeDeferral.reject(typedError.name + \": \" + typedError.message);\n            }\n            else {\n                this.privInitializeDeferral.reject(error);\n            }\n            return this.privInitializeDeferral.promise;\n        }\n        const nav = window.navigator;\n        let getUserMedia = (\n        // eslint-disable-next-line\n        nav.getUserMedia ||\n            nav.webkitGetUserMedia ||\n            nav.mozGetUserMedia ||\n            nav.msGetUserMedia);\n        if (!!nav.mediaDevices) {\n            getUserMedia = (constraints, successCallback, errorCallback) => {\n                nav.mediaDevices\n                    .getUserMedia(constraints)\n                    .then(successCallback)\n                    .catch(errorCallback);\n            };\n        }\n        if (!getUserMedia) {\n            const errorMsg = \"Browser does not support getUserMedia.\";\n            this.privInitializeDeferral.reject(errorMsg);\n            this.onEvent(new Exports_js_2.AudioSourceErrorEvent(errorMsg, \"\")); // mic initialized error - no streamid at this point\n        }\n        else {\n            const next = () => {\n                this.onEvent(new Exports_js_2.AudioSourceInitializingEvent(this.privId)); // no stream id\n                if (this.privMediaStream && this.privMediaStream.active) {\n                    this.onEvent(new Exports_js_2.AudioSourceReadyEvent(this.privId));\n                    this.privInitializeDeferral.resolve();\n                }\n                else {\n                    getUserMedia({ audio: this.deviceId ? { deviceId: this.deviceId } : true, video: false }, (mediaStream) => {\n                        this.privMediaStream = mediaStream;\n                        this.onEvent(new Exports_js_2.AudioSourceReadyEvent(this.privId));\n                        this.privInitializeDeferral.resolve();\n                    }, (error) => {\n                        const errorMsg = `Error occurred during microphone initialization: ${error}`;\n                        this.privInitializeDeferral.reject(errorMsg);\n                        this.onEvent(new Exports_js_2.AudioSourceErrorEvent(this.privId, errorMsg));\n                    });\n                }\n            };\n            if (this.privContext.state === \"suspended\") {\n                // NOTE: On iOS, the Web Audio API requires sounds to be triggered from an explicit user action.\n                // https://github.com/WebAudio/web-audio-api/issues/790\n                this.privContext.resume()\n                    .then(next)\n                    .catch((reason) => {\n                    this.privInitializeDeferral.reject(`Failed to initialize audio context: ${reason}`);\n                });\n            }\n            else {\n                next();\n            }\n        }\n        return this.privInitializeDeferral.promise;\n    }\n    id() {\n        return this.privId;\n    }\n    attach(audioNodeId) {\n        this.onEvent(new Exports_js_2.AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\n        return this.listen(audioNodeId).then((stream) => {\n            this.onEvent(new Exports_js_2.AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\n            return {\n                detach: async () => {\n                    stream.readEnded();\n                    delete this.privStreams[audioNodeId];\n                    this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n                    return this.turnOff();\n                },\n                id: () => audioNodeId,\n                read: () => stream.read(),\n            };\n        });\n    }\n    detach(audioNodeId) {\n        if (audioNodeId && this.privStreams[audioNodeId]) {\n            this.privStreams[audioNodeId].close();\n            delete this.privStreams[audioNodeId];\n            this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n        }\n    }\n    async turnOff() {\n        for (const streamId in this.privStreams) {\n            if (streamId) {\n                const stream = this.privStreams[streamId];\n                if (stream) {\n                    stream.close();\n                }\n            }\n        }\n        this.onEvent(new Exports_js_2.AudioSourceOffEvent(this.privId)); // no stream now\n        if (this.privInitializeDeferral) {\n            // Correctly handle when browser forces mic off before turnOn() completes\n            // eslint-disable-next-line @typescript-eslint/await-thenable\n            await this.privInitializeDeferral;\n            this.privInitializeDeferral = null;\n        }\n        await this.destroyAudioContext();\n        return;\n    }\n    get events() {\n        return this.privEvents;\n    }\n    get deviceInfo() {\n        return this.getMicrophoneLabel().then((label) => ({\n            bitspersample: MicAudioSource.AUDIOFORMAT.bitsPerSample,\n            channelcount: MicAudioSource.AUDIOFORMAT.channels,\n            connectivity: Exports_js_1.connectivity.Unknown,\n            manufacturer: \"Speech SDK\",\n            model: label,\n            samplerate: MicAudioSource.AUDIOFORMAT.samplesPerSec,\n            type: Exports_js_1.type.Microphones,\n        }));\n    }\n    setProperty(name, value) {\n        if (name === exports.AudioWorkletSourceURLPropertyName) {\n            this.privRecorder.setWorkletUrl(value);\n        }\n        else {\n            throw new Error(\"Property '\" + name + \"' is not supported on Microphone.\");\n        }\n    }\n    getMicrophoneLabel() {\n        const defaultMicrophoneName = \"microphone\";\n        // If we did this already, return the value.\n        if (this.privMicrophoneLabel !== undefined) {\n            return Promise.resolve(this.privMicrophoneLabel);\n        }\n        // If the stream isn't currently running, we can't query devices because security.\n        if (this.privMediaStream === undefined || !this.privMediaStream.active) {\n            return Promise.resolve(defaultMicrophoneName);\n        }\n        // Setup a default\n        this.privMicrophoneLabel = defaultMicrophoneName;\n        // Get the id of the device running the audio track.\n        const microphoneDeviceId = this.privMediaStream.getTracks()[0].getSettings().deviceId;\n        // If the browser doesn't support getting the device ID, set a default and return.\n        if (undefined === microphoneDeviceId) {\n            return Promise.resolve(this.privMicrophoneLabel);\n        }\n        const deferred = new Exports_js_2.Deferred();\n        // Enumerate the media devices.\n        navigator.mediaDevices.enumerateDevices().then((devices) => {\n            for (const device of devices) {\n                if (device.deviceId === microphoneDeviceId) {\n                    // Found the device\n                    this.privMicrophoneLabel = device.label;\n                    break;\n                }\n            }\n            deferred.resolve(this.privMicrophoneLabel);\n        }, () => deferred.resolve(this.privMicrophoneLabel));\n        return deferred.promise;\n    }\n    async listen(audioNodeId) {\n        await this.turnOn();\n        const stream = new Exports_js_2.ChunkedArrayBufferStream(this.privOutputChunkSize, audioNodeId);\n        this.privStreams[audioNodeId] = stream;\n        try {\n            this.privRecorder.record(this.privContext, this.privMediaStream, stream);\n        }\n        catch (error) {\n            this.onEvent(new Exports_js_2.AudioStreamNodeErrorEvent(this.privId, audioNodeId, error));\n            throw error;\n        }\n        const result = stream;\n        return result;\n    }\n    onEvent(event) {\n        this.privEvents.onEvent(event);\n        Exports_js_2.Events.instance.onEvent(event);\n    }\n    createAudioContext() {\n        if (!!this.privContext) {\n            return;\n        }\n        this.privContext = AudioStreamFormat_js_1.AudioStreamFormatImpl.getAudioContext(MicAudioSource.AUDIOFORMAT.samplesPerSec);\n    }\n    async destroyAudioContext() {\n        if (!this.privContext) {\n            return;\n        }\n        this.privRecorder.releaseMediaResources(this.privContext);\n        // This pattern brought to you by a bug in the TypeScript compiler where it\n        // confuses the (\"close\" in this.privContext) with this.privContext always being null as the alternate.\n        // https://github.com/Microsoft/TypeScript/issues/11498\n        let hasClose = false;\n        if (\"close\" in this.privContext) {\n            hasClose = true;\n        }\n        if (hasClose) {\n            if (!this.privIsClosing) {\n                // The audio context close may take enough time that the close is called twice\n                this.privIsClosing = true;\n                await this.privContext.close();\n                this.privContext = null;\n                this.privIsClosing = false;\n            }\n        }\n        else if (null !== this.privContext && this.privContext.state === \"running\") {\n            // Suspend actually takes a callback, but analogous to the\n            // resume method, it'll be only fired if suspend is called\n            // in a direct response to a user action. The later is not always\n            // the case, as TurnOff is also called, when we receive an\n            // end-of-speech message from the service. So, doing a best effort\n            // fire-and-forget here.\n            await this.privContext.suspend();\n        }\n    }\n}\nexports.MicAudioSource = MicAudioSource;\nMicAudioSource.AUDIOFORMAT = AudioStreamFormat_js_1.AudioStreamFormat.getDefaultInputFormat();\n\n//# sourceMappingURL=MicAudioSource.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FileAudioSource = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst AudioStreamFormat_js_1 = require(\"../sdk/Audio/AudioStreamFormat.js\");\nclass FileAudioSource {\n    constructor(file, filename, audioSourceId) {\n        this.privStreams = {};\n        this.privHeaderEnd = 44;\n        this.privId = audioSourceId ? audioSourceId : (0, Exports_js_2.createNoDashGuid)();\n        this.privEvents = new Exports_js_2.EventSource();\n        this.privSource = file;\n        if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && this.privSource instanceof Blob) {\n            this.privFilename = file.name;\n        }\n        else {\n            this.privFilename = filename || \"unknown.wav\";\n        }\n        // Read the header.\n        this.privAudioFormatPromise = this.readHeader();\n    }\n    get format() {\n        return this.privAudioFormatPromise;\n    }\n    turnOn() {\n        if (this.privFilename.lastIndexOf(\".wav\") !== this.privFilename.length - 4) {\n            const errorMsg = this.privFilename + \" is not supported. Only WAVE files are allowed at the moment.\";\n            this.onEvent(new Exports_js_2.AudioSourceErrorEvent(errorMsg, \"\"));\n            return Promise.reject(errorMsg);\n        }\n        this.onEvent(new Exports_js_2.AudioSourceInitializingEvent(this.privId)); // no stream id\n        this.onEvent(new Exports_js_2.AudioSourceReadyEvent(this.privId));\n        return;\n    }\n    id() {\n        return this.privId;\n    }\n    async attach(audioNodeId) {\n        this.onEvent(new Exports_js_2.AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\n        const stream = await this.upload(audioNodeId);\n        this.onEvent(new Exports_js_2.AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\n        return Promise.resolve({\n            detach: async () => {\n                stream.readEnded();\n                delete this.privStreams[audioNodeId];\n                this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n                await this.turnOff();\n            },\n            id: () => audioNodeId,\n            read: () => stream.read(),\n        });\n    }\n    detach(audioNodeId) {\n        if (audioNodeId && this.privStreams[audioNodeId]) {\n            this.privStreams[audioNodeId].close();\n            delete this.privStreams[audioNodeId];\n            this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n        }\n    }\n    turnOff() {\n        for (const streamId in this.privStreams) {\n            if (streamId) {\n                const stream = this.privStreams[streamId];\n                if (stream && !stream.isClosed) {\n                    stream.close();\n                }\n            }\n        }\n        this.onEvent(new Exports_js_2.AudioSourceOffEvent(this.privId)); // no stream now\n        return Promise.resolve();\n    }\n    get events() {\n        return this.privEvents;\n    }\n    get deviceInfo() {\n        return this.privAudioFormatPromise.then((result) => (Promise.resolve({\n            bitspersample: result.bitsPerSample,\n            channelcount: result.channels,\n            connectivity: Exports_js_1.connectivity.Unknown,\n            manufacturer: \"Speech SDK\",\n            model: \"File\",\n            samplerate: result.samplesPerSec,\n            type: Exports_js_1.type.File,\n        })));\n    }\n    readHeader() {\n        // Read the wave header.\n        const maxHeaderSize = 4296;\n        const header = this.privSource.slice(0, maxHeaderSize);\n        const headerResult = new Exports_js_2.Deferred();\n        const processHeader = (header) => {\n            const view = new DataView(header);\n            const getWord = (index) => String.fromCharCode(view.getUint8(index), view.getUint8(index + 1), view.getUint8(index + 2), view.getUint8(index + 3));\n            // RIFF 4 bytes.\n            if (\"RIFF\" !== getWord(0)) {\n                headerResult.reject(\"Invalid WAV header in file, RIFF was not found\");\n                return;\n            }\n            // length, 4 bytes\n            // RIFF Type & fmt 8 bytes\n            if (\"WAVE\" !== getWord(8) || \"fmt \" !== getWord(12)) {\n                headerResult.reject(\"Invalid WAV header in file, WAVEfmt was not found\");\n                return;\n            }\n            const formatSize = view.getInt32(16, true);\n            const channelCount = view.getUint16(22, true);\n            const sampleRate = view.getUint32(24, true);\n            const bitsPerSample = view.getUint16(34, true);\n            // Confirm if header is 44 bytes long.\n            let pos = 36 + Math.max(formatSize - 16, 0);\n            for (; getWord(pos) !== \"data\"; pos += 2) {\n                if (pos > maxHeaderSize - 8) {\n                    headerResult.reject(\"Invalid WAV header in file, data block was not found\");\n                    return;\n                }\n            }\n            this.privHeaderEnd = pos + 8;\n            headerResult.resolve(AudioStreamFormat_js_1.AudioStreamFormat.getWaveFormatPCM(sampleRate, bitsPerSample, channelCount));\n        };\n        if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && header instanceof Blob) {\n            const reader = new FileReader();\n            reader.onload = (event) => {\n                const header = event.target.result;\n                processHeader(header);\n            };\n            reader.readAsArrayBuffer(header);\n        }\n        else {\n            const h = header;\n            processHeader(h.buffer.slice(h.byteOffset, h.byteOffset + h.byteLength));\n        }\n        return headerResult.promise;\n    }\n    async upload(audioNodeId) {\n        const onerror = (error) => {\n            const errorMsg = `Error occurred while processing '${this.privFilename}'. ${error}`;\n            this.onEvent(new Exports_js_2.AudioStreamNodeErrorEvent(this.privId, audioNodeId, errorMsg));\n            throw new Error(errorMsg);\n        };\n        try {\n            await this.turnOn();\n            const format = await this.privAudioFormatPromise;\n            const stream = new Exports_js_2.ChunkedArrayBufferStream(format.avgBytesPerSec / 10, audioNodeId);\n            this.privStreams[audioNodeId] = stream;\n            const chunk = this.privSource.slice(this.privHeaderEnd);\n            const processFile = (buff) => {\n                if (stream.isClosed) {\n                    return; // output stream was closed (somebody called TurnOff). We're done here.\n                }\n                stream.writeStreamChunk({\n                    buffer: buff,\n                    isEnd: false,\n                    timeReceived: Date.now(),\n                });\n                stream.close();\n            };\n            if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && chunk instanceof Blob) {\n                const reader = new FileReader();\n                reader.onerror = (ev) => onerror(ev.toString());\n                reader.onload = (event) => {\n                    const fileBuffer = event.target.result;\n                    processFile(fileBuffer);\n                };\n                reader.readAsArrayBuffer(chunk);\n            }\n            else {\n                const c = chunk;\n                processFile(c.buffer.slice(c.byteOffset, c.byteOffset + c.byteLength));\n            }\n            return stream;\n        }\n        catch (e) {\n            onerror(e);\n        }\n    }\n    onEvent(event) {\n        this.privEvents.onEvent(event);\n        Exports_js_2.Events.instance.onEvent(event);\n    }\n}\nexports.FileAudioSource = FileAudioSource;\n\n//# sourceMappingURL=FileAudioSource.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PcmRecorder = void 0;\nconst Exports_1 = require(\"../common/Exports\");\nclass PcmRecorder {\n    constructor(stopInputOnRelease) {\n        this.privStopInputOnRelease = stopInputOnRelease;\n    }\n    record(context, mediaStream, outputStream) {\n        const desiredSampleRate = 16000;\n        const waveStreamEncoder = new Exports_1.RiffPcmEncoder(context.sampleRate, desiredSampleRate);\n        const micInput = context.createMediaStreamSource(mediaStream);\n        const attachScriptProcessor = () => {\n            // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n            const scriptNode = (() => {\n                let bufferSize = 0;\n                try {\n                    return context.createScriptProcessor(bufferSize, 1, 1);\n                }\n                catch (error) {\n                    // Webkit (<= version 31) requires a valid bufferSize.\n                    bufferSize = 2048;\n                    let audioSampleRate = context.sampleRate;\n                    while (bufferSize < 16384 && audioSampleRate >= (2 * desiredSampleRate)) {\n                        bufferSize <<= 1;\n                        audioSampleRate >>= 1;\n                    }\n                    return context.createScriptProcessor(bufferSize, 1, 1);\n                }\n            })();\n            scriptNode.onaudioprocess = (event) => {\n                const inputFrame = event.inputBuffer.getChannelData(0);\n                if (outputStream && !outputStream.isClosed) {\n                    const waveFrame = waveStreamEncoder.encode(inputFrame);\n                    if (!!waveFrame) {\n                        outputStream.writeStreamChunk({\n                            buffer: waveFrame,\n                            isEnd: false,\n                            timeReceived: Date.now(),\n                        });\n                    }\n                }\n            };\n            micInput.connect(scriptNode);\n            scriptNode.connect(context.destination);\n            this.privMediaResources = {\n                scriptProcessorNode: scriptNode,\n                source: micInput,\n                stream: mediaStream,\n            };\n        };\n        // https://webaudio.github.io/web-audio-api/#audioworklet\n        // Using AudioWorklet to improve audio quality and avoid audio glitches due to blocking the UI thread\n        const skipAudioWorklet = !!this.privSpeechProcessorScript && this.privSpeechProcessorScript.toLowerCase() === \"ignore\";\n        if (!!context.audioWorklet && !skipAudioWorklet) {\n            if (!this.privSpeechProcessorScript) {\n                const workletScript = `class SP extends AudioWorkletProcessor {\r\n                    constructor(options) {\r\n                      super(options);\r\n                    }\r\n                    process(inputs, outputs) {\r\n                      const input = inputs[0];\r\n                      const output = [];\r\n                      for (let channel = 0; channel < input.length; channel += 1) {\r\n                        output[channel] = input[channel];\r\n                      }\r\n                      this.port.postMessage(output[0]);\r\n                      return true;\r\n                    }\r\n                  }\r\n                  registerProcessor('speech-processor', SP);`;\n                const blob = new Blob([workletScript], { type: \"application/javascript; charset=utf-8\" });\n                this.privSpeechProcessorScript = URL.createObjectURL(blob);\n            }\n            context.audioWorklet\n                .addModule(this.privSpeechProcessorScript)\n                .then(() => {\n                const workletNode = new AudioWorkletNode(context, \"speech-processor\");\n                workletNode.port.onmessage = (ev) => {\n                    const inputFrame = ev.data;\n                    if (outputStream && !outputStream.isClosed) {\n                        const waveFrame = waveStreamEncoder.encode(inputFrame);\n                        if (!!waveFrame) {\n                            outputStream.writeStreamChunk({\n                                buffer: waveFrame,\n                                isEnd: false,\n                                timeReceived: Date.now(),\n                            });\n                        }\n                    }\n                };\n                micInput.connect(workletNode);\n                workletNode.connect(context.destination);\n                this.privMediaResources = {\n                    scriptProcessorNode: workletNode,\n                    source: micInput,\n                    stream: mediaStream,\n                };\n            })\n                .catch(() => {\n                attachScriptProcessor();\n            });\n        }\n        else {\n            try {\n                attachScriptProcessor();\n            }\n            catch (err) {\n                throw new Error(`Unable to start audio worklet node for PCMRecorder: ${err}`);\n            }\n        }\n    }\n    releaseMediaResources(context) {\n        if (this.privMediaResources) {\n            if (this.privMediaResources.scriptProcessorNode) {\n                this.privMediaResources.scriptProcessorNode.disconnect(context.destination);\n                this.privMediaResources.scriptProcessorNode = null;\n            }\n            if (this.privMediaResources.source) {\n                this.privMediaResources.source.disconnect();\n                if (this.privStopInputOnRelease) {\n                    this.privMediaResources.stream.getTracks().forEach((track) => track.stop());\n                }\n                this.privMediaResources.source = null;\n            }\n        }\n    }\n    setWorkletUrl(url) {\n        this.privSpeechProcessorScript = url;\n    }\n}\nexports.PcmRecorder = PcmRecorder;\n\n//# sourceMappingURL=PCMRecorder.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebsocketMessageAdapter = void 0;\nconst net = __importStar(require(\"net\"));\nconst tls = __importStar(require(\"tls\"));\nconst agent_base_1 = __importDefault(require(\"agent-base\"));\nconst https_proxy_agent_1 = __importDefault(require(\"https-proxy-agent\"));\nconst ws_1 = __importDefault(require(\"ws\"));\nconst HeaderNames_js_1 = require(\"../common.speech/HeaderNames.js\");\nconst Exports_js_1 = require(\"../common/Exports.js\");\nclass WebsocketMessageAdapter {\n    constructor(uri, connectionId, messageFormatter, proxyInfo, headers, enableCompression) {\n        if (!uri) {\n            throw new Exports_js_1.ArgumentNullError(\"uri\");\n        }\n        if (!messageFormatter) {\n            throw new Exports_js_1.ArgumentNullError(\"messageFormatter\");\n        }\n        this.proxyInfo = proxyInfo;\n        this.privConnectionEvents = new Exports_js_1.EventSource();\n        this.privConnectionId = connectionId;\n        this.privMessageFormatter = messageFormatter;\n        this.privConnectionState = Exports_js_1.ConnectionState.None;\n        this.privUri = uri;\n        this.privHeaders = headers;\n        this.privEnableCompression = enableCompression;\n        // Add the connection ID to the headers\n        this.privHeaders[HeaderNames_js_1.HeaderNames.ConnectionId] = this.privConnectionId;\n        this.privHeaders.connectionId = this.privConnectionId;\n        this.privLastErrorReceived = \"\";\n    }\n    get state() {\n        return this.privConnectionState;\n    }\n    open() {\n        if (this.privConnectionState === Exports_js_1.ConnectionState.Disconnected) {\n            return Promise.reject(`Cannot open a connection that is in ${this.privConnectionState} state`);\n        }\n        if (this.privConnectionEstablishDeferral) {\n            return this.privConnectionEstablishDeferral.promise;\n        }\n        this.privConnectionEstablishDeferral = new Exports_js_1.Deferred();\n        this.privCertificateValidatedDeferral = new Exports_js_1.Deferred();\n        this.privConnectionState = Exports_js_1.ConnectionState.Connecting;\n        try {\n            if (typeof WebSocket !== \"undefined\" && !WebsocketMessageAdapter.forceNpmWebSocket) {\n                // Browser handles cert checks.\n                this.privCertificateValidatedDeferral.resolve();\n                this.privWebsocketClient = new WebSocket(this.privUri);\n            }\n            else {\n                // Workaround for https://github.com/microsoft/cognitive-services-speech-sdk-js/issues/465\n                // Which is root caused by https://github.com/TooTallNate/node-agent-base/issues/61\n                const uri = new URL(this.privUri);\n                let protocol = uri.protocol;\n                if (protocol?.toLocaleLowerCase() === \"wss:\") {\n                    protocol = \"https:\";\n                }\n                else if (protocol?.toLocaleLowerCase() === \"ws:\") {\n                    protocol = \"http:\";\n                }\n                const options = { headers: this.privHeaders, perMessageDeflate: this.privEnableCompression, followRedirects: protocol.toLocaleLowerCase() === \"https:\" };\n                // The ocsp library will handle validation for us and fail the connection if needed.\n                this.privCertificateValidatedDeferral.resolve();\n                options.agent = this.getAgent();\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                options.agent.protocol = protocol;\n                this.privWebsocketClient = new ws_1.default(this.privUri, options);\n                this.privWebsocketClient.on(\"redirect\", (redirectUrl) => {\n                    const event = new Exports_js_1.ConnectionRedirectEvent(this.privConnectionId, redirectUrl, this.privUri, `Getting redirect URL from endpoint ${this.privUri} with redirect URL '${redirectUrl}'`);\n                    Exports_js_1.Events.instance.onEvent(event);\n                });\n            }\n            this.privWebsocketClient.binaryType = \"arraybuffer\";\n            this.privReceivingMessageQueue = new Exports_js_1.Queue();\n            this.privDisconnectDeferral = new Exports_js_1.Deferred();\n            this.privSendMessageQueue = new Exports_js_1.Queue();\n            this.processSendQueue().catch((reason) => {\n                Exports_js_1.Events.instance.onEvent(new Exports_js_1.BackgroundEvent(reason));\n            });\n        }\n        catch (error) {\n            this.privConnectionEstablishDeferral.resolve(new Exports_js_1.ConnectionOpenResponse(500, error));\n            return this.privConnectionEstablishDeferral.promise;\n        }\n        this.onEvent(new Exports_js_1.ConnectionStartEvent(this.privConnectionId, this.privUri));\n        this.privWebsocketClient.onopen = () => {\n            this.privCertificateValidatedDeferral.promise.then(() => {\n                this.privConnectionState = Exports_js_1.ConnectionState.Connected;\n                this.onEvent(new Exports_js_1.ConnectionEstablishedEvent(this.privConnectionId));\n                this.privConnectionEstablishDeferral.resolve(new Exports_js_1.ConnectionOpenResponse(200, \"\"));\n            }, (error) => {\n                this.privConnectionEstablishDeferral.reject(error);\n            });\n        };\n        this.privWebsocketClient.onerror = (e) => {\n            this.onEvent(new Exports_js_1.ConnectionErrorEvent(this.privConnectionId, e.message, e.type));\n            this.privLastErrorReceived = e.message;\n        };\n        this.privWebsocketClient.onclose = (e) => {\n            if (this.privConnectionState === Exports_js_1.ConnectionState.Connecting) {\n                this.privConnectionState = Exports_js_1.ConnectionState.Disconnected;\n                // this.onEvent(new ConnectionEstablishErrorEvent(this.connectionId, e.code, e.reason));\n                this.privConnectionEstablishDeferral.resolve(new Exports_js_1.ConnectionOpenResponse(e.code, e.reason + \" \" + this.privLastErrorReceived));\n            }\n            else {\n                this.privConnectionState = Exports_js_1.ConnectionState.Disconnected;\n                this.privWebsocketClient = null;\n                this.onEvent(new Exports_js_1.ConnectionClosedEvent(this.privConnectionId, e.code, e.reason));\n            }\n            this.onClose(e.code, e.reason).catch((reason) => {\n                Exports_js_1.Events.instance.onEvent(new Exports_js_1.BackgroundEvent(reason));\n            });\n        };\n        this.privWebsocketClient.onmessage = (e) => {\n            const networkReceivedTime = new Date().toISOString();\n            if (this.privConnectionState === Exports_js_1.ConnectionState.Connected) {\n                const deferred = new Exports_js_1.Deferred();\n                // let id = ++this.idCounter;\n                this.privReceivingMessageQueue.enqueueFromPromise(deferred.promise);\n                if (e.data instanceof ArrayBuffer) {\n                    const rawMessage = new Exports_js_1.RawWebsocketMessage(Exports_js_1.MessageType.Binary, e.data);\n                    this.privMessageFormatter\n                        .toConnectionMessage(rawMessage)\n                        .then((connectionMessage) => {\n                        this.onEvent(new Exports_js_1.ConnectionMessageReceivedEvent(this.privConnectionId, networkReceivedTime, connectionMessage));\n                        deferred.resolve(connectionMessage);\n                    }, (error) => {\n                        // TODO: Events for these ?\n                        deferred.reject(`Invalid binary message format. Error: ${error}`);\n                    });\n                }\n                else {\n                    const rawMessage = new Exports_js_1.RawWebsocketMessage(Exports_js_1.MessageType.Text, e.data);\n                    this.privMessageFormatter\n                        .toConnectionMessage(rawMessage)\n                        .then((connectionMessage) => {\n                        this.onEvent(new Exports_js_1.ConnectionMessageReceivedEvent(this.privConnectionId, networkReceivedTime, connectionMessage));\n                        deferred.resolve(connectionMessage);\n                    }, (error) => {\n                        // TODO: Events for these ?\n                        deferred.reject(`Invalid text message format. Error: ${error}`);\n                    });\n                }\n            }\n        };\n        return this.privConnectionEstablishDeferral.promise;\n    }\n    send(message) {\n        if (this.privConnectionState !== Exports_js_1.ConnectionState.Connected) {\n            return Promise.reject(`Cannot send on connection that is in ${Exports_js_1.ConnectionState[this.privConnectionState]} state`);\n        }\n        const messageSendStatusDeferral = new Exports_js_1.Deferred();\n        const messageSendDeferral = new Exports_js_1.Deferred();\n        this.privSendMessageQueue.enqueueFromPromise(messageSendDeferral.promise);\n        this.privMessageFormatter\n            .fromConnectionMessage(message)\n            .then((rawMessage) => {\n            messageSendDeferral.resolve({\n                Message: message,\n                RawWebsocketMessage: rawMessage,\n                sendStatusDeferral: messageSendStatusDeferral,\n            });\n        }, (error) => {\n            messageSendDeferral.reject(`Error formatting the message. ${error}`);\n        });\n        return messageSendStatusDeferral.promise;\n    }\n    read() {\n        if (this.privConnectionState !== Exports_js_1.ConnectionState.Connected) {\n            return Promise.reject(`Cannot read on connection that is in ${this.privConnectionState} state`);\n        }\n        return this.privReceivingMessageQueue.dequeue();\n    }\n    close(reason) {\n        if (this.privWebsocketClient) {\n            if (this.privConnectionState !== Exports_js_1.ConnectionState.Disconnected) {\n                this.privWebsocketClient.close(1000, reason ? reason : \"Normal closure by client\");\n            }\n        }\n        else {\n            return Promise.resolve();\n        }\n        return this.privDisconnectDeferral.promise;\n    }\n    get events() {\n        return this.privConnectionEvents;\n    }\n    sendRawMessage(sendItem) {\n        try {\n            // indicates we are draining the queue and it came with no message;\n            if (!sendItem) {\n                return Promise.resolve();\n            }\n            this.onEvent(new Exports_js_1.ConnectionMessageSentEvent(this.privConnectionId, new Date().toISOString(), sendItem.Message));\n            // add a check for the ws readystate in order to stop the red console error 'WebSocket is already in CLOSING or CLOSED state' appearing\n            if (this.isWebsocketOpen) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                this.privWebsocketClient.send(sendItem.RawWebsocketMessage.payload);\n            }\n            else {\n                return Promise.reject(\"websocket send error: Websocket not ready \" + this.privConnectionId + \" \" + sendItem.Message.id + \" \" + new Error().stack);\n            }\n            return Promise.resolve();\n        }\n        catch (e) {\n            return Promise.reject(`websocket send error: ${e}`);\n        }\n    }\n    async onClose(code, reason) {\n        const closeReason = `Connection closed. ${code}: ${reason}`;\n        this.privConnectionState = Exports_js_1.ConnectionState.Disconnected;\n        this.privDisconnectDeferral.resolve();\n        await this.privReceivingMessageQueue.drainAndDispose(() => {\n            // TODO: Events for these ?\n            // Logger.instance.onEvent(new LoggingEvent(LogType.Warning, null, `Failed to process received message. Reason: ${closeReason}, Message: ${JSON.stringify(pendingReceiveItem)}`));\n        }, closeReason);\n        await this.privSendMessageQueue.drainAndDispose((pendingSendItem) => {\n            pendingSendItem.sendStatusDeferral.reject(closeReason);\n        }, closeReason);\n    }\n    async processSendQueue() {\n        while (true) {\n            const itemToSend = this.privSendMessageQueue.dequeue();\n            const sendItem = await itemToSend;\n            // indicates we are draining the queue and it came with no message;\n            if (!sendItem) {\n                return;\n            }\n            try {\n                await this.sendRawMessage(sendItem);\n                sendItem.sendStatusDeferral.resolve();\n            }\n            catch (sendError) {\n                sendItem.sendStatusDeferral.reject(sendError);\n            }\n        }\n    }\n    onEvent(event) {\n        this.privConnectionEvents.onEvent(event);\n        Exports_js_1.Events.instance.onEvent(event);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    getAgent() {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        const agent = new agent_base_1.default.Agent(this.createConnection);\n        if (this.proxyInfo !== undefined &&\n            this.proxyInfo.HostName !== undefined &&\n            this.proxyInfo.Port > 0) {\n            agent.proxyInfo = this.proxyInfo;\n        }\n        return agent;\n    }\n    static GetProxyAgent(proxyInfo) {\n        const httpProxyOptions = {\n            host: proxyInfo.HostName,\n            port: proxyInfo.Port,\n        };\n        if (!!proxyInfo.UserName) {\n            httpProxyOptions.headers = {\n                \"Proxy-Authentication\": \"Basic \" + new Buffer(`${proxyInfo.UserName}:${(proxyInfo.Password === undefined) ? \"\" : proxyInfo.Password}`).toString(\"base64\"),\n            };\n        }\n        else {\n            httpProxyOptions.headers = {};\n        }\n        httpProxyOptions.headers.requestOCSP = \"true\";\n        const httpProxyAgent = new https_proxy_agent_1.default(httpProxyOptions);\n        return httpProxyAgent;\n    }\n    createConnection(request, options) {\n        let socketPromise;\n        options = {\n            ...options,\n            ...{\n                requestOCSP: true,\n                servername: options.host\n            }\n        };\n        if (!!this.proxyInfo) {\n            const httpProxyAgent = WebsocketMessageAdapter.GetProxyAgent(this.proxyInfo);\n            const baseAgent = httpProxyAgent;\n            socketPromise = new Promise((resolve, reject) => {\n                baseAgent.callback(request, options, (error, socket) => {\n                    if (!!error) {\n                        reject(error);\n                    }\n                    else {\n                        resolve(socket);\n                    }\n                });\n            });\n        }\n        else {\n            if (!!options.secureEndpoint) {\n                socketPromise = Promise.resolve(tls.connect(options));\n            }\n            else {\n                socketPromise = Promise.resolve(net.connect(options));\n            }\n        }\n        return socketPromise;\n    }\n    get isWebsocketOpen() {\n        return this.privWebsocketClient && this.privWebsocketClient.readyState === this.privWebsocketClient.OPEN;\n    }\n}\nexports.WebsocketMessageAdapter = WebsocketMessageAdapter;\nWebsocketMessageAdapter.forceNpmWebSocket = false;\n\n//# sourceMappingURL=WebsocketMessageAdapter.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebsocketConnection = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst WebsocketMessageAdapter_js_1 = require(\"./WebsocketMessageAdapter.js\");\nclass WebsocketConnection {\n    constructor(uri, queryParameters, headers, messageFormatter, proxyInfo, enableCompression = false, connectionId) {\n        this.privIsDisposed = false;\n        if (!uri) {\n            throw new Exports_js_1.ArgumentNullError(\"uri\");\n        }\n        if (!messageFormatter) {\n            throw new Exports_js_1.ArgumentNullError(\"messageFormatter\");\n        }\n        this.privMessageFormatter = messageFormatter;\n        let queryParams = \"\";\n        let i = 0;\n        if (queryParameters) {\n            for (const paramName in queryParameters) {\n                if (paramName) {\n                    queryParams += ((i === 0) && (uri.indexOf(\"?\") === -1)) ? \"?\" : \"&\";\n                    const key = encodeURIComponent(paramName);\n                    queryParams += key;\n                    let val = queryParameters[paramName];\n                    if (val) {\n                        val = encodeURIComponent(val);\n                        queryParams += `=${val}`;\n                    }\n                    i++;\n                }\n            }\n        }\n        if (headers) {\n            for (const headerName in headers) {\n                if (headerName) {\n                    queryParams += ((i === 0) && (uri.indexOf(\"?\") === -1)) ? \"?\" : \"&\";\n                    const val = encodeURIComponent(headers[headerName]);\n                    queryParams += `${headerName}=${val}`;\n                    i++;\n                }\n            }\n        }\n        this.privUri = uri + queryParams;\n        this.privId = connectionId ? connectionId : (0, Exports_js_1.createNoDashGuid)();\n        this.privConnectionMessageAdapter = new WebsocketMessageAdapter_js_1.WebsocketMessageAdapter(this.privUri, this.id, this.privMessageFormatter, proxyInfo, headers, enableCompression);\n    }\n    async dispose() {\n        this.privIsDisposed = true;\n        if (this.privConnectionMessageAdapter) {\n            await this.privConnectionMessageAdapter.close();\n        }\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    get id() {\n        return this.privId;\n    }\n    get uri() {\n        return this.privUri;\n    }\n    state() {\n        return this.privConnectionMessageAdapter.state;\n    }\n    open() {\n        return this.privConnectionMessageAdapter.open();\n    }\n    send(message) {\n        return this.privConnectionMessageAdapter.send(message);\n    }\n    read() {\n        return this.privConnectionMessageAdapter.read();\n    }\n    get events() {\n        return this.privConnectionMessageAdapter.events;\n    }\n}\nexports.WebsocketConnection = WebsocketConnection;\n\n//# sourceMappingURL=WebsocketConnection.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReplayableAudioNode = void 0;\nclass ReplayableAudioNode {\n    constructor(audioSource, bytesPerSecond) {\n        this.privBuffers = [];\n        this.privReplayOffset = 0;\n        this.privLastShrinkOffset = 0;\n        this.privBufferStartOffset = 0;\n        this.privBufferSerial = 0;\n        this.privBufferedBytes = 0;\n        this.privReplay = false;\n        this.privLastChunkAcquiredTime = 0;\n        this.privAudioNode = audioSource;\n        this.privBytesPerSecond = bytesPerSecond;\n    }\n    id() {\n        return this.privAudioNode.id();\n    }\n    // Reads and returns the next chunk of audio buffer.\n    // If replay of existing buffers are needed, read() will first seek and replay\n    // existing content, and upoin completion it will read new content from the underlying\n    // audio node, saving that content into the replayable buffers.\n    read() {\n        // if there is a replay request to honor.\n        if (!!this.privReplay && this.privBuffers.length !== 0) {\n            // Find the start point in the buffers.\n            // Offsets are in 100ns increments.\n            // So how many bytes do we need to seek to get the right offset?\n            const offsetToSeek = this.privReplayOffset - this.privBufferStartOffset;\n            let bytesToSeek = Math.round(offsetToSeek * this.privBytesPerSecond * 1e-7);\n            if (0 !== (bytesToSeek % 2)) {\n                bytesToSeek++;\n            }\n            let i = 0;\n            while (i < this.privBuffers.length && bytesToSeek >= this.privBuffers[i].chunk.buffer.byteLength) {\n                bytesToSeek -= this.privBuffers[i++].chunk.buffer.byteLength;\n            }\n            if (i < this.privBuffers.length) {\n                const retVal = this.privBuffers[i].chunk.buffer.slice(bytesToSeek);\n                this.privReplayOffset += (retVal.byteLength / this.privBytesPerSecond) * 1e+7;\n                // If we've reached the end of the buffers, stop replaying.\n                if (i === this.privBuffers.length - 1) {\n                    this.privReplay = false;\n                }\n                return Promise.resolve({\n                    buffer: retVal,\n                    isEnd: false,\n                    timeReceived: this.privBuffers[i].chunk.timeReceived,\n                });\n            }\n        }\n        return this.privAudioNode.read()\n            .then((result) => {\n            if (result && result.buffer && this.privBuffers) {\n                this.privBuffers.push(new BufferEntry(result, this.privBufferSerial++, this.privBufferedBytes));\n                this.privBufferedBytes += result.buffer.byteLength;\n            }\n            return result;\n        });\n    }\n    detach() {\n        this.privBuffers = undefined;\n        return this.privAudioNode.detach();\n    }\n    replay() {\n        if (this.privBuffers && 0 !== this.privBuffers.length) {\n            this.privReplay = true;\n            this.privReplayOffset = this.privLastShrinkOffset;\n        }\n    }\n    // Shrinks the existing audio buffers to start at the new offset, or at the\n    // beginning of the buffer closest to the requested offset.\n    // A replay request will start from the last shrink point.\n    shrinkBuffers(offset) {\n        if (this.privBuffers === undefined || this.privBuffers.length === 0) {\n            return;\n        }\n        this.privLastShrinkOffset = offset;\n        // Find the start point in the buffers.\n        // Offsets are in 100ns increments.\n        // So how many bytes do we need to seek to get the right offset?\n        const offsetToSeek = offset - this.privBufferStartOffset;\n        let bytesToSeek = Math.round(offsetToSeek * this.privBytesPerSecond * 1e-7);\n        let i = 0;\n        while (i < this.privBuffers.length && bytesToSeek >= this.privBuffers[i].chunk.buffer.byteLength) {\n            bytesToSeek -= this.privBuffers[i++].chunk.buffer.byteLength;\n        }\n        this.privBufferStartOffset = Math.round(offset - ((bytesToSeek / this.privBytesPerSecond) * 1e+7));\n        this.privBuffers = this.privBuffers.slice(i);\n    }\n    // Finds the time a buffer of audio was first seen by offset.\n    findTimeAtOffset(offset) {\n        if (offset < this.privBufferStartOffset || this.privBuffers === undefined) {\n            return 0;\n        }\n        for (const value of this.privBuffers) {\n            const startOffset = (value.byteOffset / this.privBytesPerSecond) * 1e7;\n            const endOffset = startOffset + ((value.chunk.buffer.byteLength / this.privBytesPerSecond) * 1e7);\n            if (offset >= startOffset && offset <= endOffset) {\n                return value.chunk.timeReceived;\n            }\n        }\n        return 0;\n    }\n}\nexports.ReplayableAudioNode = ReplayableAudioNode;\n// Primary use of this class is to help debugging problems with the replay\n// code. If the memory cost of alloc / dealloc gets too much, drop it and just use\n// the ArrayBuffer directly.\nclass BufferEntry {\n    constructor(chunk, serial, byteOffset) {\n        this.chunk = chunk;\n        this.serial = serial;\n        this.byteOffset = byteOffset;\n    }\n}\n\n//# sourceMappingURL=ReplayableAudioNode.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AudioFileWriter = void 0;\nconst fs = __importStar(require(\"fs\"));\nconst Contracts_js_1 = require(\"../Contracts.js\");\nclass AudioFileWriter {\n    constructor(filename) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(fs.openSync, \"\\nFile System access not available, please use Push or PullAudioOutputStream\");\n        this.privFd = fs.openSync(filename, \"w\");\n    }\n    set format(format) {\n        Contracts_js_1.Contracts.throwIfNotUndefined(this.privAudioFormat, \"format is already set\");\n        this.privAudioFormat = format;\n        let headerOffset = 0;\n        if (this.privAudioFormat.hasHeader) {\n            headerOffset = this.privAudioFormat.header.byteLength;\n        }\n        if (this.privFd !== undefined) {\n            this.privWriteStream = fs.createWriteStream(\"\", { fd: this.privFd, start: headerOffset, autoClose: false });\n        }\n    }\n    write(buffer) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privAudioFormat, \"must set format before writing.\");\n        if (this.privWriteStream !== undefined) {\n            this.privWriteStream.write(new Uint8Array(buffer.slice(0)));\n        }\n    }\n    close() {\n        if (this.privFd !== undefined) {\n            this.privWriteStream.on(\"finish\", () => {\n                if (this.privAudioFormat.hasHeader) {\n                    this.privAudioFormat.updateHeader(this.privWriteStream.bytesWritten);\n                    fs.writeSync(this.privFd, new Int8Array(this.privAudioFormat.header), 0, this.privAudioFormat.header.byteLength, 0);\n                }\n                fs.closeSync(this.privFd);\n                this.privFd = undefined;\n            });\n            this.privWriteStream.end();\n        }\n    }\n    id() {\n        return this.privId;\n    }\n}\nexports.AudioFileWriter = AudioFileWriter;\n\n//# sourceMappingURL=AudioFileWriter.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PullAudioInputStreamImpl = exports.PullAudioInputStream = exports.PushAudioInputStreamImpl = exports.PushAudioInputStream = exports.AudioInputStream = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../../common/Exports.js\");\nconst Guid_js_1 = require(\"../../common/Guid.js\");\nconst Exports_js_3 = require(\"../Exports.js\");\nconst AudioStreamFormat_js_1 = require(\"./AudioStreamFormat.js\");\n/**\n * Represents audio input stream used for custom audio input configurations.\n * @class AudioInputStream\n */\nclass AudioInputStream {\n    /**\n     * Creates and initializes an instance.\n     * @constructor\n     */\n    constructor() {\n        return;\n    }\n    /**\n     * Creates a memory backed PushAudioInputStream with the specified audio format.\n     * @member AudioInputStream.createPushStream\n     * @function\n     * @public\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\n     * written to the push audio stream's write() method (Required if format is not 16 kHz 16bit mono PCM).\n     * @returns {PushAudioInputStream} The audio input stream being created.\n     */\n    static createPushStream(format) {\n        return PushAudioInputStream.create(format);\n    }\n    /**\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for read()\n     * and close() methods.\n     * @member AudioInputStream.createPullStream\n     * @function\n     * @public\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object, derived from\n     * PullAudioInputStreamCallback\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be returned from\n     * the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\n     * @returns {PullAudioInputStream} The audio input stream being created.\n     */\n    static createPullStream(callback, format) {\n        return PullAudioInputStream.create(callback, format);\n        // throw new Error(\"Oops\");\n    }\n}\nexports.AudioInputStream = AudioInputStream;\n/**\n * Represents memory backed push audio input stream used for custom audio input configurations.\n * @class PushAudioInputStream\n */\nclass PushAudioInputStream extends AudioInputStream {\n    /**\n     * Creates a memory backed PushAudioInputStream with the specified audio format.\n     * @member PushAudioInputStream.create\n     * @function\n     * @public\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be written to the\n     * push audio stream's write() method (Required if format is not 16 kHz 16bit mono PCM).\n     * @returns {PushAudioInputStream} The push audio input stream being created.\n     */\n    static create(format) {\n        return new PushAudioInputStreamImpl(format);\n    }\n}\nexports.PushAudioInputStream = PushAudioInputStream;\n/**\n * Represents memory backed push audio input stream used for custom audio input configurations.\n * @private\n * @class PushAudioInputStreamImpl\n */\nclass PushAudioInputStreamImpl extends PushAudioInputStream {\n    /**\n     * Creates and initalizes an instance with the given values.\n     * @constructor\n     * @param {AudioStreamFormat} format - The audio stream format.\n     */\n    constructor(format) {\n        super();\n        if (format === undefined) {\n            this.privFormat = AudioStreamFormat_js_1.AudioStreamFormatImpl.getDefaultInputFormat();\n        }\n        else {\n            this.privFormat = format;\n        }\n        this.privEvents = new Exports_js_2.EventSource();\n        this.privId = (0, Guid_js_1.createNoDashGuid)();\n        this.privStream = new Exports_js_2.ChunkedArrayBufferStream(this.privFormat.avgBytesPerSec / 10);\n    }\n    /**\n     * Format information for the audio\n     */\n    get format() {\n        return Promise.resolve(this.privFormat);\n    }\n    /**\n     * Writes the audio data specified by making an internal copy of the data.\n     * @member PushAudioInputStreamImpl.prototype.write\n     * @function\n     * @public\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\n     */\n    write(dataBuffer) {\n        this.privStream.writeStreamChunk({\n            buffer: dataBuffer,\n            isEnd: false,\n            timeReceived: Date.now()\n        });\n    }\n    /**\n     * Closes the stream.\n     * @member PushAudioInputStreamImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        this.privStream.close();\n    }\n    id() {\n        return this.privId;\n    }\n    turnOn() {\n        this.onEvent(new Exports_js_2.AudioSourceInitializingEvent(this.privId)); // no stream id\n        this.onEvent(new Exports_js_2.AudioSourceReadyEvent(this.privId));\n        return;\n    }\n    async attach(audioNodeId) {\n        this.onEvent(new Exports_js_2.AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\n        await this.turnOn();\n        const stream = this.privStream;\n        this.onEvent(new Exports_js_2.AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\n        return {\n            detach: async () => {\n                this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n                return this.turnOff();\n            },\n            id: () => audioNodeId,\n            read: () => stream.read(),\n        };\n    }\n    detach(audioNodeId) {\n        this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n    }\n    turnOff() {\n        return;\n    }\n    get events() {\n        return this.privEvents;\n    }\n    get deviceInfo() {\n        return Promise.resolve({\n            bitspersample: this.privFormat.bitsPerSample,\n            channelcount: this.privFormat.channels,\n            connectivity: Exports_js_1.connectivity.Unknown,\n            manufacturer: \"Speech SDK\",\n            model: \"PushStream\",\n            samplerate: this.privFormat.samplesPerSec,\n            type: Exports_js_1.type.Stream,\n        });\n    }\n    onEvent(event) {\n        this.privEvents.onEvent(event);\n        Exports_js_2.Events.instance.onEvent(event);\n    }\n    toBuffer(arrayBuffer) {\n        const buf = Buffer.alloc(arrayBuffer.byteLength);\n        const view = new Uint8Array(arrayBuffer);\n        for (let i = 0; i < buf.length; ++i) {\n            buf[i] = view[i];\n        }\n        return buf;\n    }\n}\nexports.PushAudioInputStreamImpl = PushAudioInputStreamImpl;\n/*\n * Represents audio input stream used for custom audio input configurations.\n * @class PullAudioInputStream\n */\nclass PullAudioInputStream extends AudioInputStream {\n    /**\n     * Creates and initializes and instance.\n     * @constructor\n     */\n    constructor() {\n        super();\n    }\n    /**\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for\n     * read() and close() methods, using the default format (16 kHz 16bit mono PCM).\n     * @member PullAudioInputStream.create\n     * @function\n     * @public\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object,\n     * derived from PullAudioInputStreamCustomCallback\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\n     * returned from the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\n     * @returns {PullAudioInputStream} The push audio input stream being created.\n     */\n    static create(callback, format) {\n        return new PullAudioInputStreamImpl(callback, format);\n    }\n}\nexports.PullAudioInputStream = PullAudioInputStream;\n/**\n * Represents audio input stream used for custom audio input configurations.\n * @private\n * @class PullAudioInputStreamImpl\n */\nclass PullAudioInputStreamImpl extends PullAudioInputStream {\n    /**\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for\n     * read() and close() methods, using the default format (16 kHz 16bit mono PCM).\n     * @constructor\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object,\n     * derived from PullAudioInputStreamCustomCallback\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\n     * returned from the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\n     */\n    constructor(callback, format) {\n        super();\n        if (undefined === format) {\n            this.privFormat = Exports_js_3.AudioStreamFormat.getDefaultInputFormat();\n        }\n        else {\n            this.privFormat = format;\n        }\n        this.privEvents = new Exports_js_2.EventSource();\n        this.privId = (0, Guid_js_1.createNoDashGuid)();\n        this.privCallback = callback;\n        this.privIsClosed = false;\n        this.privBufferSize = this.privFormat.avgBytesPerSec / 10;\n    }\n    /**\n     * Format information for the audio\n     */\n    get format() {\n        return Promise.resolve(this.privFormat);\n    }\n    /**\n     * Closes the stream.\n     * @member PullAudioInputStreamImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        this.privIsClosed = true;\n        this.privCallback.close();\n    }\n    id() {\n        return this.privId;\n    }\n    turnOn() {\n        this.onEvent(new Exports_js_2.AudioSourceInitializingEvent(this.privId)); // no stream id\n        this.onEvent(new Exports_js_2.AudioSourceReadyEvent(this.privId));\n        return;\n    }\n    async attach(audioNodeId) {\n        this.onEvent(new Exports_js_2.AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\n        await this.turnOn();\n        this.onEvent(new Exports_js_2.AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\n        return {\n            detach: () => {\n                this.privCallback.close();\n                this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n                return this.turnOff();\n            },\n            id: () => audioNodeId,\n            read: () => {\n                let totalBytes = 0;\n                let transmitBuff;\n                // Until we have the minimum number of bytes to send in a transmission, keep asking for more.\n                while (totalBytes < this.privBufferSize) {\n                    // Sizing the read buffer to the delta between the perfect size and what's left means we won't ever get too much\n                    // data back.\n                    const readBuff = new ArrayBuffer(this.privBufferSize - totalBytes);\n                    const pulledBytes = this.privCallback.read(readBuff);\n                    // If there is no return buffer yet defined, set the return buffer to the that was just populated.\n                    // This was, if we have enough data there's no copy penalty, but if we don't we have a buffer that's the\n                    // preferred size allocated.\n                    if (undefined === transmitBuff) {\n                        transmitBuff = readBuff;\n                    }\n                    else {\n                        // Not the first bite at the apple, so fill the return buffer with the data we got back.\n                        const intView = new Int8Array(transmitBuff);\n                        intView.set(new Int8Array(readBuff), totalBytes);\n                    }\n                    // If there are no bytes to read, just break out and be done.\n                    if (0 === pulledBytes) {\n                        break;\n                    }\n                    totalBytes += pulledBytes;\n                }\n                return Promise.resolve({\n                    buffer: transmitBuff.slice(0, totalBytes),\n                    isEnd: this.privIsClosed || totalBytes === 0,\n                    timeReceived: Date.now(),\n                });\n            },\n        };\n    }\n    detach(audioNodeId) {\n        this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n    }\n    turnOff() {\n        return;\n    }\n    get events() {\n        return this.privEvents;\n    }\n    get deviceInfo() {\n        return Promise.resolve({\n            bitspersample: this.privFormat.bitsPerSample,\n            channelcount: this.privFormat.channels,\n            connectivity: Exports_js_1.connectivity.Unknown,\n            manufacturer: \"Speech SDK\",\n            model: \"PullStream\",\n            samplerate: this.privFormat.samplesPerSec,\n            type: Exports_js_1.type.Stream,\n        });\n    }\n    onEvent(event) {\n        this.privEvents.onEvent(event);\n        Exports_js_2.Events.instance.onEvent(event);\n    }\n}\nexports.PullAudioInputStreamImpl = PullAudioInputStreamImpl;\n\n//# sourceMappingURL=AudioInputStream.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechSynthesisOutputFormat = void 0;\n/**\n * Define speech synthesis audio output formats.\n * @enum SpeechSynthesisOutputFormat\n * Updated in version 1.17.0\n */\nvar SpeechSynthesisOutputFormat;\n(function (SpeechSynthesisOutputFormat) {\n    /**\n     * raw-8khz-8bit-mono-mulaw\n     * @member SpeechSynthesisOutputFormat.Raw8Khz8BitMonoMULaw,\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw8Khz8BitMonoMULaw\"] = 0] = \"Raw8Khz8BitMonoMULaw\";\n    /**\n     * riff-16khz-16kbps-mono-siren\n     * @note Unsupported by the service. Do not use this value.\n     * @member SpeechSynthesisOutputFormat.Riff16Khz16KbpsMonoSiren\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff16Khz16KbpsMonoSiren\"] = 1] = \"Riff16Khz16KbpsMonoSiren\";\n    /**\n     * audio-16khz-16kbps-mono-siren\n     * @note Unsupported by the service. Do not use this value.\n     * @member SpeechSynthesisOutputFormat.Audio16Khz16KbpsMonoSiren\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio16Khz16KbpsMonoSiren\"] = 2] = \"Audio16Khz16KbpsMonoSiren\";\n    /**\n     * audio-16khz-32kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio16Khz32KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio16Khz32KBitRateMonoMp3\"] = 3] = \"Audio16Khz32KBitRateMonoMp3\";\n    /**\n     * audio-16khz-128kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio16Khz128KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio16Khz128KBitRateMonoMp3\"] = 4] = \"Audio16Khz128KBitRateMonoMp3\";\n    /**\n     * audio-16khz-64kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio16Khz64KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio16Khz64KBitRateMonoMp3\"] = 5] = \"Audio16Khz64KBitRateMonoMp3\";\n    /**\n     * audio-24khz-48kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio24Khz48KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio24Khz48KBitRateMonoMp3\"] = 6] = \"Audio24Khz48KBitRateMonoMp3\";\n    /**\n     * audio-24khz-96kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio24Khz96KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio24Khz96KBitRateMonoMp3\"] = 7] = \"Audio24Khz96KBitRateMonoMp3\";\n    /**\n     * audio-24khz-160kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio24Khz160KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio24Khz160KBitRateMonoMp3\"] = 8] = \"Audio24Khz160KBitRateMonoMp3\";\n    /**\n     * raw-16khz-16bit-mono-truesilk\n     * @member SpeechSynthesisOutputFormat.Raw16Khz16BitMonoTrueSilk\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw16Khz16BitMonoTrueSilk\"] = 9] = \"Raw16Khz16BitMonoTrueSilk\";\n    /**\n     * riff-16khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Riff16Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff16Khz16BitMonoPcm\"] = 10] = \"Riff16Khz16BitMonoPcm\";\n    /**\n     * riff-8khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Riff8Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff8Khz16BitMonoPcm\"] = 11] = \"Riff8Khz16BitMonoPcm\";\n    /**\n     * riff-24khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Riff24Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff24Khz16BitMonoPcm\"] = 12] = \"Riff24Khz16BitMonoPcm\";\n    /**\n     * riff-8khz-8bit-mono-mulaw\n     * @member SpeechSynthesisOutputFormat.Riff8Khz8BitMonoMULaw\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff8Khz8BitMonoMULaw\"] = 13] = \"Riff8Khz8BitMonoMULaw\";\n    /**\n     * raw-16khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Raw16Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw16Khz16BitMonoPcm\"] = 14] = \"Raw16Khz16BitMonoPcm\";\n    /**\n     * raw-24khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Raw24Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw24Khz16BitMonoPcm\"] = 15] = \"Raw24Khz16BitMonoPcm\";\n    /**\n     * raw-8khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Raw8Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw8Khz16BitMonoPcm\"] = 16] = \"Raw8Khz16BitMonoPcm\";\n    /**\n     * ogg-16khz-16bit-mono-opus\n     * @member SpeechSynthesisOutputFormat.Ogg16Khz16BitMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Ogg16Khz16BitMonoOpus\"] = 17] = \"Ogg16Khz16BitMonoOpus\";\n    /**\n     * ogg-24khz-16bit-mono-opus\n     * @member SpeechSynthesisOutputFormat.Ogg24Khz16BitMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Ogg24Khz16BitMonoOpus\"] = 18] = \"Ogg24Khz16BitMonoOpus\";\n    /**\n     * raw-48khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Raw48Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw48Khz16BitMonoPcm\"] = 19] = \"Raw48Khz16BitMonoPcm\";\n    /**\n     * riff-48khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Riff48Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff48Khz16BitMonoPcm\"] = 20] = \"Riff48Khz16BitMonoPcm\";\n    /**\n     * audio-48khz-96kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio48Khz96KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio48Khz96KBitRateMonoMp3\"] = 21] = \"Audio48Khz96KBitRateMonoMp3\";\n    /**\n     * audio-48khz-192kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio48Khz192KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio48Khz192KBitRateMonoMp3\"] = 22] = \"Audio48Khz192KBitRateMonoMp3\";\n    /**\n     * ogg-48khz-16bit-mono-opus\n     * Added in version 1.16.0\n     * @member SpeechSynthesisOutputFormat.Ogg48Khz16BitMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Ogg48Khz16BitMonoOpus\"] = 23] = \"Ogg48Khz16BitMonoOpus\";\n    /**\n     * webm-16khz-16bit-mono-opus\n     * Added in version 1.16.0\n     * @member SpeechSynthesisOutputFormat.Webm16Khz16BitMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Webm16Khz16BitMonoOpus\"] = 24] = \"Webm16Khz16BitMonoOpus\";\n    /**\n     * webm-24khz-16bit-mono-opus\n     * Added in version 1.16.0\n     * @member SpeechSynthesisOutputFormat.Webm24Khz16BitMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Webm24Khz16BitMonoOpus\"] = 25] = \"Webm24Khz16BitMonoOpus\";\n    /**\n     * raw-24khz-16bit-mono-truesilk\n     * Added in version 1.17.0\n     * @member SpeechSynthesisOutputFormat.Raw24Khz16BitMonoTrueSilk\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw24Khz16BitMonoTrueSilk\"] = 26] = \"Raw24Khz16BitMonoTrueSilk\";\n    /**\n     * raw-8khz-8bit-mono-alaw\n     * Added in version 1.17.0\n     * @member SpeechSynthesisOutputFormat.Raw8Khz8BitMonoALaw\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw8Khz8BitMonoALaw\"] = 27] = \"Raw8Khz8BitMonoALaw\";\n    /**\n     * riff-8khz-8bit-mono-alaw\n     * Added in version 1.17.0\n     * @member SpeechSynthesisOutputFormat.Riff8Khz8BitMonoALaw\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff8Khz8BitMonoALaw\"] = 28] = \"Riff8Khz8BitMonoALaw\";\n    /**\n     * webm-24khz-16bit-24kbps-mono-opus\n     * Audio compressed by OPUS codec in a webm container, with bitrate of 24kbps, optimized for IoT scenario.\n     * Added in version 1.19.0\n     * @member SpeechSynthesisOutputFormat.Webm24Khz16Bit24KbpsMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Webm24Khz16Bit24KbpsMonoOpus\"] = 29] = \"Webm24Khz16Bit24KbpsMonoOpus\";\n    /**\n     * audio-16khz-16bit-32kbps-mono-opus\n     * Audio compressed by OPUS codec without container, with bitrate of 32kbps.\n     * Added in version 1.20.0\n     * @member SpeechSynthesisOutputFormat.Audio16Khz16Bit32KbpsMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio16Khz16Bit32KbpsMonoOpus\"] = 30] = \"Audio16Khz16Bit32KbpsMonoOpus\";\n    /**\n     * audio-24khz-16bit-48kbps-mono-opus\n     * Audio compressed by OPUS codec without container, with bitrate of 48kbps.\n     * Added in version 1.20.0\n     * @member SpeechSynthesisOutputFormat.Audio24Khz16Bit48KbpsMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio24Khz16Bit48KbpsMonoOpus\"] = 31] = \"Audio24Khz16Bit48KbpsMonoOpus\";\n    /**\n     * audio-24khz-16bit-24kbps-mono-opus\n     * Audio compressed by OPUS codec without container, with bitrate of 24kbps.\n     * Added in version 1.20.0\n     * @member SpeechSynthesisOutputFormat.Audio24Khz16Bit24KbpsMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio24Khz16Bit24KbpsMonoOpus\"] = 32] = \"Audio24Khz16Bit24KbpsMonoOpus\";\n    /**\n     * raw-22050hz-16bit-mono-pcm\n     * Raw PCM audio at 22050Hz sampling rate and 16-bit depth.\n     * Added in version 1.22.0\n     * @member SpeechSynthesisOutputFormat.Raw22050Hz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw22050Hz16BitMonoPcm\"] = 33] = \"Raw22050Hz16BitMonoPcm\";\n    /**\n     * riff-22050hz-16bit-mono-pcm\n     * PCM audio at 22050Hz sampling rate and 16-bit depth, with RIFF header.\n     * Added in version 1.22.0\n     * @member SpeechSynthesisOutputFormat.Riff22050Hz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff22050Hz16BitMonoPcm\"] = 34] = \"Riff22050Hz16BitMonoPcm\";\n    /**\n     * raw-44100hz-16bit-mono-pcm\n     * Raw PCM audio at 44100Hz sampling rate and 16-bit depth.\n     * Added in version 1.22.0\n     * @member SpeechSynthesisOutputFormat.Raw44100Hz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw44100Hz16BitMonoPcm\"] = 35] = \"Raw44100Hz16BitMonoPcm\";\n    /**\n     * riff-44100hz-16bit-mono-pcm\n     * PCM audio at 44100Hz sampling rate and 16-bit depth, with RIFF header.\n     * Added in version 1.22.0\n     * @member SpeechSynthesisOutputFormat.Riff44100Hz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff44100Hz16BitMonoPcm\"] = 36] = \"Riff44100Hz16BitMonoPcm\";\n    /**\n     * amr-wb-16000hz\n     * AMR-WB audio at 16kHz sampling rate.\n     * Added in version 1.38.0\n     * @member SpeechSynthesisOutputFormat.AmrWb16000Hz\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"AmrWb16000Hz\"] = 37] = \"AmrWb16000Hz\";\n    /**\n     * g722-16khz-64kbps\n     * G.722 audio at 16kHz sampling rate and 64kbps bitrate.\n     * Added in version 1.38.0\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"G72216Khz64Kbps\"] = 38] = \"G72216Khz64Kbps\";\n})(SpeechSynthesisOutputFormat = exports.SpeechSynthesisOutputFormat || (exports.SpeechSynthesisOutputFormat = {}));\n\n//# sourceMappingURL=SpeechSynthesisOutputFormat.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AudioOutputFormatImpl = void 0;\nconst SpeechSynthesisOutputFormat_js_1 = require(\"../SpeechSynthesisOutputFormat.js\");\nconst AudioStreamFormat_js_1 = require(\"./AudioStreamFormat.js\");\n/**\n * @private\n * @class AudioOutputFormatImpl\n * Updated in version 1.17.0\n */\n// eslint-disable-next-line max-classes-per-file\nclass AudioOutputFormatImpl extends AudioStreamFormat_js_1.AudioStreamFormatImpl {\n    /**\n     * Creates an instance with the given values.\n     * @constructor\n     * @param formatTag\n     * @param {number} channels - Number of channels.\n     * @param {number} samplesPerSec - Samples per second.\n     * @param {number} avgBytesPerSec - Average bytes per second.\n     * @param {number} blockAlign - Block alignment.\n     * @param {number} bitsPerSample - Bits per sample.\n     * @param {string} audioFormatString - Audio format string\n     * @param {string} requestAudioFormatString - Audio format string sent to service.\n     * @param {boolean} hasHeader - If the format has header or not.\n     */\n    constructor(formatTag, channels, samplesPerSec, avgBytesPerSec, blockAlign, bitsPerSample, audioFormatString, requestAudioFormatString, hasHeader) {\n        super(samplesPerSec, bitsPerSample, channels, formatTag);\n        this.formatTag = formatTag;\n        this.avgBytesPerSec = avgBytesPerSec;\n        this.blockAlign = blockAlign;\n        this.priAudioFormatString = audioFormatString;\n        this.priRequestAudioFormatString = requestAudioFormatString;\n        this.priHasHeader = hasHeader;\n    }\n    static fromSpeechSynthesisOutputFormat(speechSynthesisOutputFormat) {\n        if (speechSynthesisOutputFormat === undefined) {\n            return AudioOutputFormatImpl.getDefaultOutputFormat();\n        }\n        return AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString(AudioOutputFormatImpl.SpeechSynthesisOutputFormatToString[speechSynthesisOutputFormat]);\n    }\n    static fromSpeechSynthesisOutputFormatString(speechSynthesisOutputFormatString) {\n        switch (speechSynthesisOutputFormatString) {\n            case \"raw-8khz-8bit-mono-mulaw\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MuLaw, 1, 8000, 8000, 1, 8, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"riff-16khz-16kbps-mono-siren\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.Siren, 1, 16000, 2000, 40, 0, speechSynthesisOutputFormatString, \"audio-16khz-16kbps-mono-siren\", true);\n            case \"audio-16khz-16kbps-mono-siren\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.Siren, 1, 16000, 2000, 40, 0, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-16khz-32kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 16000, 32 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-16khz-128kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 16000, 128 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-16khz-64kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 16000, 64 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-24khz-48kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 24000, 48 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-24khz-96kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 24000, 96 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-24khz-160kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 24000, 160 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"raw-16khz-16bit-mono-truesilk\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.SILKSkype, 1, 16000, 32000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"riff-8khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 8000, 16000, 2, 16, speechSynthesisOutputFormatString, \"raw-8khz-16bit-mono-pcm\", true);\n            case \"riff-24khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 24000, 48000, 2, 16, speechSynthesisOutputFormatString, \"raw-24khz-16bit-mono-pcm\", true);\n            case \"riff-8khz-8bit-mono-mulaw\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MuLaw, 1, 8000, 8000, 1, 8, speechSynthesisOutputFormatString, \"raw-8khz-8bit-mono-mulaw\", true);\n            case \"raw-16khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 16000, 32000, 2, 16, speechSynthesisOutputFormatString, \"raw-16khz-16bit-mono-pcm\", false);\n            case \"raw-24khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 24000, 48000, 2, 16, speechSynthesisOutputFormatString, \"raw-24khz-16bit-mono-pcm\", false);\n            case \"raw-8khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 8000, 16000, 2, 16, speechSynthesisOutputFormatString, \"raw-8khz-16bit-mono-pcm\", false);\n            case \"ogg-16khz-16bit-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.OGG_OPUS, 1, 16000, 8192, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"ogg-24khz-16bit-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.OGG_OPUS, 1, 24000, 8192, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"raw-48khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 48000, 96000, 2, 16, speechSynthesisOutputFormatString, \"raw-48khz-16bit-mono-pcm\", false);\n            case \"riff-48khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 48000, 96000, 2, 16, speechSynthesisOutputFormatString, \"raw-48khz-16bit-mono-pcm\", true);\n            case \"audio-48khz-96kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 48000, 96 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-48khz-192kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 48000, 192 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"ogg-48khz-16bit-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.OGG_OPUS, 1, 48000, 12000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"webm-16khz-16bit-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.WEBM_OPUS, 1, 16000, 4000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"webm-24khz-16bit-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.WEBM_OPUS, 1, 24000, 6000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"webm-24khz-16bit-24kbps-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.WEBM_OPUS, 1, 24000, 3000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-16khz-16bit-32kbps-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.OPUS, 1, 16000, 4000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-24khz-16bit-48kbps-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.OPUS, 1, 24000, 6000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-24khz-16bit-24kbps-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.OPUS, 1, 24000, 3000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-24khz-16bit-mono-flac\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.FLAC, 1, 24000, 24000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-48khz-16bit-mono-flac\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.FLAC, 1, 48000, 30000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"raw-24khz-16bit-mono-truesilk\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.SILKSkype, 1, 24000, 48000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"raw-8khz-8bit-mono-alaw\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.ALaw, 1, 8000, 8000, 1, 8, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"riff-8khz-8bit-mono-alaw\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.ALaw, 1, 8000, 8000, 1, 8, speechSynthesisOutputFormatString, \"raw-8khz-8bit-mono-alaw\", true);\n            case \"raw-22050hz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 22050, 44100, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"riff-22050hz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 22050, 44100, 2, 16, speechSynthesisOutputFormatString, \"raw-22050hz-16bit-mono-pcm\", true);\n            case \"raw-44100hz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 44100, 88200, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"riff-44100hz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 44100, 88200, 2, 16, speechSynthesisOutputFormatString, \"raw-44100hz-16bit-mono-pcm\", true);\n            case \"amr-wb-16000h\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.AMR_WB, 1, 16000, 3052, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"g722-16khz-64kbps\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.G722, 1, 16000, 8000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"riff-16khz-16bit-mono-pcm\":\n            default:\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 16000, 32000, 2, 16, \"riff-16khz-16bit-mono-pcm\", \"raw-16khz-16bit-mono-pcm\", true);\n        }\n    }\n    static getDefaultOutputFormat() {\n        return AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString((typeof window !== \"undefined\") ? \"audio-24khz-48kbitrate-mono-mp3\" : \"riff-16khz-16bit-mono-pcm\");\n    }\n    /**\n     * Specifies if this audio output format has a header\n     * @boolean AudioOutputFormatImpl.prototype.hasHeader\n     * @function\n     * @public\n     */\n    get hasHeader() {\n        return this.priHasHeader;\n    }\n    /**\n     * Specifies the header of this format\n     * @ArrayBuffer AudioOutputFormatImpl.prototype.header\n     * @function\n     * @public\n     */\n    get header() {\n        if (this.hasHeader) {\n            return this.privHeader;\n        }\n        return undefined;\n    }\n    /**\n     * Updates the header based on the audio length\n     * @member AudioOutputFormatImpl.updateHeader\n     * @function\n     * @public\n     * @param {number} audioLength - the audio length\n     */\n    updateHeader(audioLength) {\n        if (this.priHasHeader) {\n            const view = new DataView(this.privHeader);\n            view.setUint32(4, audioLength + this.privHeader.byteLength - 8, true);\n            view.setUint32(40, audioLength, true);\n        }\n    }\n    /**\n     * Specifies the audio format string to be sent to the service\n     * @string AudioOutputFormatImpl.prototype.requestAudioFormatString\n     * @function\n     * @public\n     */\n    get requestAudioFormatString() {\n        return this.priRequestAudioFormatString;\n    }\n    /**\n     * Adds audio header\n     * @param audio the raw audio without header\n     * @returns the audio with header if applicable\n     */\n    addHeader(audio) {\n        if (!this.hasHeader) {\n            return audio;\n        }\n        this.updateHeader(audio.byteLength);\n        const tmp = new Uint8Array(audio.byteLength + this.header.byteLength);\n        tmp.set(new Uint8Array(this.header), 0);\n        tmp.set(new Uint8Array(audio), this.header.byteLength);\n        return tmp.buffer;\n    }\n}\nexports.AudioOutputFormatImpl = AudioOutputFormatImpl;\nAudioOutputFormatImpl.SpeechSynthesisOutputFormatToString = {\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw8Khz8BitMonoMULaw]: \"raw-8khz-8bit-mono-mulaw\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff16Khz16KbpsMonoSiren]: \"riff-16khz-16kbps-mono-siren\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio16Khz16KbpsMonoSiren]: \"audio-16khz-16kbps-mono-siren\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio16Khz32KBitRateMonoMp3]: \"audio-16khz-32kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio16Khz128KBitRateMonoMp3]: \"audio-16khz-128kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio16Khz64KBitRateMonoMp3]: \"audio-16khz-64kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio24Khz48KBitRateMonoMp3]: \"audio-24khz-48kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio24Khz96KBitRateMonoMp3]: \"audio-24khz-96kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio24Khz160KBitRateMonoMp3]: \"audio-24khz-160kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw16Khz16BitMonoTrueSilk]: \"raw-16khz-16bit-mono-truesilk\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff16Khz16BitMonoPcm]: \"riff-16khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff8Khz16BitMonoPcm]: \"riff-8khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff24Khz16BitMonoPcm]: \"riff-24khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff8Khz8BitMonoMULaw]: \"riff-8khz-8bit-mono-mulaw\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw16Khz16BitMonoPcm]: \"raw-16khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw24Khz16BitMonoPcm]: \"raw-24khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw8Khz16BitMonoPcm]: \"raw-8khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Ogg16Khz16BitMonoOpus]: \"ogg-16khz-16bit-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Ogg24Khz16BitMonoOpus]: \"ogg-24khz-16bit-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw48Khz16BitMonoPcm]: \"raw-48khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff48Khz16BitMonoPcm]: \"riff-48khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio48Khz96KBitRateMonoMp3]: \"audio-48khz-96kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio48Khz192KBitRateMonoMp3]: \"audio-48khz-192kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Ogg48Khz16BitMonoOpus]: \"ogg-48khz-16bit-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Webm16Khz16BitMonoOpus]: \"webm-16khz-16bit-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Webm24Khz16BitMonoOpus]: \"webm-24khz-16bit-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Webm24Khz16Bit24KbpsMonoOpus]: \"webm-24khz-16bit-24kbps-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw24Khz16BitMonoTrueSilk]: \"raw-24khz-16bit-mono-truesilk\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw8Khz8BitMonoALaw]: \"raw-8khz-8bit-mono-alaw\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff8Khz8BitMonoALaw]: \"riff-8khz-8bit-mono-alaw\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio16Khz16Bit32KbpsMonoOpus]: \"audio-16khz-16bit-32kbps-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio24Khz16Bit48KbpsMonoOpus]: \"audio-24khz-16bit-48kbps-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio24Khz16Bit24KbpsMonoOpus]: \"audio-24khz-16bit-24kbps-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw22050Hz16BitMonoPcm]: \"raw-22050hz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff22050Hz16BitMonoPcm]: \"riff-22050hz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw44100Hz16BitMonoPcm]: \"raw-44100hz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff44100Hz16BitMonoPcm]: \"riff-44100hz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.AmrWb16000Hz]: \"amr-wb-16000hz\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.G72216Khz64Kbps]: \"g722-16khz-64kbps\",\n};\n\n//# sourceMappingURL=AudioOutputFormat.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PushAudioOutputStreamImpl = exports.PushAudioOutputStream = exports.PullAudioOutputStreamImpl = exports.PullAudioOutputStream = exports.AudioOutputStream = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../../common/Exports.js\");\nconst Contracts_js_1 = require(\"../Contracts.js\");\nconst AudioOutputFormat_js_1 = require(\"./AudioOutputFormat.js\");\n/**\n * Represents audio output stream used for custom audio output configurations.\n * @class AudioOutputStream\n */\nclass AudioOutputStream {\n    /**\n     * Creates and initializes an instance.\n     * @constructor\n     */\n    constructor() {\n        return;\n    }\n    /**\n     * Creates a memory backed PullAudioOutputStream with the specified audio format.\n     * @member AudioOutputStream.createPullStream\n     * @function\n     * @public\n     * @returns {PullAudioOutputStream} The audio output stream being created.\n     */\n    static createPullStream() {\n        return PullAudioOutputStream.create();\n    }\n}\nexports.AudioOutputStream = AudioOutputStream;\n/**\n * Represents memory backed push audio output stream used for custom audio output configurations.\n * @class PullAudioOutputStream\n */\nclass PullAudioOutputStream extends AudioOutputStream {\n    /**\n     * Creates a memory backed PullAudioOutputStream with the specified audio format.\n     * @member PullAudioOutputStream.create\n     * @function\n     * @public\n     * @returns {PullAudioOutputStream} The push audio output stream being created.\n     */\n    static create() {\n        return new PullAudioOutputStreamImpl();\n    }\n}\nexports.PullAudioOutputStream = PullAudioOutputStream;\n/**\n * Represents memory backed push audio output stream used for custom audio output configurations.\n * @private\n * @class PullAudioOutputStreamImpl\n */\nclass PullAudioOutputStreamImpl extends PullAudioOutputStream {\n    /**\n     * Creates and initializes an instance with the given values.\n     * @constructor\n     */\n    constructor() {\n        super();\n        this.privId = (0, Exports_js_1.createNoDashGuid)();\n        this.privStream = new Exports_js_1.Stream();\n    }\n    /**\n     * Sets the format information to the stream. For internal use only.\n     * @param {AudioStreamFormat} format - the format to be set.\n     */\n    set format(format) {\n        if (format === undefined || format === null) {\n            this.privFormat = AudioOutputFormat_js_1.AudioOutputFormatImpl.getDefaultOutputFormat();\n        }\n        this.privFormat = format;\n    }\n    /**\n     * Format information for the audio\n     */\n    get format() {\n        return this.privFormat;\n    }\n    /**\n     * Checks if the stream is closed\n     * @member PullAudioOutputStreamImpl.prototype.isClosed\n     * @property\n     * @public\n     */\n    get isClosed() {\n        return this.privStream.isClosed;\n    }\n    /**\n     * Gets the id of the stream\n     * @member PullAudioOutputStreamImpl.prototype.id\n     * @property\n     * @public\n     */\n    id() {\n        return this.privId;\n    }\n    /**\n     * Reads audio data from the internal buffer.\n     * @member PullAudioOutputStreamImpl.prototype.read\n     * @function\n     * @public\n     * @param {ArrayBuffer} dataBuffer - An ArrayBuffer to store the read data.\n     * @returns {Promise<number>} - Audio buffer length has been read.\n     */\n    async read(dataBuffer) {\n        const intView = new Int8Array(dataBuffer);\n        let totalBytes = 0;\n        if (this.privLastChunkView !== undefined) {\n            if (this.privLastChunkView.length > dataBuffer.byteLength) {\n                intView.set(this.privLastChunkView.slice(0, dataBuffer.byteLength));\n                this.privLastChunkView = this.privLastChunkView.slice(dataBuffer.byteLength);\n                return Promise.resolve(dataBuffer.byteLength);\n            }\n            intView.set(this.privLastChunkView);\n            totalBytes = this.privLastChunkView.length;\n            this.privLastChunkView = undefined;\n        }\n        // Until we have the minimum number of bytes to send in a transmission, keep asking for more.\n        while (totalBytes < dataBuffer.byteLength && !this.privStream.isReadEnded) {\n            const chunk = await this.privStream.read();\n            if (chunk !== undefined && !chunk.isEnd) {\n                let tmpBuffer;\n                if (chunk.buffer.byteLength > dataBuffer.byteLength - totalBytes) {\n                    tmpBuffer = chunk.buffer.slice(0, dataBuffer.byteLength - totalBytes);\n                    this.privLastChunkView = new Int8Array(chunk.buffer.slice(dataBuffer.byteLength - totalBytes));\n                }\n                else {\n                    tmpBuffer = chunk.buffer;\n                }\n                intView.set(new Int8Array(tmpBuffer), totalBytes);\n                totalBytes += tmpBuffer.byteLength;\n            }\n            else {\n                this.privStream.readEnded();\n            }\n        }\n        return totalBytes;\n    }\n    /**\n     * Writes the audio data specified by making an internal copy of the data.\n     * @member PullAudioOutputStreamImpl.prototype.write\n     * @function\n     * @public\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\n     */\n    write(dataBuffer) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privStream, \"must set format before writing\");\n        this.privStream.writeStreamChunk({\n            buffer: dataBuffer,\n            isEnd: false,\n            timeReceived: Date.now()\n        });\n    }\n    /**\n     * Closes the stream.\n     * @member PullAudioOutputStreamImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        this.privStream.close();\n    }\n}\nexports.PullAudioOutputStreamImpl = PullAudioOutputStreamImpl;\n/*\n * Represents audio output stream used for custom audio output configurations.\n * @class PushAudioOutputStream\n */\nclass PushAudioOutputStream extends AudioOutputStream {\n    /**\n     * Creates and initializes and instance.\n     * @constructor\n     */\n    constructor() {\n        super();\n    }\n    /**\n     * Creates a PushAudioOutputStream that delegates to the specified callback interface for\n     * write() and close() methods.\n     * @member PushAudioOutputStream.create\n     * @function\n     * @public\n     * @param {PushAudioOutputStreamCallback} callback - The custom audio output object,\n     * derived from PushAudioOutputStreamCallback\n     * @returns {PushAudioOutputStream} The push audio output stream being created.\n     */\n    static create(callback) {\n        return new PushAudioOutputStreamImpl(callback);\n    }\n}\nexports.PushAudioOutputStream = PushAudioOutputStream;\n/**\n * Represents audio output stream used for custom audio output configurations.\n * @private\n * @class PushAudioOutputStreamImpl\n */\nclass PushAudioOutputStreamImpl extends PushAudioOutputStream {\n    /**\n     * Creates a PushAudioOutputStream that delegates to the specified callback interface for\n     * read() and close() methods.\n     * @constructor\n     * @param {PushAudioOutputStreamCallback} callback - The custom audio output object,\n     * derived from PushAudioOutputStreamCallback\n     */\n    constructor(callback) {\n        super();\n        this.privId = (0, Exports_js_1.createNoDashGuid)();\n        this.privCallback = callback;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    set format(format) { }\n    write(buffer) {\n        if (!!this.privCallback.write) {\n            this.privCallback.write(buffer);\n        }\n    }\n    close() {\n        if (!!this.privCallback.close) {\n            this.privCallback.close();\n        }\n    }\n    id() {\n        return this.privId;\n    }\n}\nexports.PushAudioOutputStreamImpl = PushAudioOutputStreamImpl;\n\n//# sourceMappingURL=AudioOutputStream.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AudioOutputConfigImpl = exports.AudioConfigImpl = exports.AudioConfig = void 0;\nconst Exports_js_1 = require(\"../../common.browser/Exports.js\");\nconst Contracts_js_1 = require(\"../Contracts.js\");\nconst Exports_js_2 = require(\"../Exports.js\");\nconst AudioFileWriter_js_1 = require(\"./AudioFileWriter.js\");\nconst AudioInputStream_js_1 = require(\"./AudioInputStream.js\");\nconst AudioOutputStream_js_1 = require(\"./AudioOutputStream.js\");\n/**\n * Represents audio input configuration used for specifying what type of input to use (microphone, file, stream).\n * @class AudioConfig\n * Updated in version 1.11.0\n */\nclass AudioConfig {\n    /**\n     * Creates an AudioConfig object representing the default microphone on the system.\n     * @member AudioConfig.fromDefaultMicrophoneInput\n     * @function\n     * @public\n     * @returns {AudioConfig} The audio input configuration being created.\n     */\n    static fromDefaultMicrophoneInput() {\n        const pcmRecorder = new Exports_js_1.PcmRecorder(true);\n        return new AudioConfigImpl(new Exports_js_1.MicAudioSource(pcmRecorder));\n    }\n    /**\n     * Creates an AudioConfig object representing a microphone with the specified device ID.\n     * @member AudioConfig.fromMicrophoneInput\n     * @function\n     * @public\n     * @param {string | undefined} deviceId - Specifies the device ID of the microphone to be used.\n     * Default microphone is used the value is omitted.\n     * @returns {AudioConfig} The audio input configuration being created.\n     */\n    static fromMicrophoneInput(deviceId) {\n        const pcmRecorder = new Exports_js_1.PcmRecorder(true);\n        return new AudioConfigImpl(new Exports_js_1.MicAudioSource(pcmRecorder, deviceId));\n    }\n    /**\n     * Creates an AudioConfig object representing the specified file.\n     * @member AudioConfig.fromWavFileInput\n     * @function\n     * @public\n     * @param {File} fileName - Specifies the audio input file. Currently, only WAV / PCM is supported.\n     * @returns {AudioConfig} The audio input configuration being created.\n     */\n    static fromWavFileInput(file, name = \"unnamedBuffer.wav\") {\n        return new AudioConfigImpl(new Exports_js_1.FileAudioSource(file, name));\n    }\n    /**\n     * Creates an AudioConfig object representing the specified stream.\n     * @member AudioConfig.fromStreamInput\n     * @function\n     * @public\n     * @param {AudioInputStream | PullAudioInputStreamCallback | MediaStream} audioStream - Specifies the custom audio input\n     * stream. Currently, only WAV / PCM is supported.\n     * @returns {AudioConfig} The audio input configuration being created.\n     */\n    static fromStreamInput(audioStream) {\n        if (audioStream instanceof Exports_js_2.PullAudioInputStreamCallback) {\n            return new AudioConfigImpl(new AudioInputStream_js_1.PullAudioInputStreamImpl(audioStream));\n        }\n        if (audioStream instanceof Exports_js_2.AudioInputStream) {\n            return new AudioConfigImpl(audioStream);\n        }\n        if (typeof MediaStream !== \"undefined\" && audioStream instanceof MediaStream) {\n            const pcmRecorder = new Exports_js_1.PcmRecorder(false);\n            return new AudioConfigImpl(new Exports_js_1.MicAudioSource(pcmRecorder, null, null, audioStream));\n        }\n        throw new Error(\"Not Supported Type\");\n    }\n    /**\n     * Creates an AudioConfig object representing the default speaker.\n     * @member AudioConfig.fromDefaultSpeakerOutput\n     * @function\n     * @public\n     * @returns {AudioConfig} The audio output configuration being created.\n     * Added in version 1.11.0\n     */\n    static fromDefaultSpeakerOutput() {\n        return new AudioOutputConfigImpl(new Exports_js_2.SpeakerAudioDestination());\n    }\n    /**\n     * Creates an AudioConfig object representing the custom IPlayer object.\n     * You can use the IPlayer object to control pause, resume, etc.\n     * @member AudioConfig.fromSpeakerOutput\n     * @function\n     * @public\n     * @param {IPlayer} player - the IPlayer object for playback.\n     * @returns {AudioConfig} The audio output configuration being created.\n     * Added in version 1.12.0\n     */\n    static fromSpeakerOutput(player) {\n        if (player === undefined) {\n            return AudioConfig.fromDefaultSpeakerOutput();\n        }\n        if (player instanceof Exports_js_2.SpeakerAudioDestination) {\n            return new AudioOutputConfigImpl(player);\n        }\n        throw new Error(\"Not Supported Type\");\n    }\n    /**\n     * Creates an AudioConfig object representing a specified output audio file\n     * @member AudioConfig.fromAudioFileOutput\n     * @function\n     * @public\n     * @param {PathLike} filename - the filename of the output audio file\n     * @returns {AudioConfig} The audio output configuration being created.\n     * Added in version 1.11.0\n     */\n    static fromAudioFileOutput(filename) {\n        return new AudioOutputConfigImpl(new AudioFileWriter_js_1.AudioFileWriter(filename));\n    }\n    /**\n     * Creates an AudioConfig object representing a specified audio output stream\n     * @member AudioConfig.fromStreamOutput\n     * @function\n     * @public\n     * @param {AudioOutputStream | PushAudioOutputStreamCallback} audioStream - Specifies the custom audio output\n     * stream.\n     * @returns {AudioConfig} The audio output configuration being created.\n     * Added in version 1.11.0\n     */\n    static fromStreamOutput(audioStream) {\n        if (audioStream instanceof Exports_js_2.PushAudioOutputStreamCallback) {\n            return new AudioOutputConfigImpl(new AudioOutputStream_js_1.PushAudioOutputStreamImpl(audioStream));\n        }\n        if (audioStream instanceof Exports_js_2.PushAudioOutputStream) {\n            return new AudioOutputConfigImpl(audioStream);\n        }\n        if (audioStream instanceof Exports_js_2.PullAudioOutputStream) {\n            return new AudioOutputConfigImpl(audioStream);\n        }\n        throw new Error(\"Not Supported Type\");\n    }\n}\nexports.AudioConfig = AudioConfig;\n/**\n * Represents audio input stream used for custom audio input configurations.\n * @private\n * @class AudioConfigImpl\n */\nclass AudioConfigImpl extends AudioConfig {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {IAudioSource} source - An audio source.\n     */\n    constructor(source) {\n        super();\n        this.privSource = source;\n    }\n    /**\n     * Format information for the audio\n     */\n    get format() {\n        return this.privSource.format;\n    }\n    /**\n     * @member AudioConfigImpl.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, err) {\n        this.privSource.turnOff().then(() => {\n            if (!!cb) {\n                cb();\n            }\n        }, (error) => {\n            if (!!err) {\n                err(error);\n            }\n        });\n    }\n    /**\n     * @member AudioConfigImpl.prototype.id\n     * @function\n     * @public\n     */\n    id() {\n        return this.privSource.id();\n    }\n    /**\n     * @member AudioConfigImpl.prototype.turnOn\n     * @function\n     * @public\n     * @returns {Promise<void>} A promise.\n     */\n    turnOn() {\n        return this.privSource.turnOn();\n    }\n    /**\n     * @member AudioConfigImpl.prototype.attach\n     * @function\n     * @public\n     * @param {string} audioNodeId - The audio node id.\n     * @returns {Promise<IAudioStreamNode>} A promise.\n     */\n    attach(audioNodeId) {\n        return this.privSource.attach(audioNodeId);\n    }\n    /**\n     * @member AudioConfigImpl.prototype.detach\n     * @function\n     * @public\n     * @param {string} audioNodeId - The audio node id.\n     */\n    detach(audioNodeId) {\n        return this.privSource.detach(audioNodeId);\n    }\n    /**\n     * @member AudioConfigImpl.prototype.turnOff\n     * @function\n     * @public\n     * @returns {Promise<void>} A promise.\n     */\n    turnOff() {\n        return this.privSource.turnOff();\n    }\n    /**\n     * @member AudioConfigImpl.prototype.events\n     * @function\n     * @public\n     * @returns {EventSource<AudioSourceEvent>} An event source for audio events.\n     */\n    get events() {\n        return this.privSource.events;\n    }\n    setProperty(name, value) {\n        Contracts_js_1.Contracts.throwIfNull(value, \"value\");\n        if (undefined !== this.privSource.setProperty) {\n            this.privSource.setProperty(name, value);\n        }\n        else {\n            throw new Error(\"This AudioConfig instance does not support setting properties.\");\n        }\n    }\n    getProperty(name, def) {\n        if (undefined !== this.privSource.getProperty) {\n            return this.privSource.getProperty(name, def);\n        }\n        else {\n            throw new Error(\"This AudioConfig instance does not support getting properties.\");\n        }\n        return def;\n    }\n    get deviceInfo() {\n        return this.privSource.deviceInfo;\n    }\n}\nexports.AudioConfigImpl = AudioConfigImpl;\nclass AudioOutputConfigImpl extends AudioConfig {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {IAudioDestination} destination - An audio destination.\n     */\n    constructor(destination) {\n        super();\n        this.privDestination = destination;\n    }\n    set format(format) {\n        this.privDestination.format = format;\n    }\n    write(buffer) {\n        this.privDestination.write(buffer);\n    }\n    close() {\n        this.privDestination.close();\n    }\n    id() {\n        return this.privDestination.id();\n    }\n    setProperty() {\n        throw new Error(\"This AudioConfig instance does not support setting properties.\");\n    }\n    getProperty() {\n        throw new Error(\"This AudioConfig instance does not support getting properties.\");\n    }\n}\nexports.AudioOutputConfigImpl = AudioOutputConfigImpl;\n\n//# sourceMappingURL=AudioConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationReason = void 0;\n/**\n * Defines the possible reasons a recognition result might be canceled.\n * @class CancellationReason\n */\nvar CancellationReason;\n(function (CancellationReason) {\n    /**\n     * Indicates that an error occurred during speech recognition.\n     * @member CancellationReason.Error\n     */\n    CancellationReason[CancellationReason[\"Error\"] = 0] = \"Error\";\n    /**\n     * Indicates that the end of the audio stream was reached.\n     * @member CancellationReason.EndOfStream\n     */\n    CancellationReason[CancellationReason[\"EndOfStream\"] = 1] = \"EndOfStream\";\n})(CancellationReason = exports.CancellationReason || (exports.CancellationReason = {}));\n\n//# sourceMappingURL=CancellationReason.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PullAudioInputStreamCallback = void 0;\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * An abstract base class that defines callback methods (read() and close()) for\n * custom audio input streams).\n * @class PullAudioInputStreamCallback\n */\nclass PullAudioInputStreamCallback {\n}\nexports.PullAudioInputStreamCallback = PullAudioInputStreamCallback;\n\n//# sourceMappingURL=PullAudioInputStreamCallback.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PushAudioOutputStreamCallback = void 0;\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * An abstract base class that defines callback methods (write() and close()) for\n * custom audio output streams).\n * @class PushAudioOutputStreamCallback\n */\nclass PushAudioOutputStreamCallback {\n}\nexports.PushAudioOutputStreamCallback = PushAudioOutputStreamCallback;\n\n//# sourceMappingURL=PushAudioOutputStreamCallback.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeywordRecognitionModel = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\n/**\n * Represents a keyword recognition model for recognizing when\n * the user says a keyword to initiate further speech recognition.\n * @class KeywordRecognitionModel\n */\nclass KeywordRecognitionModel {\n    /**\n     * Create and initializes a new instance.\n     * @constructor\n     */\n    constructor() {\n        this.privDisposed = false;\n        return;\n    }\n    /**\n     * Creates a keyword recognition model using the specified filename.\n     * @member KeywordRecognitionModel.fromFile\n     * @function\n     * @public\n     * @param {string} fileName - A string that represents file name for the keyword recognition model.\n     * Note, the file can point to a zip file in which case the model\n     * will be extracted from the zip.\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\n     */\n    static fromFile(fileName) {\n        Contracts_js_1.Contracts.throwIfFileDoesNotExist(fileName, \"fileName\");\n        throw new Error(\"Not yet implemented.\");\n    }\n    /**\n     * Creates a keyword recognition model using the specified filename.\n     * @member KeywordRecognitionModel.fromStream\n     * @function\n     * @public\n     * @param {string} file - A File that represents file for the keyword recognition model.\n     * Note, the file can point to a zip file in which case the model will be extracted from the zip.\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\n     */\n    static fromStream(file) {\n        Contracts_js_1.Contracts.throwIfNull(file, \"file\");\n        throw new Error(\"Not yet implemented.\");\n    }\n    /**\n     * Dispose of associated resources.\n     * @member KeywordRecognitionModel.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        if (this.privDisposed) {\n            return;\n        }\n        this.privDisposed = true;\n    }\n}\nexports.KeywordRecognitionModel = KeywordRecognitionModel;\n\n//# sourceMappingURL=KeywordRecognitionModel.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionEventArgs = void 0;\n/**\n * Defines content for session events like SessionStarted/Stopped, SoundStarted/Stopped.\n * @class SessionEventArgs\n */\nclass SessionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} sessionId - The session id.\n     */\n    constructor(sessionId) {\n        this.privSessionId = sessionId;\n    }\n    /**\n     * Represents the session identifier.\n     * @member SessionEventArgs.prototype.sessionId\n     * @function\n     * @public\n     * @returns {string} Represents the session identifier.\n     */\n    get sessionId() {\n        return this.privSessionId;\n    }\n}\nexports.SessionEventArgs = SessionEventArgs;\n\n//# sourceMappingURL=SessionEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RecognitionEventArgs = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines payload for session events like Speech Start/End Detected\n * @class\n */\nclass RecognitionEventArgs extends Exports_js_1.SessionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(offset, sessionId) {\n        super(sessionId);\n        this.privOffset = offset;\n    }\n    /**\n     * Represents the message offset\n     * @member RecognitionEventArgs.prototype.offset\n     * @function\n     * @public\n     */\n    get offset() {\n        return this.privOffset;\n    }\n}\nexports.RecognitionEventArgs = RecognitionEventArgs;\n\n//# sourceMappingURL=RecognitionEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OutputFormat = void 0;\n/**\n * Define Speech Recognizer output formats.\n * @class OutputFormat\n */\nvar OutputFormat;\n(function (OutputFormat) {\n    /**\n     * @member OutputFormat.Simple\n     */\n    OutputFormat[OutputFormat[\"Simple\"] = 0] = \"Simple\";\n    /**\n     * @member OutputFormat.Detailed\n     */\n    OutputFormat[OutputFormat[\"Detailed\"] = 1] = \"Detailed\";\n})(OutputFormat = exports.OutputFormat || (exports.OutputFormat = {}));\n\n//# sourceMappingURL=OutputFormat.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IntentRecognitionEventArgs = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Intent recognition result event arguments.\n * @class\n */\nclass IntentRecognitionEventArgs extends Exports_js_1.RecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param result - The result of the intent recognition.\n     * @param offset - The offset.\n     * @param sessionId - The session id.\n     */\n    constructor(result, offset, sessionId) {\n        super(offset, sessionId);\n        this.privResult = result;\n    }\n    /**\n     * Represents the intent recognition result.\n     * @member IntentRecognitionEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {IntentRecognitionResult} Represents the intent recognition result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\nexports.IntentRecognitionEventArgs = IntentRecognitionEventArgs;\n\n//# sourceMappingURL=IntentRecognitionEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RecognitionResult = void 0;\n/**\n * Defines result of speech recognition.\n * @class RecognitionResult\n */\nclass RecognitionResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} text - The recognized text.\n     * @param {number} duration - The duration.\n     * @param {number} offset - The offset into the stream.\n     * @param {string} language - Primary Language detected, if provided.\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {string} json - Additional Json, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    constructor(resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties) {\n        this.privResultId = resultId;\n        this.privReason = reason;\n        this.privText = text;\n        this.privDuration = duration;\n        this.privOffset = offset;\n        this.privLanguage = language;\n        this.privLanguageDetectionConfidence = languageDetectionConfidence;\n        this.privErrorDetails = errorDetails;\n        this.privJson = json;\n        this.privProperties = properties;\n    }\n    /**\n     * Specifies the result identifier.\n     * @member RecognitionResult.prototype.resultId\n     * @function\n     * @public\n     * @returns {string} Specifies the result identifier.\n     */\n    get resultId() {\n        return this.privResultId;\n    }\n    /**\n     * Specifies status of the result.\n     * @member RecognitionResult.prototype.reason\n     * @function\n     * @public\n     * @returns {ResultReason} Specifies status of the result.\n     */\n    get reason() {\n        return this.privReason;\n    }\n    /**\n     * Presents the recognized text in the result.\n     * @member RecognitionResult.prototype.text\n     * @function\n     * @public\n     * @returns {string} Presents the recognized text in the result.\n     */\n    get text() {\n        return this.privText;\n    }\n    /**\n     * Duration of recognized speech in 100 nano second increments.\n     * @member RecognitionResult.prototype.duration\n     * @function\n     * @public\n     * @returns {number} Duration of recognized speech in 100 nano second increments.\n     */\n    get duration() {\n        return this.privDuration;\n    }\n    /**\n     * Offset of recognized speech in 100 nano second increments.\n     * @member RecognitionResult.prototype.offset\n     * @function\n     * @public\n     * @returns {number} Offset of recognized speech in 100 nano second increments.\n     */\n    get offset() {\n        return this.privOffset;\n    }\n    /**\n     * Primary Language detected.\n     * @member RecognitionResult.prototype.language\n     * @function\n     * @public\n     * @returns {string} language detected.\n     */\n    get language() {\n        return this.privLanguage;\n    }\n    /**\n     * Primary Language detection confidence (Unknown, Low, Medium, High).\n     * @member RecognitionResult.prototype.languageDetectionConfidence\n     * @function\n     * @public\n     * @returns {string} detection confidence strength.\n     */\n    get languageDetectionConfidence() {\n        return this.privLanguageDetectionConfidence;\n    }\n    /**\n     * In case of an unsuccessful recognition, provides details of the occurred error.\n     * @member RecognitionResult.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} a brief description of an error.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n    /**\n     * A string containing Json serialized recognition result as it was received from the service.\n     * @member RecognitionResult.prototype.json\n     * @function\n     * @private\n     * @returns {string} Json serialized representation of the result.\n     */\n    get json() {\n        return this.privJson;\n    }\n    /**\n     * The set of properties exposed in the result.\n     * @member RecognitionResult.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The set of properties exposed in the result.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n}\nexports.RecognitionResult = RecognitionResult;\n\n//# sourceMappingURL=RecognitionResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechRecognitionResult = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines result of speech recognition.\n * @class SpeechRecognitionResult\n */\nclass SpeechRecognitionResult extends Exports_js_1.RecognitionResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @public\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} text - The recognized text.\n     * @param {number} duration - The duration.\n     * @param {number} offset - The offset into the stream.\n     * @param {string} language - Primary Language detected, if provided.\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\n     * @param {string} speakerId - speaker id for conversation transcription, if provided.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {string} json - Additional Json, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    constructor(resultId, reason, text, duration, offset, language, languageDetectionConfidence, speakerId, errorDetails, json, properties) {\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties);\n        this.privSpeakerId = speakerId;\n    }\n    /**\n     * speaker id from conversation transcription/id scenarios\n     * @member SpeechRecognitionResult.prototype.speakerId\n     * @function\n     * @public\n     * @returns {string} id of speaker in given result\n     */\n    get speakerId() {\n        return this.privSpeakerId;\n    }\n}\nexports.SpeechRecognitionResult = SpeechRecognitionResult;\n\n//# sourceMappingURL=SpeechRecognitionResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IntentRecognitionResult = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Intent recognition result.\n * @class\n */\nclass IntentRecognitionResult extends Exports_js_1.SpeechRecognitionResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param intentId - The intent id.\n     * @param resultId - The result id.\n     * @param reason - The reason.\n     * @param text - The recognized text.\n     * @param duration - The duration.\n     * @param offset - The offset into the stream.\n     * @param language - Primary Language detected, if provided.\n     * @param languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\n     * @param errorDetails - Error details, if provided.\n     * @param json - Additional Json, if provided.\n     * @param properties - Additional properties, if provided.\n     */\n    constructor(intentId, resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties) {\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, undefined, errorDetails, json, properties);\n        this.privIntentId = intentId;\n    }\n    /**\n     * A String that represents the intent identifier being recognized.\n     * @member IntentRecognitionResult.prototype.intentId\n     * @function\n     * @public\n     * @returns {string} A String that represents the intent identifier being recognized.\n     */\n    get intentId() {\n        return this.privIntentId;\n    }\n}\nexports.IntentRecognitionResult = IntentRecognitionResult;\n\n//# sourceMappingURL=IntentRecognitionResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LanguageUnderstandingModelImpl = exports.LanguageUnderstandingModel = void 0;\n// eslint-disable-next-line max-classes-per-file\nconst Contracts_js_1 = require(\"./Contracts.js\");\n/**\n * Language understanding model\n * @class LanguageUnderstandingModel\n */\nclass LanguageUnderstandingModel {\n    /**\n     * Creates and initializes a new instance\n     * @constructor\n     */\n    constructor() {\n        return;\n    }\n    /**\n     * Creates an language understanding model using the specified endpoint.\n     * @member LanguageUnderstandingModel.fromEndpoint\n     * @function\n     * @public\n     * @param {URL} uri - A String that represents the endpoint of the language understanding model.\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\n     */\n    static fromEndpoint(uri) {\n        Contracts_js_1.Contracts.throwIfNull(uri, \"uri\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(uri.hostname, \"uri\");\n        const langModelImp = new LanguageUnderstandingModelImpl();\n        // Need to extract the app ID from the URL.\n        // URL is in the format: https://<region>.api.cognitive.microsoft.com/luis/v2.0/apps/<Guid>?subscription-key=<key>&timezoneOffset=-360\n        // Start tearing the string apart.\n        // region can be extracted from the host name.\n        const firstDot = uri.host.indexOf(\".\");\n        if (-1 === firstDot) {\n            throw new Error(\"Could not determine region from endpoint\");\n        }\n        langModelImp.region = uri.host.substr(0, firstDot);\n        // Now the app ID.\n        const lastSegment = uri.pathname.lastIndexOf(\"/\") + 1;\n        if (-1 === lastSegment) {\n            throw new Error(\"Could not determine appId from endpoint\");\n        }\n        langModelImp.appId = uri.pathname.substr(lastSegment);\n        // And finally the key.\n        langModelImp.subscriptionKey = uri.searchParams.get(\"subscription-key\");\n        if (undefined === langModelImp.subscriptionKey) {\n            throw new Error(\"Could not determine subscription key from endpoint\");\n        }\n        return langModelImp;\n    }\n    /**\n     * Creates an language understanding model using the application id of Language Understanding service.\n     * @member LanguageUnderstandingModel.fromAppId\n     * @function\n     * @public\n     * @param {string} appId - A String that represents the application id of Language Understanding service.\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\n     */\n    static fromAppId(appId) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(appId, \"appId\");\n        const langModelImp = new LanguageUnderstandingModelImpl();\n        langModelImp.appId = appId;\n        return langModelImp;\n    }\n    /**\n     * Creates a language understanding model using hostname, subscription key and application\n     * id of Language Understanding service.\n     * @member LanguageUnderstandingModel.fromSubscription\n     * @function\n     * @public\n     * @param {string} subscriptionKey - A String that represents the subscription key of\n     * Language Understanding service.\n     * @param {string} appId - A String that represents the application id of Language\n     * Understanding service.\n     * @param {LanguageUnderstandingModel} region - A String that represents the region\n     * of the Language Understanding service (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\n     */\n    static fromSubscription(subscriptionKey, appId, region) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(appId, \"appId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const langModelImp = new LanguageUnderstandingModelImpl();\n        langModelImp.appId = appId;\n        langModelImp.region = region;\n        langModelImp.subscriptionKey = subscriptionKey;\n        return langModelImp;\n    }\n}\nexports.LanguageUnderstandingModel = LanguageUnderstandingModel;\n/**\n * @private\n * @class LanguageUnderstandingModelImpl\n */\nclass LanguageUnderstandingModelImpl extends LanguageUnderstandingModel {\n}\nexports.LanguageUnderstandingModelImpl = LanguageUnderstandingModelImpl;\n\n//# sourceMappingURL=LanguageUnderstandingModel.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MeetingTranscriptionEventArgs = exports.ConversationTranscriptionEventArgs = exports.SpeechRecognitionEventArgs = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines contents of speech recognizing/recognized event.\n * @class SpeechRecognitionEventArgs\n */\nclass SpeechRecognitionEventArgs extends Exports_js_1.RecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {SpeechRecognitionResult} result - The speech recognition result.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(result, offset, sessionId) {\n        super(offset, sessionId);\n        this.privResult = result;\n    }\n    /**\n     * Specifies the recognition result.\n     * @member SpeechRecognitionEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {SpeechRecognitionResult} the recognition result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\nexports.SpeechRecognitionEventArgs = SpeechRecognitionEventArgs;\n/**\n * Defines contents of conversation transcribed/transcribing event.\n * @class ConversationTranscriptionEventArgs\n */\nclass ConversationTranscriptionEventArgs extends Exports_js_1.RecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {ConversationTranscriptionResult} result - The conversation transcription result.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(result, offset, sessionId) {\n        super(offset, sessionId);\n        this.privResult = result;\n    }\n    /**\n     * Specifies the transcription result.\n     * @member ConversationTranscription1EventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {ConversationTranscriptionResult} the recognition result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\nexports.ConversationTranscriptionEventArgs = ConversationTranscriptionEventArgs;\n/**\n * Defines contents of meeting transcribed/transcribing event.\n * @class MeetingTranscriptionEventArgs\n */\nclass MeetingTranscriptionEventArgs extends SpeechRecognitionEventArgs {\n}\nexports.MeetingTranscriptionEventArgs = MeetingTranscriptionEventArgs;\n\n//# sourceMappingURL=SpeechRecognitionEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationEventArgsBase = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines content of a CancellationEvent.\n * @class CancellationEventArgsBase\n */\nclass CancellationEventArgsBase extends Exports_js_1.RecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {CancellationReason} reason - The cancellation reason.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(reason, errorDetails, errorCode, offset, sessionId) {\n        super(offset, sessionId);\n        this.privReason = reason;\n        this.privErrorDetails = errorDetails;\n        this.privErrorCode = errorCode;\n    }\n    /**\n     * The reason the recognition was canceled.\n     * @member CancellationEventArgsBase.prototype.reason\n     * @function\n     * @public\n     * @returns {CancellationReason} Specifies the reason canceled.\n     */\n    get reason() {\n        return this.privReason;\n    }\n    /**\n     * The error code in case of an unsuccessful operation.\n     * @return An error code that represents the error reason.\n     */\n    get errorCode() {\n        return this.privErrorCode;\n    }\n    /**\n     * In case of an unsuccessful operation, provides details of the occurred error.\n     * @member CancellationEventArgsBase.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} A String that represents the error details.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n}\nexports.CancellationEventArgsBase = CancellationEventArgsBase;\n\n//# sourceMappingURL=CancellationEventArgsBase.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechRecognitionCanceledEventArgs = void 0;\nconst CancellationEventArgsBase_js_1 = require(\"./CancellationEventArgsBase.js\");\nclass SpeechRecognitionCanceledEventArgs extends CancellationEventArgsBase_js_1.CancellationEventArgsBase {\n}\nexports.SpeechRecognitionCanceledEventArgs = SpeechRecognitionCanceledEventArgs;\n\n//# sourceMappingURL=SpeechRecognitionCanceledEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationRecognitionEventArgs = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Translation text result event arguments.\n * @class TranslationRecognitionEventArgs\n */\nclass TranslationRecognitionEventArgs extends Exports_js_1.RecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {TranslationRecognitionResult} result - The translation recognition result.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(result, offset, sessionId) {\n        super(offset, sessionId);\n        this.privResult = result;\n    }\n    /**\n     * Specifies the recognition result.\n     * @member TranslationRecognitionEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {TranslationRecognitionResult} the recognition result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\nexports.TranslationRecognitionEventArgs = TranslationRecognitionEventArgs;\n\n//# sourceMappingURL=TranslationRecognitionEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationSynthesisEventArgs = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Translation Synthesis event arguments\n * @class TranslationSynthesisEventArgs\n */\nclass TranslationSynthesisEventArgs extends Exports_js_1.SessionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {TranslationSynthesisResult} result - The translation synthesis result.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(result, sessionId) {\n        super(sessionId);\n        this.privResult = result;\n    }\n    /**\n     * Specifies the translation synthesis result.\n     * @member TranslationSynthesisEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {TranslationSynthesisResult} Specifies the translation synthesis result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\nexports.TranslationSynthesisEventArgs = TranslationSynthesisEventArgs;\n\n//# sourceMappingURL=TranslationSynthesisEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationRecognitionResult = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Translation text result.\n * @class TranslationRecognitionResult\n */\nclass TranslationRecognitionResult extends Exports_js_1.SpeechRecognitionResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {Translations} translations - The translations.\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} text - The recognized text.\n     * @param {number} duration - The duration.\n     * @param {number} offset - The offset into the stream.\n     * @param {string} language - Primary Language detected, if provided.\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {string} json - Additional Json, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    constructor(translations, resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties) {\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, undefined, errorDetails, json, properties);\n        this.privTranslations = translations;\n    }\n    static fromSpeechRecognitionResult(result) {\n        return new TranslationRecognitionResult(undefined, result.resultId, result.reason, result.text, result.duration, result.offset, result.language, result.languageDetectionConfidence, result.errorDetails, result.json, result.properties);\n    }\n    /**\n     * Presents the translation results. Each item in the dictionary represents\n     * a translation result in one of target languages, where the key is the name\n     * of the target language, in BCP-47 format, and the value is the translation\n     * text in the specified language.\n     * @member TranslationRecognitionResult.prototype.translations\n     * @function\n     * @public\n     * @returns {Translations} the current translation map that holds all translations requested.\n     */\n    get translations() {\n        return this.privTranslations;\n    }\n}\nexports.TranslationRecognitionResult = TranslationRecognitionResult;\n\n//# sourceMappingURL=TranslationRecognitionResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationSynthesisResult = void 0;\n/**\n * Defines translation synthesis result, i.e. the voice output of the translated\n * text in the target language.\n * @class TranslationSynthesisResult\n */\nclass TranslationSynthesisResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {ResultReason} reason - The synthesis reason.\n     * @param {ArrayBuffer} audio - The audio data.\n     */\n    constructor(reason, audio) {\n        this.privReason = reason;\n        this.privAudio = audio;\n    }\n    /**\n     * Translated text in the target language.\n     * @member TranslationSynthesisResult.prototype.audio\n     * @function\n     * @public\n     * @returns {ArrayBuffer} Translated audio in the target language.\n     */\n    get audio() {\n        return this.privAudio;\n    }\n    /**\n     * The synthesis status.\n     * @member TranslationSynthesisResult.prototype.reason\n     * @function\n     * @public\n     * @returns {ResultReason} The synthesis status.\n     */\n    get reason() {\n        return this.privReason;\n    }\n}\nexports.TranslationSynthesisResult = TranslationSynthesisResult;\n\n//# sourceMappingURL=TranslationSynthesisResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResultReason = void 0;\n/**\n * Defines the possible reasons a recognition result might be generated.\n * @class ResultReason\n */\nvar ResultReason;\n(function (ResultReason) {\n    /**\n     * Indicates speech could not be recognized. More details\n     * can be found in the NoMatchDetails object.\n     * @member ResultReason.NoMatch\n     */\n    ResultReason[ResultReason[\"NoMatch\"] = 0] = \"NoMatch\";\n    /**\n     * Indicates that the recognition was canceled. More details\n     * can be found using the CancellationDetails object.\n     * @member ResultReason.Canceled\n     */\n    ResultReason[ResultReason[\"Canceled\"] = 1] = \"Canceled\";\n    /**\n     * Indicates the speech result contains hypothesis text.\n     * @member ResultReason.RecognizedSpeech\n     */\n    ResultReason[ResultReason[\"RecognizingSpeech\"] = 2] = \"RecognizingSpeech\";\n    /**\n     * Indicates the speech result contains final text that has been recognized.\n     * Speech Recognition is now complete for this phrase.\n     * @member ResultReason.RecognizedSpeech\n     */\n    ResultReason[ResultReason[\"RecognizedSpeech\"] = 3] = \"RecognizedSpeech\";\n    /**\n     * Indicates the speech result contains a finalized acceptance of a provided keyword.\n     * Speech recognition will continue unless otherwise configured.\n     * @member ResultReason.RecognizedKeyword\n     */\n    ResultReason[ResultReason[\"RecognizedKeyword\"] = 4] = \"RecognizedKeyword\";\n    /**\n     * Indicates the intent result contains hypothesis text and intent.\n     * @member ResultReason.RecognizingIntent\n     */\n    ResultReason[ResultReason[\"RecognizingIntent\"] = 5] = \"RecognizingIntent\";\n    /**\n     * Indicates the intent result contains final text and intent.\n     * Speech Recognition and Intent determination are now complete for this phrase.\n     * @member ResultReason.RecognizedIntent\n     */\n    ResultReason[ResultReason[\"RecognizedIntent\"] = 6] = \"RecognizedIntent\";\n    /**\n     * Indicates the translation result contains hypothesis text and its translation(s).\n     * @member ResultReason.TranslatingSpeech\n     */\n    ResultReason[ResultReason[\"TranslatingSpeech\"] = 7] = \"TranslatingSpeech\";\n    /**\n     * Indicates the translation result contains final text and corresponding translation(s).\n     * Speech Recognition and Translation are now complete for this phrase.\n     * @member ResultReason.TranslatedSpeech\n     */\n    ResultReason[ResultReason[\"TranslatedSpeech\"] = 8] = \"TranslatedSpeech\";\n    /**\n     * Indicates the synthesized audio result contains a non-zero amount of audio data\n     * @member ResultReason.SynthesizingAudio\n     */\n    ResultReason[ResultReason[\"SynthesizingAudio\"] = 9] = \"SynthesizingAudio\";\n    /**\n     * Indicates the synthesized audio is now complete for this phrase.\n     * @member ResultReason.SynthesizingAudioCompleted\n     */\n    ResultReason[ResultReason[\"SynthesizingAudioCompleted\"] = 10] = \"SynthesizingAudioCompleted\";\n    /**\n     * Indicates the speech synthesis is now started\n     * @member ResultReason.SynthesizingAudioStarted\n     */\n    ResultReason[ResultReason[\"SynthesizingAudioStarted\"] = 11] = \"SynthesizingAudioStarted\";\n    /**\n     * Indicates the voice profile is being enrolled and customers need to send more audio to create a voice profile.\n     * @member ResultReason.EnrollingVoiceProfile\n     */\n    ResultReason[ResultReason[\"EnrollingVoiceProfile\"] = 12] = \"EnrollingVoiceProfile\";\n    /**\n     * Indicates the voice profile has been enrolled.\n     * @member ResultReason.EnrolledVoiceProfile\n     */\n    ResultReason[ResultReason[\"EnrolledVoiceProfile\"] = 13] = \"EnrolledVoiceProfile\";\n    /**\n     * Indicates successful identification of some speakers.\n     * @member ResultReason.RecognizedSpeakers\n     */\n    ResultReason[ResultReason[\"RecognizedSpeakers\"] = 14] = \"RecognizedSpeakers\";\n    /**\n     * Indicates successfully verified one speaker.\n     * @member ResultReason.RecognizedSpeaker\n     */\n    ResultReason[ResultReason[\"RecognizedSpeaker\"] = 15] = \"RecognizedSpeaker\";\n    /**\n     * Indicates a voice profile has been reset successfully.\n     * @member ResultReason.ResetVoiceProfile\n     */\n    ResultReason[ResultReason[\"ResetVoiceProfile\"] = 16] = \"ResetVoiceProfile\";\n    /**\n     * Indicates a voice profile has been deleted successfully.\n     * @member ResultReason.DeletedVoiceProfile\n     */\n    ResultReason[ResultReason[\"DeletedVoiceProfile\"] = 17] = \"DeletedVoiceProfile\";\n    /**\n     * Indicates synthesis voices list has been successfully retrieved.\n     * @member ResultReason.VoicesListRetrieved\n     */\n    ResultReason[ResultReason[\"VoicesListRetrieved\"] = 18] = \"VoicesListRetrieved\";\n    /**\n     * Indicates the transcription result contains hypothesis text and its translation(s) for\n     * other participants in the conversation.\n     * @member ResultReason.TranslatingParticipantSpeech\n     */\n    ResultReason[ResultReason[\"TranslatingParticipantSpeech\"] = 19] = \"TranslatingParticipantSpeech\";\n    /**\n     * Indicates the transcription result contains final text and corresponding translation(s)\n     * for other participants in the conversation. Speech Recognition and Translation are now\n     * complete for this phrase.\n     * @member ResultReason.TranslatedParticipantSpeech\n     */\n    ResultReason[ResultReason[\"TranslatedParticipantSpeech\"] = 20] = \"TranslatedParticipantSpeech\";\n    /**\n     * <summary>\n     * Indicates the transcription result contains the instant message and corresponding\n     * translation(s).\n     * @member ResultReason.TranslatedInstantMessage\n     */\n    ResultReason[ResultReason[\"TranslatedInstantMessage\"] = 21] = \"TranslatedInstantMessage\";\n    /**\n     * Indicates the transcription result contains the instant message for other participants\n     * in the conversation and corresponding translation(s).\n     * @member ResultReason.TranslatedParticipantInstantMessage\n     */\n    ResultReason[ResultReason[\"TranslatedParticipantInstantMessage\"] = 22] = \"TranslatedParticipantInstantMessage\";\n})(ResultReason = exports.ResultReason || (exports.ResultReason = {}));\n\n//# sourceMappingURL=ResultReason.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/* eslint-disable max-classes-per-file */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechConfigImpl = exports.SpeechConfig = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\n/**\n * Speech configuration.\n * @class SpeechConfig\n */\nclass SpeechConfig {\n    /**\n     * Creates and initializes an instance.\n     * @constructor\n     */\n    constructor() {\n        return;\n    }\n    /**\n     * Static instance of SpeechConfig returned by passing subscriptionKey and service region.\n     * Note: Please use your LanguageUnderstanding subscription key in case you want to use the Intent recognizer.\n     * @member SpeechConfig.fromSubscription\n     * @function\n     * @public\n     * @param {string} subscriptionKey - The subscription key.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechConfig} The speech factory\n     */\n    static fromSubscription(subscriptionKey, region) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const speechImpl = new SpeechConfigImpl();\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, region);\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_IntentRegion, region);\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        return speechImpl;\n    }\n    /**\n     * Internal implementation of fromEndpoint() overloads. Accepts either a subscription key or a TokenCredential.\n     * @private\n     */\n    static fromEndpoint(endpoint, auth) {\n        Contracts_js_1.Contracts.throwIfNull(endpoint, \"endpoint\");\n        const isValidString = typeof auth === \"string\" && auth.trim().length > 0;\n        const isTokenCredential = typeof auth === \"object\" && auth !== null && typeof auth.getToken === \"function\";\n        if (auth !== undefined && !isValidString && !isTokenCredential) {\n            throw new Error(\"Invalid 'auth' parameter: must be a non-empty key string or a valid TokenCredential object.\");\n        }\n        const speechImpl = typeof auth === \"object\"\n            ? new SpeechConfigImpl(auth)\n            : new SpeechConfigImpl();\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint, endpoint.href);\n        if (typeof auth === \"string\" && auth.trim().length > 0) {\n            speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key, auth);\n        }\n        return speechImpl;\n    }\n    /**\n     * Creates an instance of the speech config with specified host and subscription key.\n     * This method is intended only for users who use a non-default service host. Standard resource path will be assumed.\n     * For services with a non-standard resource path or no path at all, use fromEndpoint instead.\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\n     * Note: To use an authorization token with fromHost, use fromHost(URL),\n     * and then set the AuthorizationToken property on the created SpeechConfig instance.\n     * Note: Added in version 1.9.0.\n     * @member SpeechConfig.fromHost\n     * @function\n     * @public\n     * @param {URL} host - The service endpoint to connect to. Format is \"protocol://host:port\" where \":port\" is optional.\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\n     * @returns {SpeechConfig} A speech factory instance.\n     */\n    static fromHost(hostName, subscriptionKey) {\n        Contracts_js_1.Contracts.throwIfNull(hostName, \"hostName\");\n        const speechImpl = new SpeechConfigImpl();\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, hostName.protocol + \"//\" + hostName.hostname + (hostName.port === \"\" ? \"\" : \":\" + hostName.port));\n        // Containers do not yet have /stt/speech/universal/v2 routes.\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, \"1\");\n        if (undefined !== subscriptionKey) {\n            speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        }\n        return speechImpl;\n    }\n    /**\n     * Creates an instance of the speech factory with specified initial authorization token and region.\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\n     * expires, the caller needs to refresh it by calling this setter with a new valid token.\n     * Note: Please use a token derived from your LanguageUnderstanding subscription key in case you want\n     * to use the Intent recognizer. As configuration values are copied when creating a new recognizer,\n     * the new token value will not apply to recognizers that have already been created. For recognizers\n     * that have been created before, you need to set authorization token of the corresponding recognizer\n     * to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\n     * @member SpeechConfig.fromAuthorizationToken\n     * @function\n     * @public\n     * @param {string} authorizationToken - The initial authorization token.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechConfig} A speech factory instance.\n     */\n    static fromAuthorizationToken(authorizationToken, region) {\n        Contracts_js_1.Contracts.throwIfNull(authorizationToken, \"authorizationToken\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const speechImpl = new SpeechConfigImpl();\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, region);\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_IntentRegion, region);\n        speechImpl.authorizationToken = authorizationToken;\n        return speechImpl;\n    }\n    /**\n     * Closes the configuration.\n     * @member SpeechConfig.prototype.close\n     * @function\n     * @public\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    close() { }\n}\nexports.SpeechConfig = SpeechConfig;\n/**\n * @public\n * @class SpeechConfigImpl\n */\nclass SpeechConfigImpl extends SpeechConfig {\n    constructor(tokenCredential) {\n        super();\n        this.privProperties = new Exports_js_2.PropertyCollection();\n        this.speechRecognitionLanguage = \"en-US\"; // Should we have a default?\n        this.outputFormat = Exports_js_2.OutputFormat.Simple;\n        this.privTokenCredential = tokenCredential;\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    get endPoint() {\n        return new URL(this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint));\n    }\n    get subscriptionKey() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key);\n    }\n    get region() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region);\n    }\n    get authorizationToken() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    set authorizationToken(value) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token, value);\n    }\n    get speechRecognitionLanguage() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    set speechRecognitionLanguage(value) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage, value);\n    }\n    get autoDetectSourceLanguages() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages);\n    }\n    set autoDetectSourceLanguages(value) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, value);\n    }\n    get outputFormat() {\n        return Exports_js_2.OutputFormat[this.privProperties.getProperty(Exports_js_1.OutputFormatPropertyName, undefined)];\n    }\n    set outputFormat(value) {\n        this.privProperties.setProperty(Exports_js_1.OutputFormatPropertyName, Exports_js_2.OutputFormat[value]);\n    }\n    get endpointId() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId);\n    }\n    set endpointId(value) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId, value);\n    }\n    get tokenCredential() {\n        return this.privTokenCredential;\n    }\n    setProperty(name, value) {\n        Contracts_js_1.Contracts.throwIfNull(value, \"value\");\n        this.privProperties.setProperty(name, value);\n    }\n    getProperty(name, def) {\n        return this.privProperties.getProperty(name, def);\n    }\n    setProxy(proxyHostName, proxyPort, proxyUserName, proxyPassword) {\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyHostName], proxyHostName);\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyPort], proxyPort);\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyUserName], proxyUserName);\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyPassword], proxyPassword);\n    }\n    setServiceProperty(name, value) {\n        const currentProperties = JSON.parse(this.privProperties.getProperty(Exports_js_1.ServicePropertiesPropertyName, \"{}\"));\n        currentProperties[name] = value;\n        this.privProperties.setProperty(Exports_js_1.ServicePropertiesPropertyName, JSON.stringify(currentProperties));\n    }\n    setProfanity(profanity) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_ProfanityOption, Exports_js_2.ProfanityOption[profanity]);\n    }\n    enableAudioLogging() {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EnableAudioLogging, \"true\");\n    }\n    requestWordLevelTimestamps() {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"true\");\n        this.privProperties.setProperty(Exports_js_1.OutputFormatPropertyName, Exports_js_2.OutputFormat[Exports_js_2.OutputFormat.Detailed]);\n    }\n    enableDictation() {\n        this.privProperties.setProperty(Exports_js_1.ForceDictationPropertyName, \"true\");\n    }\n    clone() {\n        const ret = new SpeechConfigImpl(this.tokenCredential);\n        ret.privProperties = this.privProperties.clone();\n        return ret;\n    }\n    get speechSynthesisLanguage() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthLanguage);\n    }\n    set speechSynthesisLanguage(language) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthLanguage, language);\n    }\n    get speechSynthesisVoiceName() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthVoice);\n    }\n    set speechSynthesisVoiceName(voice) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthVoice, voice);\n    }\n    get speechSynthesisOutputFormat() {\n        return Exports_js_2.SpeechSynthesisOutputFormat[this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)];\n    }\n    set speechSynthesisOutputFormat(format) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthOutputFormat, Exports_js_2.SpeechSynthesisOutputFormat[format]);\n    }\n}\nexports.SpeechConfigImpl = SpeechConfigImpl;\n\n//# sourceMappingURL=SpeechConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechTranslationConfigImpl = exports.SpeechTranslationConfig = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\n/**\n * Speech translation configuration.\n * @class SpeechTranslationConfig\n */\nclass SpeechTranslationConfig extends Exports_js_2.SpeechConfig {\n    /**\n     * Creates an instance of recognizer config.\n     */\n    constructor() {\n        super();\n    }\n    /**\n     * Static instance of SpeechTranslationConfig returned by passing a subscription key and service region.\n     * @member SpeechTranslationConfig.fromSubscription\n     * @function\n     * @public\n     * @param {string} subscriptionKey - The subscription key.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechTranslationConfig} The speech translation config.\n     */\n    static fromSubscription(subscriptionKey, region) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const ret = new SpeechTranslationConfigImpl();\n        ret.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        ret.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, region);\n        return ret;\n    }\n    /**\n     * Static instance of SpeechTranslationConfig returned by passing authorization token and service region.\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\n     * expires, the caller needs to refresh it by setting the property authorizationToken with a new\n     * valid token. Otherwise, all the recognizers created by this SpeechTranslationConfig instance\n     * will encounter errors during recognition.\n     * As configuration values are copied when creating a new recognizer, the new token value will not apply\n     * to recognizers that have already been created.\n     * For recognizers that have been created before, you need to set authorization token of the corresponding recognizer\n     * to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\n     * @member SpeechTranslationConfig.fromAuthorizationToken\n     * @function\n     * @public\n     * @param {string} authorizationToken - The authorization token.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechTranslationConfig} The speech translation config.\n     */\n    static fromAuthorizationToken(authorizationToken, region) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const ret = new SpeechTranslationConfigImpl();\n        ret.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\n        ret.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, region);\n        return ret;\n    }\n    /**\n     * Creates an instance of the speech config with specified host and subscription key.\n     * This method is intended only for users who use a non-default service host. Standard resource path will be assumed.\n     * For services with a non-standard resource path or no path at all, use fromEndpoint instead.\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\n     * Note: To use an authorization token with fromHost, use fromHost(URL),\n     * and then set the AuthorizationToken property on the created SpeechConfig instance.\n     * Note: Added in version 1.9.0.\n     * @member SpeechConfig.fromHost\n     * @function\n     * @public\n     * @param {URL} host - The service endpoint to connect to. Format is \"protocol://host:port\" where \":port\" is optional.\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\n     * @returns {SpeechConfig} A speech factory instance.\n     */\n    static fromHost(hostName, subscriptionKey) {\n        Contracts_js_1.Contracts.throwIfNull(hostName, \"hostName\");\n        const speechImpl = new SpeechTranslationConfigImpl();\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, hostName.protocol + \"//\" + hostName.hostname + (hostName.port === \"\" ? \"\" : \":\" + hostName.port));\n        if (undefined !== subscriptionKey) {\n            speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        }\n        return speechImpl;\n    }\n    /**\n     * Internal implementation of fromEndpoint() overloads. Accepts either a subscription key or a TokenCredential.\n     * @private\n     */\n    static fromEndpoint(endpoint, auth) {\n        Contracts_js_1.Contracts.throwIfNull(endpoint, \"endpoint\");\n        const isValidString = typeof auth === \"string\" && auth.trim().length > 0;\n        const isTokenCredential = typeof auth === \"object\" && auth !== null && typeof auth.getToken === \"function\";\n        if (auth !== undefined && !isValidString && !isTokenCredential) {\n            throw new Error(\"Invalid 'auth' parameter: must be a non-empty key string or a valid TokenCredential object.\");\n        }\n        const speechImpl = typeof auth === \"object\"\n            ? new SpeechTranslationConfigImpl(auth)\n            : new SpeechTranslationConfigImpl();\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint, endpoint.href);\n        if (typeof auth === \"string\" && auth.trim().length > 0) {\n            speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key, auth);\n        }\n        return speechImpl;\n    }\n}\nexports.SpeechTranslationConfig = SpeechTranslationConfig;\n/**\n * @private\n * @class SpeechTranslationConfigImpl\n */\nclass SpeechTranslationConfigImpl extends SpeechTranslationConfig {\n    constructor(tokenCredential) {\n        super();\n        this.privSpeechProperties = new Exports_js_2.PropertyCollection();\n        this.outputFormat = Exports_js_2.OutputFormat.Simple;\n        this.privTokenCredential = tokenCredential;\n    }\n    /**\n     * Gets/Sets the authorization token.\n     * If this is set, subscription key is ignored.\n     * User needs to make sure the provided authorization token is valid and not expired.\n     * @member SpeechTranslationConfigImpl.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} value - The authorization token.\n     */\n    set authorizationToken(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token, value);\n    }\n    /**\n     * Sets the speech recognition language.\n     * @member SpeechTranslationConfigImpl.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @param {string} value - The authorization token.\n     */\n    set speechRecognitionLanguage(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage, value);\n    }\n    /**\n     * Gets the speech recognition language.\n     * @member SpeechTranslationConfigImpl.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @return {string} The speechRecognitionLanguage.\n     */\n    get speechRecognitionLanguage() {\n        return this.privSpeechProperties.getProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage]);\n    }\n    /**\n     * @member SpeechTranslationConfigImpl.prototype.subscriptionKey\n     * @function\n     * @public\n     */\n    get subscriptionKey() {\n        return this.privSpeechProperties.getProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_Key]);\n    }\n    /**\n     * Gets the output format\n     * @member SpeechTranslationConfigImpl.prototype.outputFormat\n     * @function\n     * @public\n     */\n    get outputFormat() {\n        // eslint-disable-next-line\n        return Exports_js_2.OutputFormat[this.privSpeechProperties.getProperty(Exports_js_1.OutputFormatPropertyName, undefined)];\n    }\n    /**\n     * Gets/Sets the output format\n     * @member SpeechTranslationConfigImpl.prototype.outputFormat\n     * @function\n     * @public\n     */\n    set outputFormat(value) {\n        this.privSpeechProperties.setProperty(Exports_js_1.OutputFormatPropertyName, Exports_js_2.OutputFormat[value]);\n    }\n    /**\n     * Gets the endpoint id.\n     * @member SpeechTranslationConfigImpl.prototype.endpointId\n     * @function\n     * @public\n     */\n    get endpointId() {\n        return this.privSpeechProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId);\n    }\n    /**\n     * Gets/Sets the endpoint id.\n     * @member SpeechTranslationConfigImpl.prototype.endpointId\n     * @function\n     * @public\n     */\n    set endpointId(value) {\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId, value);\n    }\n    /**\n     * Add a (text) target language to translate into.\n     * @member SpeechTranslationConfigImpl.prototype.addTargetLanguage\n     * @function\n     * @public\n     * @param {string} value - The language such as de-DE\n     */\n    addTargetLanguage(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n        const languages = this.targetLanguages;\n        if (!languages.includes(value)) {\n            languages.push(value);\n            this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\n        }\n    }\n    /**\n     * Gets the (text) target language to translate into.\n     * @member SpeechTranslationConfigImpl.prototype.targetLanguages\n     * @function\n     * @public\n     * @param {string} value - The language such as de-DE\n     */\n    get targetLanguages() {\n        if (this.privSpeechProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\n            return this.privSpeechProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\n        }\n        else {\n            return [];\n        }\n    }\n    /**\n     * Gets the voice name.\n     * @member SpeechTranslationConfigImpl.prototype.voiceName\n     * @function\n     * @public\n     */\n    get voiceName() {\n        return this.getProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_TranslationVoice]);\n    }\n    /**\n     * Gets/Sets the voice of the translated language, enable voice synthesis output.\n     * @member SpeechTranslationConfigImpl.prototype.voiceName\n     * @function\n     * @public\n     * @param {string} value - The name of the voice.\n     */\n    set voiceName(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_TranslationVoice, value);\n    }\n    /**\n     * Provides the region.\n     * @member SpeechTranslationConfigImpl.prototype.region\n     * @function\n     * @public\n     * @returns {string} The region.\n     */\n    get region() {\n        return this.privSpeechProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region);\n    }\n    get tokenCredential() {\n        return this.privTokenCredential;\n    }\n    setProxy(proxyHostName, proxyPort, proxyUserName, proxyPassword) {\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyHostName], proxyHostName);\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyPort], proxyPort);\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyUserName], proxyUserName);\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyPassword], proxyPassword);\n    }\n    /**\n     * Gets an arbitrary property value.\n     * @member SpeechTranslationConfigImpl.prototype.getProperty\n     * @function\n     * @public\n     * @param {string} name - The name of the property.\n     * @param {string} def - The default value of the property in case it is not set.\n     * @returns {string} The value of the property.\n     */\n    getProperty(name, def) {\n        return this.privSpeechProperties.getProperty(name, def);\n    }\n    /**\n     * Gets/Sets an arbitrary property value.\n     * @member SpeechTranslationConfigImpl.prototype.setProperty\n     * @function\n     * @public\n     * @param {string | PropertyId} name - The name of the property to set.\n     * @param {string} value - The value of the property.\n     */\n    setProperty(name, value) {\n        this.privSpeechProperties.setProperty(name, value);\n    }\n    /**\n     * Provides access to custom properties.\n     * @member SpeechTranslationConfigImpl.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The properties.\n     */\n    get properties() {\n        return this.privSpeechProperties;\n    }\n    /**\n     * Dispose of associated resources.\n     * @member SpeechTranslationConfigImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        return;\n    }\n    setServiceProperty(name, value) {\n        const currentProperties = JSON.parse(this.privSpeechProperties.getProperty(Exports_js_1.ServicePropertiesPropertyName, \"{}\"));\n        currentProperties[name] = value;\n        this.privSpeechProperties.setProperty(Exports_js_1.ServicePropertiesPropertyName, JSON.stringify(currentProperties));\n    }\n    setProfanity(profanity) {\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_ProfanityOption, Exports_js_2.ProfanityOption[profanity]);\n    }\n    enableAudioLogging() {\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EnableAudioLogging, \"true\");\n    }\n    requestWordLevelTimestamps() {\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"true\");\n    }\n    enableDictation() {\n        this.privSpeechProperties.setProperty(Exports_js_1.ForceDictationPropertyName, \"true\");\n    }\n    get speechSynthesisLanguage() {\n        return this.privSpeechProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthLanguage);\n    }\n    set speechSynthesisLanguage(language) {\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthLanguage, language);\n    }\n    get speechSynthesisVoiceName() {\n        return this.privSpeechProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthVoice);\n    }\n    set speechSynthesisVoiceName(voice) {\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthVoice, voice);\n    }\n    get speechSynthesisOutputFormat() {\n        // eslint-disable-next-line\n        return Exports_js_2.SpeechSynthesisOutputFormat[this.privSpeechProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)];\n    }\n    set speechSynthesisOutputFormat(format) {\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthOutputFormat, Exports_js_2.SpeechSynthesisOutputFormat[format]);\n    }\n}\nexports.SpeechTranslationConfigImpl = SpeechTranslationConfigImpl;\n\n//# sourceMappingURL=SpeechTranslationConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PropertyCollection = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Represents collection of properties and their values.\n * @class PropertyCollection\n */\nclass PropertyCollection {\n    constructor() {\n        this.privKeys = [];\n        this.privValues = [];\n    }\n    /**\n     * Returns the property value in type String.\n     * Currently only String, int and bool are allowed.\n     * If the name is not available, the specified defaultValue is returned.\n     * @member PropertyCollection.prototype.getProperty\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string | number | boolean} def - The default value which is returned if the parameter\n     * is not available in the collection.\n     * @returns {string} value of the parameter.\n     */\n    getProperty(key, def) {\n        let keyToUse;\n        if (typeof key === \"string\") {\n            keyToUse = key;\n        }\n        else {\n            keyToUse = Exports_js_1.PropertyId[key];\n        }\n        for (let n = 0; n < this.privKeys.length; n++) {\n            if (this.privKeys[n] === keyToUse) {\n                return this.privValues[n];\n            }\n        }\n        if (def === undefined) {\n            return undefined;\n        }\n        return String(def);\n    }\n    /**\n     * Sets the String value of the parameter specified by name.\n     * @member PropertyCollection.prototype.setProperty\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string} value - The value of the parameter.\n     */\n    setProperty(key, value) {\n        let keyToUse;\n        if (typeof key === \"string\") {\n            keyToUse = key;\n        }\n        else {\n            keyToUse = Exports_js_1.PropertyId[key];\n        }\n        for (let n = 0; n < this.privKeys.length; n++) {\n            if (this.privKeys[n] === keyToUse) {\n                this.privValues[n] = value;\n                return;\n            }\n        }\n        this.privKeys.push(keyToUse);\n        this.privValues.push(value);\n    }\n    /**\n     * Clones the collection.\n     * @member PropertyCollection.prototype.clone\n     * @function\n     * @public\n     * @returns {PropertyCollection} A copy of the collection.\n     */\n    clone() {\n        const clonedMap = new PropertyCollection();\n        for (let n = 0; n < this.privKeys.length; n++) {\n            clonedMap.privKeys.push(this.privKeys[n]);\n            clonedMap.privValues.push(this.privValues[n]);\n        }\n        return clonedMap;\n    }\n    /**\n     * Merges this set of properties into another, no overwrites.\n     * @member PropertyCollection.prototype.mergeTo\n     * @function\n     * @public\n     * @param {PropertyCollection}  destinationCollection - The collection to merge into.\n     */\n    mergeTo(destinationCollection) {\n        this.privKeys.forEach((key) => {\n            if (destinationCollection.getProperty(key, undefined) === undefined) {\n                const value = this.getProperty(key);\n                destinationCollection.setProperty(key, value);\n            }\n        });\n    }\n    /**\n     * Get the keys in Property Collection.\n     * @member PropertyCollection.prototype.keys\n     * @function\n     * @public\n     * @returns {string []} Keys in the collection.\n     */\n    get keys() {\n        return this.privKeys;\n    }\n}\nexports.PropertyCollection = PropertyCollection;\n\n//# sourceMappingURL=PropertyCollection.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PropertyId = void 0;\n/**\n * Defines speech property ids.\n * @class PropertyId\n */\nvar PropertyId;\n(function (PropertyId) {\n    /**\n     * The Cognitive Services Speech Service subscription Key. If you are using an intent recognizer, you need to\n     * specify the LUIS endpoint key for your particular LUIS app. Under normal circumstances, you shouldn't\n     * have to use this property directly.\n     * Instead, use [[SpeechConfig.fromSubscription]].\n     * @member PropertyId.SpeechServiceConnection_Key\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Key\"] = 0] = \"SpeechServiceConnection_Key\";\n    /**\n     * The Cognitive Services Speech Service endpoint (url). Under normal circumstances, you shouldn't\n     * have to use this property directly.\n     * Instead, use [[SpeechConfig.fromEndpoint]].\n     * NOTE: This endpoint is not the same as the endpoint used to obtain an access token.\n     * @member PropertyId.SpeechServiceConnection_Endpoint\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Endpoint\"] = 1] = \"SpeechServiceConnection_Endpoint\";\n    /**\n     * The Cognitive Services Speech Service region. Under normal circumstances, you shouldn't have to\n     * use this property directly.\n     * Instead, use [[SpeechConfig.fromSubscription]], [[SpeechConfig.fromEndpoint]], [[SpeechConfig.fromAuthorizationToken]].\n     * @member PropertyId.SpeechServiceConnection_Region\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Region\"] = 2] = \"SpeechServiceConnection_Region\";\n    /**\n     * The Cognitive Services Speech Service authorization token (aka access token). Under normal circumstances,\n     * you shouldn't have to use this property directly.\n     * Instead, use [[SpeechConfig.fromAuthorizationToken]], [[SpeechRecognizer.authorizationToken]],\n     * [[IntentRecognizer.authorizationToken]], [[TranslationRecognizer.authorizationToken]], [[SpeakerRecognizer.authorizationToken]].\n     * @member PropertyId.SpeechServiceAuthorization_Token\n     */\n    PropertyId[PropertyId[\"SpeechServiceAuthorization_Token\"] = 3] = \"SpeechServiceAuthorization_Token\";\n    /**\n     * The Cognitive Services Speech Service authorization type. Currently unused.\n     * @member PropertyId.SpeechServiceAuthorization_Type\n     */\n    PropertyId[PropertyId[\"SpeechServiceAuthorization_Type\"] = 4] = \"SpeechServiceAuthorization_Type\";\n    /**\n     * The Cognitive Services Speech Service endpoint id. Under normal circumstances, you shouldn't\n     * have to use this property directly.\n     * Instead, use [[SpeechConfig.endpointId]].\n     * NOTE: The endpoint id is available in the Speech Portal, listed under Endpoint Details.\n     * @member PropertyId.SpeechServiceConnection_EndpointId\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_EndpointId\"] = 5] = \"SpeechServiceConnection_EndpointId\";\n    /**\n     * The list of comma separated languages (BCP-47 format) used as target translation languages. Under normal circumstances,\n     * you shouldn't have to use this property directly.\n     * Instead use [[SpeechTranslationConfig.addTargetLanguage]],\n     * [[SpeechTranslationConfig.targetLanguages]], [[TranslationRecognizer.targetLanguages]].\n     * @member PropertyId.SpeechServiceConnection_TranslationToLanguages\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_TranslationToLanguages\"] = 6] = \"SpeechServiceConnection_TranslationToLanguages\";\n    /**\n     * The name of the Cognitive Service Text to Speech Service Voice. Under normal circumstances, you shouldn't have to use this\n     * property directly.\n     * Instead, use [[SpeechTranslationConfig.voiceName]].\n     * NOTE: Valid voice names can be found <a href=\"https://aka.ms/csspeech/voicenames\">here</a>.\n     * @member PropertyId.SpeechServiceConnection_TranslationVoice\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_TranslationVoice\"] = 7] = \"SpeechServiceConnection_TranslationVoice\";\n    /**\n     * Translation features.\n     * @member PropertyId.SpeechServiceConnection_TranslationFeatures\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_TranslationFeatures\"] = 8] = \"SpeechServiceConnection_TranslationFeatures\";\n    /**\n     * The category ID for translation.\n     * @member PropertyId.SpeechServiceConnection_TranslationCategoryId\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_TranslationCategoryId\"] = 9] = \"SpeechServiceConnection_TranslationCategoryId\";\n    /**\n     * The Language Understanding Service Region. Under normal circumstances, you shouldn't have to use this property directly.\n     * Instead, use [[LanguageUnderstandingModel]].\n     * @member PropertyId.SpeechServiceConnection_IntentRegion\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_IntentRegion\"] = 10] = \"SpeechServiceConnection_IntentRegion\";\n    /**\n     * The host name of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\n     * You shouldn't have to use this property directly.\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\n     * Added in version 1.4.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_ProxyHostName\"] = 11] = \"SpeechServiceConnection_ProxyHostName\";\n    /**\n     * The port of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\n     * You shouldn't have to use this property directly.\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\n     * Added in version 1.4.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_ProxyPort\"] = 12] = \"SpeechServiceConnection_ProxyPort\";\n    /**\n     * The user name of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\n     * You shouldn't have to use this property directly.\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\n     * Added in version 1.4.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_ProxyUserName\"] = 13] = \"SpeechServiceConnection_ProxyUserName\";\n    /**\n     * The password of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\n     * You shouldn't have to use this property directly.\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\n     * Added in version 1.4.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_ProxyPassword\"] = 14] = \"SpeechServiceConnection_ProxyPassword\";\n    /**\n     * The Cognitive Services Speech Service recognition Mode. Can be \"INTERACTIVE\", \"CONVERSATION\", \"DICTATION\".\n     * This property is intended to be read-only. The SDK is using it internally.\n     * @member PropertyId.SpeechServiceConnection_RecoMode\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_RecoMode\"] = 15] = \"SpeechServiceConnection_RecoMode\";\n    /**\n     * The spoken language to be recognized (in BCP-47 format). Under normal circumstances, you shouldn't have to use this property\n     * directly.\n     * Instead, use [[SpeechConfig.speechRecognitionLanguage]].\n     * @member PropertyId.SpeechServiceConnection_RecoLanguage\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_RecoLanguage\"] = 16] = \"SpeechServiceConnection_RecoLanguage\";\n    /**\n     * The session id. This id is a universally unique identifier (aka UUID) representing a specific binding of an audio input stream\n     * and the underlying speech recognition instance to which it is bound. Under normal circumstances, you shouldn't have to use this\n     * property directly.\n     * Instead use [[SessionEventArgs.sessionId]].\n     * @member PropertyId.Speech_SessionId\n     */\n    PropertyId[PropertyId[\"Speech_SessionId\"] = 17] = \"Speech_SessionId\";\n    /**\n     * The spoken language to be synthesized (e.g. en-US)\n     * @member PropertyId.SpeechServiceConnection_SynthLanguage\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_SynthLanguage\"] = 18] = \"SpeechServiceConnection_SynthLanguage\";\n    /**\n     * The name of the TTS voice to be used for speech synthesis\n     * @member PropertyId.SpeechServiceConnection_SynthVoice\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_SynthVoice\"] = 19] = \"SpeechServiceConnection_SynthVoice\";\n    /**\n     * The string to specify TTS output audio format\n     * @member PropertyId.SpeechServiceConnection_SynthOutputFormat\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_SynthOutputFormat\"] = 20] = \"SpeechServiceConnection_SynthOutputFormat\";\n    /**\n     * The list of comma separated languages used as possible source languages\n     * Added in version 1.13.0\n     * @member PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_AutoDetectSourceLanguages\"] = 21] = \"SpeechServiceConnection_AutoDetectSourceLanguages\";\n    /**\n     * The requested Cognitive Services Speech Service response output format (simple or detailed). Under normal circumstances, you shouldn't have\n     * to use this property directly.\n     * Instead use [[SpeechConfig.outputFormat]].\n     * @member PropertyId.SpeechServiceResponse_RequestDetailedResultTrueFalse\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestDetailedResultTrueFalse\"] = 22] = \"SpeechServiceResponse_RequestDetailedResultTrueFalse\";\n    /**\n     * The requested Cognitive Services Speech Service response output profanity level. Currently unused.\n     * @member PropertyId.SpeechServiceResponse_RequestProfanityFilterTrueFalse\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestProfanityFilterTrueFalse\"] = 23] = \"SpeechServiceResponse_RequestProfanityFilterTrueFalse\";\n    /**\n     * The Cognitive Services Speech Service response output (in JSON format). This property is available on recognition result objects only.\n     * @member PropertyId.SpeechServiceResponse_JsonResult\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_JsonResult\"] = 24] = \"SpeechServiceResponse_JsonResult\";\n    /**\n     * The Cognitive Services Speech Service error details (in JSON format). Under normal circumstances, you shouldn't have to\n     * use this property directly. Instead use [[CancellationDetails.errorDetails]].\n     * @member PropertyId.SpeechServiceResponse_JsonErrorDetails\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_JsonErrorDetails\"] = 25] = \"SpeechServiceResponse_JsonErrorDetails\";\n    /**\n     * The cancellation reason. Currently unused.\n     * @member PropertyId.CancellationDetails_Reason\n     */\n    PropertyId[PropertyId[\"CancellationDetails_Reason\"] = 26] = \"CancellationDetails_Reason\";\n    /**\n     * The cancellation text. Currently unused.\n     * @member PropertyId.CancellationDetails_ReasonText\n     */\n    PropertyId[PropertyId[\"CancellationDetails_ReasonText\"] = 27] = \"CancellationDetails_ReasonText\";\n    /**\n     * The Cancellation detailed text. Currently unused.\n     * @member PropertyId.CancellationDetails_ReasonDetailedText\n     */\n    PropertyId[PropertyId[\"CancellationDetails_ReasonDetailedText\"] = 28] = \"CancellationDetails_ReasonDetailedText\";\n    /**\n     * The Language Understanding Service response output (in JSON format). Available via [[IntentRecognitionResult]]\n     * @member PropertyId.LanguageUnderstandingServiceResponse_JsonResult\n     */\n    PropertyId[PropertyId[\"LanguageUnderstandingServiceResponse_JsonResult\"] = 29] = \"LanguageUnderstandingServiceResponse_JsonResult\";\n    /**\n     * The URL string built from speech configuration.\n     * This property is intended to be read-only. The SDK is using it internally.\n     * NOTE: Added in version 1.7.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Url\"] = 30] = \"SpeechServiceConnection_Url\";\n    /**\n     * The initial silence timeout value (in milliseconds) used by the service.\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_InitialSilenceTimeoutMs\"] = 31] = \"SpeechServiceConnection_InitialSilenceTimeoutMs\";\n    /**\n     * The end silence timeout value (in milliseconds) used by the service.\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_EndSilenceTimeoutMs\"] = 32] = \"SpeechServiceConnection_EndSilenceTimeoutMs\";\n    /**\n     * A duration of detected silence, measured in milliseconds, after which speech-to-text will determine a spoken\n     * phrase has ended and generate a final Recognized result. Configuring this timeout may be helpful in situations\n     * where spoken input is significantly faster or slower than usual and default segmentation behavior consistently\n     * yields results that are too long or too short. Segmentation timeout values that are inappropriately high or low\n     * can negatively affect speech-to-text accuracy; this property should be carefully configured and the resulting\n     * behavior should be thoroughly validated as intended.\n     *\n     * For more information about timeout configuration that includes discussion of default behaviors, please visit\n     * https://aka.ms/csspeech/timeouts.\n     *\n     * Added in version 1.21.0.\n     */\n    PropertyId[PropertyId[\"Speech_SegmentationSilenceTimeoutMs\"] = 33] = \"Speech_SegmentationSilenceTimeoutMs\";\n    /**\n     * SegmentationMaximumTimeMs represents the maximum length of a spoken phrase when using the Time segmentation strategy.\n     * @member Speech_SegmentationSilenceTimeoutMs must be set in order to use this setting.\n     * As the length of a spoken phrase approaches this value, the @member Speech_SegmentationSilenceTimeoutMs will be reduced until either\n     * the phrase silence timeout is reached or the phrase reaches the maximum length.\n     *\n     * Added in version 1.42.0.\n     */\n    PropertyId[PropertyId[\"Speech_SegmentationMaximumTimeMs\"] = 34] = \"Speech_SegmentationMaximumTimeMs\";\n    /**\n     * SegmentationStrategy defines the strategy used to determine when a spoken phrase has ended and a final Recognized result should be generated.\n     * Allowed values are \"Default\", \"Time\", and \"Semantic\".\n     *\n     * Valid values:\n     * - \"Default\": Uses the default strategy and settings as determined by the Speech Service. Suitable for most situations.\n     * - \"Time\": Uses a time-based strategy where the amount of silence between speech determines when to generate a final result.\n     * - \"Semantic\": Uses an AI model to determine the end of a spoken phrase based on the phrase's content.\n     *\n     * Additional Notes:\n     * - When using the Time strategy, @member Speech_SegmentationSilenceTimeoutMs can be adjusted to modify the required silence duration for ending a phrase,\n     * and @member Speech_SegmentationMaximumTimeMs can be adjusted to set the maximum length of a spoken phrase.\n     * - The Semantic strategy does not have any adjustable properties.\n     *\n     * Added in version 1.42.0.\n     */\n    PropertyId[PropertyId[\"Speech_SegmentationStrategy\"] = 35] = \"Speech_SegmentationStrategy\";\n    /**\n     * A boolean value specifying whether audio logging is enabled in the service or not.\n     * Audio and content logs are stored either in Microsoft-owned storage, or in your own storage account linked\n     * to your Cognitive Services subscription (Bring Your Own Storage (BYOS) enabled Speech resource).\n     * The logs will be removed after 30 days.\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_EnableAudioLogging\"] = 36] = \"SpeechServiceConnection_EnableAudioLogging\";\n    /**\n     * The speech service connection language identifier mode.\n     * Can be \"AtStart\" (the default), or \"Continuous\". See Language\n     * Identification document https://aka.ms/speech/lid?pivots=programming-language-javascript\n     * for more details.\n     * Added in 1.25.0\n     **/\n    PropertyId[PropertyId[\"SpeechServiceConnection_LanguageIdMode\"] = 37] = \"SpeechServiceConnection_LanguageIdMode\";\n    /**\n     * A string value representing the desired endpoint version to target for Speech Recognition.\n     * Added in version 1.21.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_RecognitionEndpointVersion\"] = 38] = \"SpeechServiceConnection_RecognitionEndpointVersion\";\n    /**\n    /**\n     * A string value the current speaker recognition scenario/mode (TextIndependentIdentification, etc.).\n     * Added in version 1.23.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_SpeakerIdMode\"] = 39] = \"SpeechServiceConnection_SpeakerIdMode\";\n    /**\n     * The requested Cognitive Services Speech Service response output profanity setting.\n     * Allowed values are \"masked\", \"removed\", and \"raw\".\n     * Added in version 1.7.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_ProfanityOption\"] = 40] = \"SpeechServiceResponse_ProfanityOption\";\n    /**\n     * A string value specifying which post processing option should be used by service.\n     * Allowed values are \"TrueText\".\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_PostProcessingOption\"] = 41] = \"SpeechServiceResponse_PostProcessingOption\";\n    /**\n     * A boolean value specifying whether to include word-level timestamps in the response result.\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestWordLevelTimestamps\"] = 42] = \"SpeechServiceResponse_RequestWordLevelTimestamps\";\n    /**\n     * The number of times a word has to be in partial results to be returned.\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_StablePartialResultThreshold\"] = 43] = \"SpeechServiceResponse_StablePartialResultThreshold\";\n    /**\n     * A string value specifying the output format option in the response result. Internal use only.\n     * Added in version 1.7.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_OutputFormatOption\"] = 44] = \"SpeechServiceResponse_OutputFormatOption\";\n    /**\n     * A boolean value to request for stabilizing translation partial results by omitting words in the end.\n     * Added in version 1.7.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_TranslationRequestStablePartialResult\"] = 45] = \"SpeechServiceResponse_TranslationRequestStablePartialResult\";\n    /**\n     * A boolean value specifying whether to request WordBoundary events.\n     * @member PropertyId.SpeechServiceResponse_RequestWordBoundary\n     * Added in version 1.21.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestWordBoundary\"] = 46] = \"SpeechServiceResponse_RequestWordBoundary\";\n    /**\n     * A boolean value specifying whether to request punctuation boundary in WordBoundary Events. Default is true.\n     * @member PropertyId.SpeechServiceResponse_RequestPunctuationBoundary\n     * Added in version 1.21.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestPunctuationBoundary\"] = 47] = \"SpeechServiceResponse_RequestPunctuationBoundary\";\n    /**\n     * A boolean value specifying whether to request sentence boundary in WordBoundary Events. Default is false.\n     * @member PropertyId.SpeechServiceResponse_RequestSentenceBoundary\n     * Added in version 1.21.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestSentenceBoundary\"] = 48] = \"SpeechServiceResponse_RequestSentenceBoundary\";\n    /**\n     * Determines if intermediate results contain speaker identification.\n     * Allowed values are \"true\" or \"false\". If set to \"true\", the intermediate results will contain speaker identification.\n     * The default value if unset or set to an invalid value is \"false\".\n     * This is currently only supported for scenarios using the ConversationTranscriber\".\n     * @member PropertyId.SpeechServiceResponse_DiarizeIntermediateResults\n     * Adding in version 1.41.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_DiarizeIntermediateResults\"] = 49] = \"SpeechServiceResponse_DiarizeIntermediateResults\";\n    /**\n     * Identifier used to connect to the backend service.\n     * @member PropertyId.Conversation_ApplicationId\n     */\n    PropertyId[PropertyId[\"Conversation_ApplicationId\"] = 50] = \"Conversation_ApplicationId\";\n    /**\n     * Type of dialog backend to connect to.\n     * @member PropertyId.Conversation_DialogType\n     */\n    PropertyId[PropertyId[\"Conversation_DialogType\"] = 51] = \"Conversation_DialogType\";\n    /**\n     * Silence timeout for listening\n     * @member PropertyId.Conversation_Initial_Silence_Timeout\n     */\n    PropertyId[PropertyId[\"Conversation_Initial_Silence_Timeout\"] = 52] = \"Conversation_Initial_Silence_Timeout\";\n    /**\n     * From Id to add to speech recognition activities.\n     * @member PropertyId.Conversation_From_Id\n     */\n    PropertyId[PropertyId[\"Conversation_From_Id\"] = 53] = \"Conversation_From_Id\";\n    /**\n     * ConversationId for the session.\n     * @member PropertyId.Conversation_Conversation_Id\n     */\n    PropertyId[PropertyId[\"Conversation_Conversation_Id\"] = 54] = \"Conversation_Conversation_Id\";\n    /**\n     * Comma separated list of custom voice deployment ids.\n     * @member PropertyId.Conversation_Custom_Voice_Deployment_Ids\n     */\n    PropertyId[PropertyId[\"Conversation_Custom_Voice_Deployment_Ids\"] = 55] = \"Conversation_Custom_Voice_Deployment_Ids\";\n    /**\n     * Speech activity template, stamp properties from the template on the activity generated by the service for speech.\n     * @member PropertyId.Conversation_Speech_Activity_Template\n     * Added in version 1.10.0.\n     */\n    PropertyId[PropertyId[\"Conversation_Speech_Activity_Template\"] = 56] = \"Conversation_Speech_Activity_Template\";\n    /**\n     * Enables or disables the receipt of turn status messages as obtained on the turnStatusReceived event.\n     * @member PropertyId.Conversation_Request_Bot_Status_Messages\n     * Added in version 1.15.0.\n     */\n    PropertyId[PropertyId[\"Conversation_Request_Bot_Status_Messages\"] = 57] = \"Conversation_Request_Bot_Status_Messages\";\n    /**\n     * Specifies the connection ID to be provided in the Agent configuration message, e.g. a Direct Line token for\n     * channel authentication.\n     * Added in version 1.15.1.\n     */\n    PropertyId[PropertyId[\"Conversation_Agent_Connection_Id\"] = 58] = \"Conversation_Agent_Connection_Id\";\n    /**\n     * The Cognitive Services Speech Service host (url). Under normal circumstances, you shouldn't have to use this property directly.\n     * Instead, use [[SpeechConfig.fromHost]].\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Host\"] = 59] = \"SpeechServiceConnection_Host\";\n    /**\n     * Set the host for service calls to the Conversation Translator REST management and websocket calls.\n     */\n    PropertyId[PropertyId[\"ConversationTranslator_Host\"] = 60] = \"ConversationTranslator_Host\";\n    /**\n     * Optionally set the the host's display name.\n     * Used when joining a conversation.\n     */\n    PropertyId[PropertyId[\"ConversationTranslator_Name\"] = 61] = \"ConversationTranslator_Name\";\n    /**\n     * Optionally set a value for the X-CorrelationId request header.\n     * Used for troubleshooting errors in the server logs. It should be a valid guid.\n     */\n    PropertyId[PropertyId[\"ConversationTranslator_CorrelationId\"] = 62] = \"ConversationTranslator_CorrelationId\";\n    /**\n     * Set the conversation token to be sent to the speech service. This enables the\n     * service to service call from the speech service to the Conversation Translator service for relaying\n     * recognitions. For internal use.\n     */\n    PropertyId[PropertyId[\"ConversationTranslator_Token\"] = 63] = \"ConversationTranslator_Token\";\n    /**\n     * The reference text of the audio for pronunciation evaluation.\n     * For this and the following pronunciation assessment parameters, see\n     * https://docs.microsoft.com/azure/cognitive-services/speech-service/rest-speech-to-text#pronunciation-assessment-parameters for details.\n     * Under normal circumstances, you shouldn't have to use this property directly.\n     * Added in version 1.15.0\n     */\n    PropertyId[PropertyId[\"PronunciationAssessment_ReferenceText\"] = 64] = \"PronunciationAssessment_ReferenceText\";\n    /**\n     * The point system for pronunciation score calibration (FivePoint or HundredMark).\n     * Under normal circumstances, you shouldn't have to use this property directly.\n     * Added in version 1.15.0\n     */\n    PropertyId[PropertyId[\"PronunciationAssessment_GradingSystem\"] = 65] = \"PronunciationAssessment_GradingSystem\";\n    /**\n     * The pronunciation evaluation granularity (Phoneme, Word, or FullText).\n     * Under normal circumstances, you shouldn't have to use this property directly.\n     * Added in version 1.15.0\n     */\n    PropertyId[PropertyId[\"PronunciationAssessment_Granularity\"] = 66] = \"PronunciationAssessment_Granularity\";\n    /**\n     * Defines if enable miscue calculation.\n     * With this enabled, the pronounced words will be compared to the reference text,\n     * and will be marked with omission/insertion based on the comparison. The default setting is False.\n     * Under normal circumstances, you shouldn't have to use this property directly.\n     * Added in version 1.15.0\n     */\n    PropertyId[PropertyId[\"PronunciationAssessment_EnableMiscue\"] = 67] = \"PronunciationAssessment_EnableMiscue\";\n    /**\n     * The json string of pronunciation assessment parameters\n     * Under normal circumstances, you shouldn't have to use this property directly.\n     * Added in version 1.15.0\n     */\n    PropertyId[PropertyId[\"PronunciationAssessment_Json\"] = 68] = \"PronunciationAssessment_Json\";\n    /**\n     * Pronunciation assessment parameters.\n     * This property is intended to be read-only. The SDK is using it internally.\n     * Added in version 1.15.0\n     */\n    PropertyId[PropertyId[\"PronunciationAssessment_Params\"] = 69] = \"PronunciationAssessment_Params\";\n    /**\n     * Version of Speaker Recognition API to use.\n     * Added in version 1.18.0\n     */\n    PropertyId[PropertyId[\"SpeakerRecognition_Api_Version\"] = 70] = \"SpeakerRecognition_Api_Version\";\n    /**\n     * Specifies whether to allow load of data URL for web worker\n     * Allowed values are \"off\" and \"on\". Default is \"on\".\n     * Added in version 1.32.0\n     */\n    PropertyId[PropertyId[\"WebWorkerLoadType\"] = 71] = \"WebWorkerLoadType\";\n    /**\n     * Talking avatar service WebRTC session description protocol.\n     * This property is intended to be read-only. The SDK is using it internally.\n     * Added in version 1.33.0\n     */\n    PropertyId[PropertyId[\"TalkingAvatarService_WebRTC_SDP\"] = 72] = \"TalkingAvatarService_WebRTC_SDP\";\n})(PropertyId = exports.PropertyId || (exports.PropertyId = {}));\n\n//# sourceMappingURL=PropertyId.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Recognizer = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\n/**\n * Defines the base class Recognizer which mainly contains common event handlers.\n * @class Recognizer\n */\nclass Recognizer {\n    /**\n     * Creates and initializes an instance of a Recognizer\n     * @constructor\n     * @param {AudioConfig} audioInput - An optional audio input stream associated with the recognizer\n     * @param {PropertyCollection} properties - A set of properties to set on the recognizer\n     * @param {IConnectionFactory} connectionFactory - The factory class used to create a custom IConnection for the recognizer\n     */\n    constructor(audioConfig, properties, connectionFactory, tokenCredential) {\n        this.audioConfig = (audioConfig !== undefined) ? audioConfig : Exports_js_3.AudioConfig.fromDefaultMicrophoneInput();\n        this.privDisposed = false;\n        this.privProperties = properties.clone();\n        this.privConnectionFactory = connectionFactory;\n        this.tokenCredential = tokenCredential;\n        this.implCommonRecognizerSetup();\n    }\n    /**\n     * Dispose of associated resources.\n     * @member Recognizer.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, errorCb) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposed);\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.dispose(true), cb, errorCb);\n    }\n    /**\n     * @Internal\n     * Internal data member to support fromRecognizer* pattern methods on other classes.\n     * Do not use externally, object returned will change without warning or notice.\n     */\n    get internalData() {\n        return this.privReco;\n    }\n    /**\n     * This method performs cleanup of resources.\n     * The Boolean parameter disposing indicates whether the method is called\n     * from Dispose (if disposing is true) or from the finalizer (if disposing is false).\n     * Derived classes should override this method to dispose resource if needed.\n     * @member Recognizer.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - Flag to request disposal.\n     */\n    async dispose(disposing) {\n        if (this.privDisposed) {\n            return;\n        }\n        this.privDisposed = true;\n        if (disposing) {\n            if (this.privReco) {\n                await this.privReco.audioSource.turnOff();\n                await this.privReco.dispose();\n            }\n        }\n    }\n    /**\n     * This method returns the current state of the telemetry setting.\n     * @member Recognizer.prototype.telemetryEnabled\n     * @function\n     * @public\n     * @returns true if the telemetry is enabled, false otherwise.\n     */\n    static get telemetryEnabled() {\n        return Exports_js_1.ServiceRecognizerBase.telemetryDataEnabled;\n    }\n    /**\n     * This method globally enables or disables telemetry.\n     * @member Recognizer.prototype.enableTelemetry\n     * @function\n     * @public\n     * @param enabled - Global setting for telemetry collection.\n     * If set to true, telemetry information like microphone errors,\n     * recognition errors are collected and sent to Microsoft.\n     * If set to false, no telemetry is sent to Microsoft.\n     */\n    static enableTelemetry(enabled) {\n        Exports_js_1.ServiceRecognizerBase.telemetryDataEnabled = enabled;\n    }\n    // Does the generic recognizer setup that is common across all recognizer types.\n    implCommonRecognizerSetup() {\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\n        let osName = \"unknown\";\n        let osVersion = \"unknown\";\n        if (typeof navigator !== \"undefined\") {\n            osPlatform = osPlatform + \"/\" + navigator.platform;\n            osName = navigator.userAgent;\n            osVersion = navigator.appVersion;\n        }\n        const recognizerConfig = this.createRecognizerConfig(new Exports_js_1.SpeechServiceConfig(new Exports_js_1.Context(new Exports_js_1.OS(osPlatform, osName, osVersion))));\n        this.privReco = this.createServiceRecognizer(Recognizer.getAuth(this.privProperties, this.tokenCredential), this.privConnectionFactory, this.audioConfig, recognizerConfig);\n    }\n    async recognizeOnceAsyncImpl(recognitionMode) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposed);\n        const ret = new Exports_js_2.Deferred();\n        await this.implRecognizerStop();\n        await this.privReco.recognize(recognitionMode, ret.resolve, ret.reject);\n        const result = await ret.promise;\n        await this.implRecognizerStop();\n        return result;\n    }\n    async startContinuousRecognitionAsyncImpl(recognitionMode) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposed);\n        await this.implRecognizerStop();\n        await this.privReco.recognize(recognitionMode, undefined, undefined);\n    }\n    async stopContinuousRecognitionAsyncImpl() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposed);\n        await this.implRecognizerStop();\n    }\n    async implRecognizerStop() {\n        if (this.privReco) {\n            await this.privReco.stopRecognizing();\n        }\n        return;\n    }\n    static getAuth(properties, tokenCredential) {\n        const subscriptionKey = properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Key, undefined);\n        if (subscriptionKey && subscriptionKey !== \"\") {\n            return new Exports_js_1.CognitiveSubscriptionKeyAuthentication(subscriptionKey);\n        }\n        if (tokenCredential) {\n            return new Exports_js_1.CognitiveTokenAuthentication(async () => {\n                try {\n                    const tokenResponse = await tokenCredential.getToken(\"https://cognitiveservices.azure.com/.default\");\n                    return tokenResponse?.token ?? \"\";\n                }\n                catch (err) {\n                    throw err;\n                }\n            }, async () => {\n                try {\n                    const tokenResponse = await tokenCredential.getToken(\"https://cognitiveservices.azure.com/.default\");\n                    return tokenResponse?.token ?? \"\";\n                }\n                catch (err) {\n                    throw err;\n                }\n            });\n        }\n        return new Exports_js_1.CognitiveTokenAuthentication(() => {\n            const authorizationToken = properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, undefined);\n            return Promise.resolve(authorizationToken);\n        }, () => {\n            const authorizationToken = properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, undefined);\n            return Promise.resolve(authorizationToken);\n        });\n    }\n}\nexports.Recognizer = Recognizer;\n\n//# sourceMappingURL=Recognizer.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RecognitionMode = void 0;\n/**\n * The Recognition modes\n */\nvar RecognitionMode;\n(function (RecognitionMode) {\n    RecognitionMode[\"Interactive\"] = \"Interactive\";\n    RecognitionMode[\"Dictation\"] = \"Dictation\";\n    RecognitionMode[\"Conversation\"] = \"Conversation\";\n    RecognitionMode[\"None\"] = \"None\";\n})(RecognitionMode = exports.RecognitionMode || (exports.RecognitionMode = {}));\n\n//# sourceMappingURL=PhraseDetectionContext.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechRecognizer = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst PhraseDetectionContext_js_1 = require(\"../common.speech/ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\n/**\n * Performs speech recognition from microphone, file, or other audio input streams, and gets transcribed text as result.\n * @class SpeechRecognizer\n */\nclass SpeechRecognizer extends Exports_js_3.Recognizer {\n    /**\n     * SpeechRecognizer constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n    constructor(speechConfig, audioConfig) {\n        const speechConfigImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(speechConfigImpl.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage), Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        super(audioConfig, speechConfigImpl.properties, new Exports_js_1.SpeechConnectionFactory(), speechConfig.tokenCredential);\n        this.privDisposedRecognizer = false;\n    }\n    /**\n     * SpeechRecognizer constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the recognizer\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n    static FromConfig(speechConfig, autoDetectSourceLanguageConfig, audioConfig) {\n        const speechConfigImpl = speechConfig;\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechConfigImpl.properties);\n        const recognizer = new SpeechRecognizer(speechConfig, audioConfig);\n        return recognizer;\n    }\n    /**\n     * Gets the endpoint id of a customized speech model that is used for speech recognition.\n     * @member SpeechRecognizer.prototype.endpointId\n     * @function\n     * @public\n     * @returns {string} the endpoint id of a customized speech model that is used for speech recognition.\n     */\n    get endpointId() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_EndpointId, \"00000000-0000-0000-0000-000000000000\");\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member SpeechRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member SpeechRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * Gets the spoken language of recognition.\n     * @member SpeechRecognizer.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @returns {string} The spoken language of recognition.\n     */\n    get speechRecognitionLanguage() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    /**\n     * Gets the output format of recognition.\n     * @member SpeechRecognizer.prototype.outputFormat\n     * @function\n     * @public\n     * @returns {OutputFormat} The output format of recognition.\n     */\n    get outputFormat() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        if (this.properties.getProperty(Exports_js_1.OutputFormatPropertyName, Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Simple]) === Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Simple]) {\n            return Exports_js_3.OutputFormat.Simple;\n        }\n        else {\n            return Exports_js_3.OutputFormat.Detailed;\n        }\n    }\n    /**\n     * The collection of properties and their values defined for this SpeechRecognizer.\n     * @member SpeechRecognizer.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechRecognizer.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Starts speech recognition, and stops after the first utterance is recognized.\n     * The task returns the recognition text as result.\n     * Note: RecognizeOnceAsync() returns when the first utterance has been recognized,\n     * so it is suitable only for single shot recognition\n     * like command or query. For long-running recognition, use StartContinuousRecognitionAsync() instead.\n     * @member SpeechRecognizer.prototype.recognizeOnceAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the SpeechRecognitionResult.\n     * @param err - Callback invoked in case of an error.\n     */\n    recognizeOnceAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.recognizeOnceAsyncImpl(PhraseDetectionContext_js_1.RecognitionMode.Interactive), cb, err);\n    }\n    /**\n     * Starts speech recognition, until stopContinuousRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * @member SpeechRecognizer.prototype.startContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startContinuousRecognitionAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.startContinuousRecognitionAsyncImpl(this.properties.getProperty(Exports_js_1.ForceDictationPropertyName, undefined) === undefined ? PhraseDetectionContext_js_1.RecognitionMode.Conversation : PhraseDetectionContext_js_1.RecognitionMode.Dictation), cb, err);\n    }\n    /**\n     * Stops continuous speech recognition.\n     * @member SpeechRecognizer.prototype.stopContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopContinuousRecognitionAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.stopContinuousRecognitionAsyncImpl(), cb, err);\n    }\n    /**\n     * Starts speech recognition with keyword spotting, until\n     * stopKeywordRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * Note: Key word spotting functionality is only available on the\n     * Speech Devices SDK. This functionality is currently not included in the SDK itself.\n     * @member SpeechRecognizer.prototype.startKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param {KeywordRecognitionModel} model The keyword recognition model that\n     * specifies the keyword to be recognized.\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startKeywordRecognitionAsync(model, cb, err) {\n        Contracts_js_1.Contracts.throwIfNull(model, \"model\");\n        if (!!err) {\n            err(\"Not yet implemented.\");\n        }\n    }\n    /**\n     * Stops continuous speech recognition.\n     * Note: Key word spotting functionality is only available on the\n     * Speech Devices SDK. This functionality is currently not included in the SDK itself.\n     * @member SpeechRecognizer.prototype.stopKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopKeywordRecognitionAsync(cb) {\n        if (!!cb) {\n            cb();\n        }\n    }\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member SpeechRecognizer.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, errorCb) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.dispose(true), cb, errorCb);\n    }\n    /**\n     * Disposes any resources held by the object.\n     * @member SpeechRecognizer.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - true if disposing the object.\n     */\n    async dispose(disposing) {\n        if (this.privDisposedRecognizer) {\n            return;\n        }\n        if (disposing) {\n            this.privDisposedRecognizer = true;\n            await this.implRecognizerStop();\n        }\n        await super.dispose(disposing);\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.privProperties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const configImpl = audioConfig;\n        return new Exports_js_1.SpeechServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\n    }\n}\nexports.SpeechRecognizer = SpeechRecognizer;\n\n//# sourceMappingURL=SpeechRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IntentRecognizer = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst PhraseDetectionContext_js_1 = require(\"../common.speech/ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\n/**\n * Intent recognizer.\n * @class\n */\nclass IntentRecognizer extends Exports_js_3.Recognizer {\n    /**\n     * Initializes an instance of the IntentRecognizer.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - The set of configuration properties.\n     * @param {AudioConfig} audioConfig - An optional audio input config associated with the recognizer\n     */\n    constructor(speechConfig, audioConfig) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig, \"speechConfig\");\n        const configImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(configImpl, \"speechConfig\");\n        super(audioConfig, configImpl.properties, new Exports_js_1.IntentConnectionFactory());\n        this.privAddedIntents = [];\n        this.privAddedLmIntents = {};\n        this.privDisposedIntentRecognizer = false;\n        this.privProperties = configImpl.properties;\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage), Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n    }\n    /**\n     * Gets the spoken language of recognition.\n     * @member IntentRecognizer.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @returns {string} the spoken language of recognition.\n     */\n    get speechRecognitionLanguage() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member IntentRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * Note: Please use a token derived from your LanguageUnderstanding subscription key for the Intent recognizer.\n     * @member IntentRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} value - Authorization token.\n     */\n    set authorizationToken(value) {\n        this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, value);\n    }\n    /**\n     * The collection of properties and their values defined for this IntentRecognizer.\n     * @member IntentRecognizer.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their\n     * values defined for this IntentRecognizer.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Starts intent recognition, and stops after the first utterance is recognized.\n     * The task returns the recognition text and intent as result.\n     * Note: RecognizeOnceAsync() returns when the first utterance has been recognized,\n     * so it is suitable only for single shot recognition like command or query.\n     * For long-running recognition, use StartContinuousRecognitionAsync() instead.\n     * @member IntentRecognizer.prototype.recognizeOnceAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the recognition has finished with an IntentRecognitionResult.\n     * @param err - Callback invoked in case of an error.\n     */\n    recognizeOnceAsync(cb, err) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n        if (Object.keys(this.privAddedLmIntents).length !== 0 || undefined !== this.privUmbrellaIntent) {\n            const context = this.buildSpeechContext();\n            this.privReco.speechContext.getContext().intent = context.Intent;\n            this.privReco.dynamicGrammar.addReferenceGrammar(context.ReferenceGrammars);\n            const intentReco = this.privReco;\n            intentReco.setIntents(this.privAddedLmIntents, this.privUmbrellaIntent);\n        }\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.recognizeOnceAsyncImpl(PhraseDetectionContext_js_1.RecognitionMode.Interactive), cb, err);\n    }\n    /**\n     * Starts speech recognition, until stopContinuousRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * @member IntentRecognizer.prototype.startContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startContinuousRecognitionAsync(cb, err) {\n        if (Object.keys(this.privAddedLmIntents).length !== 0 || undefined !== this.privUmbrellaIntent) {\n            const context = this.buildSpeechContext();\n            this.privReco.speechContext.getContext().intent = context.Intent;\n            this.privReco.dynamicGrammar.addReferenceGrammar(context.ReferenceGrammars);\n            const intentReco = this.privReco;\n            intentReco.setIntents(this.privAddedLmIntents, this.privUmbrellaIntent);\n        }\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.startContinuousRecognitionAsyncImpl(PhraseDetectionContext_js_1.RecognitionMode.Conversation), cb, err);\n    }\n    /**\n     * Stops continuous intent recognition.\n     * @member IntentRecognizer.prototype.stopContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopContinuousRecognitionAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.stopContinuousRecognitionAsyncImpl(), cb, err);\n    }\n    /**\n     * Starts speech recognition with keyword spotting, until stopKeywordRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * Note: Key word spotting functionality is only available on the Speech Devices SDK.\n     * This functionality is currently not included in the SDK itself.\n     * @member IntentRecognizer.prototype.startKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param {KeywordRecognitionModel} model - The keyword recognition model that specifies the keyword to be recognized.\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startKeywordRecognitionAsync(model, cb, err) {\n        Contracts_js_1.Contracts.throwIfNull(model, \"model\");\n        if (!!err) {\n            err(\"Not yet implemented.\");\n        }\n    }\n    /**\n     * Stops continuous speech recognition.\n     * Note: Key word spotting functionality is only available on the Speech Devices SDK.\n     * This functionality is currently not included in the SDK itself.\n     * @member IntentRecognizer.prototype.stopKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopKeywordRecognitionAsync(cb, err) {\n        if (!!cb) {\n            try {\n                cb();\n            }\n            catch (e) {\n                if (!!err) {\n                    err(e);\n                }\n            }\n        }\n    }\n    /**\n     * Adds a phrase that should be recognized as intent.\n     * @member IntentRecognizer.prototype.addIntent\n     * @function\n     * @public\n     * @param {string} intentId - A String that represents the identifier of the intent to be recognized.\n     * @param {string} phrase - A String that specifies the phrase representing the intent.\n     */\n    addIntent(simplePhrase, intentId) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(intentId, \"intentId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(simplePhrase, \"simplePhrase\");\n        this.privAddedIntents.push([intentId, simplePhrase]);\n    }\n    /**\n     * Adds an intent from Language Understanding service for recognition.\n     * @member IntentRecognizer.prototype.addIntentWithLanguageModel\n     * @function\n     * @public\n     * @param {string} intentId - A String that represents the identifier of the intent\n     * to be recognized. Ignored if intentName is empty.\n     * @param {string} model - The intent model from Language Understanding service.\n     * @param {string} intentName - The intent name defined in the intent model. If it\n     * is empty, all intent names defined in the model will be added.\n     */\n    addIntentWithLanguageModel(intentId, model, intentName) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(intentId, \"intentId\");\n        Contracts_js_1.Contracts.throwIfNull(model, \"model\");\n        const modelImpl = model;\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(modelImpl.appId, \"model.appId\");\n        this.privAddedLmIntents[intentId] = new Exports_js_1.AddedLmIntent(modelImpl, intentName);\n    }\n    /**\n     * @summary Adds all intents from the specified Language Understanding Model.\n     * @member IntentRecognizer.prototype.addAllIntents\n     * @function\n     * @public\n     * @function\n     * @public\n     * @param {LanguageUnderstandingModel} model - The language understanding model containing the intents.\n     * @param {string} intentId - A custom id String to be returned in the IntentRecognitionResult's getIntentId() method.\n     */\n    addAllIntents(model, intentId) {\n        Contracts_js_1.Contracts.throwIfNull(model, \"model\");\n        const modelImpl = model;\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(modelImpl.appId, \"model.appId\");\n        this.privUmbrellaIntent = new Exports_js_1.AddedLmIntent(modelImpl, intentId);\n    }\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member IntentRecognizer.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, errorCb) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.dispose(true), cb, errorCb);\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.privProperties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const audioImpl = audioConfig;\n        return new Exports_js_1.IntentServiceRecognizer(authentication, connectionFactory, audioImpl, recognizerConfig, this);\n    }\n    async dispose(disposing) {\n        if (this.privDisposedIntentRecognizer) {\n            return;\n        }\n        if (disposing) {\n            this.privDisposedIntentRecognizer = true;\n            await super.dispose(disposing);\n        }\n    }\n    buildSpeechContext() {\n        let appId;\n        let region;\n        let subscriptionKey;\n        const refGrammers = [];\n        if (undefined !== this.privUmbrellaIntent) {\n            appId = this.privUmbrellaIntent.modelImpl.appId;\n            region = this.privUmbrellaIntent.modelImpl.region;\n            subscriptionKey = this.privUmbrellaIntent.modelImpl.subscriptionKey;\n        }\n        // Build the reference grammer array.\n        for (const intentId of Object.keys(this.privAddedLmIntents)) {\n            const addedLmIntent = this.privAddedLmIntents[intentId];\n            // validate all the same model, region, and key...\n            if (appId === undefined) {\n                appId = addedLmIntent.modelImpl.appId;\n            }\n            else {\n                if (appId !== addedLmIntent.modelImpl.appId) {\n                    throw new Error(\"Intents must all be from the same LUIS model\");\n                }\n            }\n            if (region === undefined) {\n                region = addedLmIntent.modelImpl.region;\n            }\n            else {\n                if (region !== addedLmIntent.modelImpl.region) {\n                    throw new Error(\"Intents must all be from the same LUIS model in a single region\");\n                }\n            }\n            if (subscriptionKey === undefined) {\n                subscriptionKey = addedLmIntent.modelImpl.subscriptionKey;\n            }\n            else {\n                if (subscriptionKey !== addedLmIntent.modelImpl.subscriptionKey) {\n                    throw new Error(\"Intents must all use the same subscription key\");\n                }\n            }\n            const grammer = \"luis/\" + appId + \"-PRODUCTION#\" + intentId;\n            refGrammers.push(grammer);\n        }\n        return {\n            Intent: {\n                id: appId,\n                key: (subscriptionKey === undefined) ? this.privProperties.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_Key]) : subscriptionKey,\n                provider: \"LUIS\",\n            },\n            ReferenceGrammars: (undefined === this.privUmbrellaIntent) ? refGrammers : [\"luis/\" + appId + \"-PRODUCTION\"],\n        };\n    }\n}\nexports.IntentRecognizer = IntentRecognizer;\n\n//# sourceMappingURL=IntentRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VoiceProfileType = void 0;\n/**\n * Output format\n * @class VoiceProfileType\n */\nvar VoiceProfileType;\n(function (VoiceProfileType) {\n    /**\n     * Text independent speaker identification\n     * @member VoiceProfileType.TextIndependentIdentification\n     */\n    VoiceProfileType[VoiceProfileType[\"TextIndependentIdentification\"] = 0] = \"TextIndependentIdentification\";\n    /**\n     * Text dependent speaker verification\n     * @member VoiceProfileType.TextDependentVerification\n     */\n    VoiceProfileType[VoiceProfileType[\"TextDependentVerification\"] = 1] = \"TextDependentVerification\";\n    /**\n     * Text independent speaker verification\n     * @member VoiceProfileType.TextIndependentVerification\n     */\n    VoiceProfileType[VoiceProfileType[\"TextIndependentVerification\"] = 2] = \"TextIndependentVerification\";\n})(VoiceProfileType = exports.VoiceProfileType || (exports.VoiceProfileType = {}));\n\n//# sourceMappingURL=VoiceProfileType.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionMessageImpl = exports.ConnectionMessage = void 0;\n// eslint-disable-next-line max-classes-per-file\nconst HeaderNames_js_1 = require(\"../common.speech/HeaderNames.js\");\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst PropertyCollection_js_1 = require(\"./PropertyCollection.js\");\nconst PropertyId_js_1 = require(\"./PropertyId.js\");\n/**\n * ConnectionMessage represents implementation specific messages sent to and received from\n * the speech service. These messages are provided for debugging purposes and should not\n * be used for production use cases with the Azure Cognitive Services Speech Service.\n * Messages sent to and received from the Speech Service are subject to change without\n * notice. This includes message contents, headers, payloads, ordering, etc.\n * Added in version 1.11.0.\n */\nclass ConnectionMessage {\n}\nexports.ConnectionMessage = ConnectionMessage;\nclass ConnectionMessageImpl {\n    constructor(message) {\n        this.privConnectionMessage = message;\n        this.privProperties = new PropertyCollection_js_1.PropertyCollection();\n        if (!!this.privConnectionMessage.headers[HeaderNames_js_1.HeaderNames.ConnectionId]) {\n            this.privProperties.setProperty(PropertyId_js_1.PropertyId.Speech_SessionId, this.privConnectionMessage.headers[HeaderNames_js_1.HeaderNames.ConnectionId]);\n        }\n        Object.keys(this.privConnectionMessage.headers).forEach((header) => {\n            this.privProperties.setProperty(header, this.privConnectionMessage.headers[header]);\n        });\n    }\n    /**\n     * The message path.\n     */\n    get path() {\n        return this.privConnectionMessage.headers[Object.keys(this.privConnectionMessage.headers).find((key) => key.toLowerCase() === \"path\".toLowerCase())];\n    }\n    /**\n     * Checks to see if the ConnectionMessage is a text message.\n     * See also IsBinaryMessage().\n     */\n    get isTextMessage() {\n        return this.privConnectionMessage.messageType === Exports_js_1.MessageType.Text;\n    }\n    /**\n     * Checks to see if the ConnectionMessage is a binary message.\n     * See also GetBinaryMessage().\n     */\n    get isBinaryMessage() {\n        return this.privConnectionMessage.messageType === Exports_js_1.MessageType.Binary;\n    }\n    /**\n     * Gets the text message payload. Typically the text message content-type is\n     * application/json. To determine other content-types use\n     * Properties.GetProperty(\"Content-Type\").\n     */\n    get TextMessage() {\n        return this.privConnectionMessage.textBody;\n    }\n    /**\n     * Gets the binary message payload.\n     */\n    get binaryMessage() {\n        return this.privConnectionMessage.binaryBody;\n    }\n    /**\n     * A collection of properties and their values defined for this <see cref=\"ConnectionMessage\"/>.\n     * Message headers can be accessed via this collection (e.g. \"Content-Type\").\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Returns a string that represents the connection message.\n     */\n    toString() {\n        return \"\";\n    }\n}\nexports.ConnectionMessageImpl = ConnectionMessageImpl;\n\n//# sourceMappingURL=ConnectionMessage.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connection = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst ConnectionMessage_js_1 = require(\"./ConnectionMessage.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\n/**\n * Connection is a proxy class for managing connection to the speech service of the specified Recognizer.\n * By default, a Recognizer autonomously manages connection to service when needed.\n * The Connection class provides additional methods for users to explicitly open or close a connection and\n * to subscribe to connection status changes.\n * The use of Connection is optional, and mainly for scenarios where fine tuning of application\n * behavior based on connection status is needed. Users can optionally call Open() to manually set up a connection\n * in advance before starting recognition on the Recognizer associated with this Connection.\n * If the Recognizer needs to connect or disconnect to service, it will\n * setup or shutdown the connection independently. In this case the Connection will be notified by change of connection\n * status via Connected/Disconnected events.\n * Added in version 1.2.1.\n */\nclass Connection {\n    /**\n     * Gets the Connection instance from the specified recognizer.\n     * @param recognizer The recognizer associated with the connection.\n     * @return The Connection instance of the recognizer.\n     */\n    static fromRecognizer(recognizer) {\n        const recoBase = recognizer.internalData;\n        const ret = new Connection();\n        ret.privInternalData = recoBase;\n        ret.setupEvents();\n        return ret;\n    }\n    /**\n     * Gets the Connection instance from the specified synthesizer.\n     * @param synthesizer The synthesizer associated with the connection.\n     * @return The Connection instance of the synthesizer.\n     */\n    static fromSynthesizer(synthesizer) {\n        const synthBase = synthesizer.internalData;\n        const ret = new Connection();\n        ret.privInternalData = synthBase;\n        ret.setupEvents();\n        return ret;\n    }\n    /**\n     * Starts to set up connection to the service.\n     * Users can optionally call openConnection() to manually set up a connection in advance before starting recognition on the\n     * Recognizer associated with this Connection. After starting recognition, calling Open() will have no effect\n     *\n     * Note: On return, the connection might not be ready yet. Please subscribe to the Connected event to\n     * be notified when the connection is established.\n     */\n    openConnection(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.privInternalData.connect(), cb, err);\n    }\n    /**\n     * Closes the connection the service.\n     * Users can optionally call closeConnection() to manually shutdown the connection of the associated Recognizer.\n     *\n     * If closeConnection() is called during recognition, recognition will fail and cancel with an error.\n     */\n    closeConnection(cb, err) {\n        if (this.privInternalData instanceof Exports_js_1.SynthesisAdapterBase) {\n            throw new Error(\"Disconnecting a synthesizer's connection is currently not supported\");\n        }\n        else {\n            (0, Exports_js_2.marshalPromiseToCallbacks)(this.privInternalData.disconnect(), cb, err);\n        }\n    }\n    /**\n     * Appends a parameter in a message to service.\n     * Added in version 1.12.1.\n     * @param path The path of the network message.\n     * @param propertyName Name of the property\n     * @param propertyValue Value of the property. This is a json string.\n     */\n    setMessageProperty(path, propertyName, propertyValue) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(propertyName, \"propertyName\");\n        if (this.privInternalData instanceof Exports_js_1.ServiceRecognizerBase) {\n            if (path.toLowerCase() !== \"speech.context\") {\n                throw new Error(\"Only speech.context message property sets are currently supported for recognizer\");\n            }\n            else {\n                const context = this.privInternalData.speechContext.getContext();\n                context[propertyName] = propertyValue;\n            }\n        }\n        else if (this.privInternalData instanceof Exports_js_1.SynthesisAdapterBase) {\n            if (path.toLowerCase() !== \"synthesis.context\") {\n                throw new Error(\"Only synthesis.context message property sets are currently supported for synthesizer\");\n            }\n            else {\n                this.privInternalData.synthesisContext.setSection(propertyName, propertyValue);\n            }\n        }\n    }\n    /**\n     * Sends a message to the speech service.\n     * Added in version 1.13.0.\n     * @param path The WebSocket path of the message\n     * @param payload The payload of the message. This is a json string or a ArrayBuffer.\n     * @param success A callback to indicate success.\n     * @param error A callback to indicate an error.\n     */\n    sendMessageAsync(path, payload, success, error) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.privInternalData.sendNetworkMessage(path, payload), success, error);\n    }\n    /**\n     * Dispose of associated resources.\n     */\n    close() {\n        /* eslint-disable no-empty */\n    }\n    setupEvents() {\n        this.privEventListener = this.privInternalData.connectionEvents.attach((connectionEvent) => {\n            if (connectionEvent.name === \"ConnectionEstablishedEvent\") {\n                if (!!this.connected) {\n                    this.connected(new Exports_js_3.ConnectionEventArgs(connectionEvent.connectionId));\n                }\n            }\n            else if (connectionEvent.name === \"ConnectionClosedEvent\") {\n                if (!!this.disconnected) {\n                    this.disconnected(new Exports_js_3.ConnectionEventArgs(connectionEvent.connectionId));\n                }\n            }\n            else if (connectionEvent.name === \"ConnectionMessageSentEvent\") {\n                if (!!this.messageSent) {\n                    this.messageSent(new Exports_js_3.ConnectionMessageEventArgs(new ConnectionMessage_js_1.ConnectionMessageImpl(connectionEvent.message)));\n                }\n            }\n            else if (connectionEvent.name === \"ConnectionMessageReceivedEvent\") {\n                if (!!this.messageReceived) {\n                    this.messageReceived(new Exports_js_3.ConnectionMessageEventArgs(new ConnectionMessage_js_1.ConnectionMessageImpl(connectionEvent.message)));\n                }\n            }\n        });\n        this.privServiceEventListener = this.privInternalData.serviceEvents.attach((e) => {\n            if (!!this.receivedServiceMessage) {\n                this.receivedServiceMessage(new Exports_js_3.ServiceEventArgs(e.jsonString, e.name));\n            }\n        });\n    }\n}\nexports.Connection = Connection;\n\n//# sourceMappingURL=Connection.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationRecognizer = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst PhraseDetectionContext_js_1 = require(\"../common.speech/ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst Connection_js_1 = require(\"./Connection.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\n/**\n * Translation recognizer\n * @class TranslationRecognizer\n */\nclass TranslationRecognizer extends Exports_js_3.Recognizer {\n    /**\n     * Initializes an instance of the TranslationRecognizer.\n     * @constructor\n     * @param {SpeechTranslationConfig} speechConfig - Set of properties to configure this recognizer.\n     * @param {AudioConfig} audioConfig - An optional audio config associated with the recognizer\n     * @param {IConnectionFactory} connectionFactory - An optional connection factory to use to generate the endpoint URIs, headers to set, etc...\n     */\n    constructor(speechConfig, audioConfig, connectionFactory) {\n        const configImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(configImpl, \"speechConfig\");\n        super(audioConfig, configImpl.properties, connectionFactory || new Exports_js_1.TranslationConnectionFactory(), speechConfig.tokenCredential);\n        this.privDisposedTranslationRecognizer = false;\n        if (this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationVoice, undefined) !== undefined) {\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationVoice), Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_TranslationVoice]);\n        }\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages), Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages]);\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage), Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n    }\n    /**\n     * TranslationRecognizer constructor.\n     * @constructor\n     * @param {SpeechTranslationConfig} speechTranslationConfig - an set of initial properties for this recognizer\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the recognizer\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n    static FromConfig(speechTranslationConfig, autoDetectSourceLanguageConfig, audioConfig) {\n        const speechTranslationConfigImpl = speechTranslationConfig;\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechTranslationConfigImpl.properties);\n        if (autoDetectSourceLanguageConfig.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, undefined) === Exports_js_1.AutoDetectSourceLanguagesOpenRangeOptionName) {\n            speechTranslationConfigImpl.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage, \"en-US\");\n        }\n        return new TranslationRecognizer(speechTranslationConfig, audioConfig);\n    }\n    /**\n     * Gets the language name that was set when the recognizer was created.\n     * @member TranslationRecognizer.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @returns {string} Gets the language name that was set when the recognizer was created.\n     */\n    get speechRecognitionLanguage() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    /**\n     * Gets target languages for translation that were set when the recognizer was created.\n     * The language is specified in BCP-47 format. The translation will provide translated text for each of language.\n     * @member TranslationRecognizer.prototype.targetLanguages\n     * @function\n     * @public\n     * @returns {string[]} Gets target languages for translation that were set when the recognizer was created.\n     */\n    get targetLanguages() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\n    }\n    /**\n     * Gets the name of output voice.\n     * @member TranslationRecognizer.prototype.voiceName\n     * @function\n     * @public\n     * @returns {string} the name of output voice.\n     */\n    get voiceName() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationVoice, undefined);\n    }\n    /**\n     * The collection of properties and their values defined for this TranslationRecognizer.\n     * @member TranslationRecognizer.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this TranslationRecognizer.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member TranslationRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member TranslationRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} value - Authorization token.\n     */\n    set authorizationToken(value) {\n        this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, value);\n    }\n    /**\n     * Starts recognition and translation, and stops after the first utterance is recognized.\n     * The task returns the translation text as result.\n     * Note: recognizeOnceAsync returns when the first utterance has been recognized, so it is suitable only\n     * for single shot recognition like command or query. For long-running recognition,\n     * use startContinuousRecognitionAsync() instead.\n     * @member TranslationRecognizer.prototype.recognizeOnceAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the result when the translation has completed.\n     * @param err - Callback invoked in case of an error.\n     */\n    recognizeOnceAsync(cb, err) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.recognizeOnceAsyncImpl(PhraseDetectionContext_js_1.RecognitionMode.Interactive), cb, err);\n    }\n    /**\n     * Starts recognition and translation, until stopContinuousRecognitionAsync() is called.\n     * User must subscribe to events to receive translation results.\n     * @member TranslationRecognizer.prototype.startContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the translation has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startContinuousRecognitionAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.startContinuousRecognitionAsyncImpl(PhraseDetectionContext_js_1.RecognitionMode.Conversation), cb, err);\n    }\n    /**\n     * Stops continuous recognition and translation.\n     * @member TranslationRecognizer.prototype.stopContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the translation has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopContinuousRecognitionAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.stopContinuousRecognitionAsyncImpl(), cb, err);\n    }\n    /**\n     * dynamically remove a language from list of target language\n     * (can be used while recognition is ongoing)\n     * @member TranslationRecognizer.prototype.removeTargetLanguage\n     * @function\n     * @param lang - language to be removed\n     * @public\n     */\n    removeTargetLanguage(lang) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(lang, \"language to be removed\");\n        if (this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\n            const languages = this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\n            const index = languages.indexOf(lang);\n            if (index > -1) {\n                languages.splice(index, 1);\n                this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\n                this.updateLanguages(languages);\n            }\n        }\n    }\n    /**\n     * dynamically add a language to list of target language\n     * (can be used while recognition is ongoing)\n     * @member TranslationRecognizer.prototype.addTargetLanguage\n     * @function\n     * @param lang - language to be added\n     * @public\n     */\n    addTargetLanguage(lang) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(lang, \"language to be added\");\n        let languages = [];\n        if (this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\n            languages = this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\n            if (!languages.includes(lang)) {\n                languages.push(lang);\n                this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\n            }\n        }\n        else {\n            this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages, lang);\n            languages = [lang];\n        }\n        this.updateLanguages(languages);\n    }\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member TranslationRecognizer.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, errorCb) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.dispose(true), cb, errorCb);\n    }\n    /**\n     * handles ConnectionEstablishedEvent for conversation translation scenarios.\n     * @member TranslationRecognizer.prototype.onConnection\n     * @function\n     * @public\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onConnection() { }\n    async dispose(disposing) {\n        if (this.privDisposedTranslationRecognizer) {\n            return;\n        }\n        this.privDisposedTranslationRecognizer = true;\n        if (disposing) {\n            await this.implRecognizerStop();\n            await super.dispose(disposing);\n        }\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.privProperties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const configImpl = audioConfig;\n        return new Exports_js_1.TranslationServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\n    }\n    updateLanguages(languages) {\n        const conn = Connection_js_1.Connection.fromRecognizer(this);\n        if (!!conn) {\n            conn.setMessageProperty(\"speech.context\", \"translationcontext\", { to: languages });\n            conn.sendMessageAsync(\"event\", JSON.stringify({\n                id: \"translation\",\n                name: \"updateLanguage\",\n                to: languages\n            }));\n        }\n    }\n}\nexports.TranslationRecognizer = TranslationRecognizer;\n\n//# sourceMappingURL=TranslationRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Translations = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Represents collection of parameters and their values.\n * @class Translations\n */\nclass Translations {\n    constructor() {\n        // Use an PropertyCollection internally, just wrapping it to hide the | enum syntax it has.\n        this.privMap = new Exports_js_1.PropertyCollection();\n    }\n    /**\n     * Get the languages in the object in a String array.\n     * @member Translations.prototype.languages\n     * @function\n     * @public\n     * @returns {string[]} languages in translations object.\n     */\n    get languages() {\n        return this.privMap.keys;\n    }\n    /**\n     * Returns the parameter value in type String. The parameter must have the same type as String.\n     * Currently only String, int and bool are allowed.\n     * If the name is not available, the specified defaultValue is returned.\n     * @member Translations.prototype.get\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string} def - The default value which is returned if the parameter is not available in the collection.\n     * @returns {string} value of the parameter.\n     */\n    get(key, def) {\n        return this.privMap.getProperty(key, def);\n    }\n    /**\n     * Sets the String value of the parameter specified by name.\n     * @member Translations.prototype.set\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string} value - The value of the parameter.\n     */\n    set(key, value) {\n        this.privMap.setProperty(key, value);\n    }\n}\nexports.Translations = Translations;\n\n//# sourceMappingURL=Translations.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoMatchReason = void 0;\n/**\n * Defines the possible reasons a recognition result might not be recognized.\n * @class NoMatchReason\n */\nvar NoMatchReason;\n(function (NoMatchReason) {\n    /**\n     * Indicates that speech was detected, but not recognized.\n     * @member NoMatchReason.NotRecognized\n     */\n    NoMatchReason[NoMatchReason[\"NotRecognized\"] = 0] = \"NotRecognized\";\n    /**\n     * Indicates that the start of the audio stream contained only silence,\n     * and the service timed out waiting for speech.\n     * @member NoMatchReason.InitialSilenceTimeout\n     */\n    NoMatchReason[NoMatchReason[\"InitialSilenceTimeout\"] = 1] = \"InitialSilenceTimeout\";\n    /**\n     * Indicates that the start of the audio stream contained only noise,\n     * and the service timed out waiting for speech.\n     * @member NoMatchReason.InitialBabbleTimeout\n     */\n    NoMatchReason[NoMatchReason[\"InitialBabbleTimeout\"] = 2] = \"InitialBabbleTimeout\";\n})(NoMatchReason = exports.NoMatchReason || (exports.NoMatchReason = {}));\n\n//# sourceMappingURL=NoMatchReason.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoMatchDetails = void 0;\nconst Exports_js_1 = require(\"../../src/common.speech/Exports.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\n/**\n * Contains detailed information for NoMatch recognition results.\n * @class NoMatchDetails\n */\nclass NoMatchDetails {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {NoMatchReason} reason - The no-match reason.\n     */\n    constructor(reason) {\n        this.privReason = reason;\n    }\n    /**\n     * Creates an instance of NoMatchDetails object for the NoMatch SpeechRecognitionResults.\n     * @member NoMatchDetails.fromResult\n     * @function\n     * @public\n     * @param {SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult}\n     * result - The recognition result that was not recognized.\n     * @returns {NoMatchDetails} The no match details object being created.\n     */\n    static fromResult(result) {\n        const simpleSpeech = Exports_js_1.SimpleSpeechPhrase.fromJSON(result.json, 0); // Offset fixups are already done.\n        let reason = Exports_js_2.NoMatchReason.NotRecognized;\n        switch (simpleSpeech.RecognitionStatus) {\n            case Exports_js_1.RecognitionStatus.BabbleTimeout:\n                reason = Exports_js_2.NoMatchReason.InitialBabbleTimeout;\n                break;\n            case Exports_js_1.RecognitionStatus.InitialSilenceTimeout:\n                reason = Exports_js_2.NoMatchReason.InitialSilenceTimeout;\n                break;\n            default:\n                reason = Exports_js_2.NoMatchReason.NotRecognized;\n                break;\n        }\n        return new NoMatchDetails(reason);\n    }\n    /**\n     * The reason the recognition was canceled.\n     * @member NoMatchDetails.prototype.reason\n     * @function\n     * @public\n     * @returns {NoMatchReason} Specifies the reason canceled.\n     */\n    get reason() {\n        return this.privReason;\n    }\n}\nexports.NoMatchDetails = NoMatchDetails;\n\n//# sourceMappingURL=NoMatchDetails.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationRecognitionCanceledEventArgs = void 0;\n/**\n * Define payload of speech recognition canceled result events.\n * @class TranslationRecognitionCanceledEventArgs\n */\nclass TranslationRecognitionCanceledEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} sessionid - The session id.\n     * @param {CancellationReason} cancellationReason - The cancellation reason.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {TranslationRecognitionResult} result - The result.\n     */\n    constructor(sessionid, cancellationReason, errorDetails, errorCode, result) {\n        this.privCancelReason = cancellationReason;\n        this.privErrorDetails = errorDetails;\n        this.privResult = result;\n        this.privSessionId = sessionid;\n        this.privErrorCode = errorCode;\n    }\n    /**\n     * Specifies the recognition result.\n     * @member TranslationRecognitionCanceledEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {TranslationRecognitionResult} the recognition result.\n     */\n    get result() {\n        return this.privResult;\n    }\n    /**\n     * Specifies the session identifier.\n     * @member TranslationRecognitionCanceledEventArgs.prototype.sessionId\n     * @function\n     * @public\n     * @returns {string} the session identifier.\n     */\n    get sessionId() {\n        return this.privSessionId;\n    }\n    /**\n     * The reason the recognition was canceled.\n     * @member TranslationRecognitionCanceledEventArgs.prototype.reason\n     * @function\n     * @public\n     * @returns {CancellationReason} Specifies the reason canceled.\n     */\n    get reason() {\n        return this.privCancelReason;\n    }\n    /**\n     * The error code in case of an unsuccessful recognition.\n     * Added in version 1.1.0.\n     * @return An error code that represents the error reason.\n     */\n    get errorCode() {\n        return this.privErrorCode;\n    }\n    /**\n     * In case of an unsuccessful recognition, provides details of the occurred error.\n     * @member TranslationRecognitionCanceledEventArgs.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} A String that represents the error details.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n}\nexports.TranslationRecognitionCanceledEventArgs = TranslationRecognitionCanceledEventArgs;\n\n//# sourceMappingURL=TranslationRecognitionCanceledEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IntentRecognitionCanceledEventArgs = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Define payload of intent recognition canceled result events.\n * @class IntentRecognitionCanceledEventArgs\n */\nclass IntentRecognitionCanceledEventArgs extends Exports_js_1.IntentRecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {CancellationReason} result - The result of the intent recognition.\n     * @param {string} offset - The offset.\n     * @param {IntentRecognitionResult} sessionId - The session id.\n     */\n    constructor(reason, errorDetails, errorCode, result, offset, sessionId) {\n        super(result, offset, sessionId);\n        this.privReason = reason;\n        this.privErrorDetails = errorDetails;\n        this.privErrorCode = errorCode;\n    }\n    /**\n     * The reason the recognition was canceled.\n     * @member IntentRecognitionCanceledEventArgs.prototype.reason\n     * @function\n     * @public\n     * @returns {CancellationReason} Specifies the reason canceled.\n     */\n    get reason() {\n        return this.privReason;\n    }\n    /**\n     * The error code in case of an unsuccessful recognition.\n     * Added in version 1.1.0.\n     * @return An error code that represents the error reason.\n     */\n    get errorCode() {\n        return this.privErrorCode;\n    }\n    /**\n     * In case of an unsuccessful recognition, provides details of the occurred error.\n     * @member IntentRecognitionCanceledEventArgs.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} A String that represents the error details.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n}\nexports.IntentRecognitionCanceledEventArgs = IntentRecognitionCanceledEventArgs;\n\n//# sourceMappingURL=IntentRecognitionCanceledEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationDetailsBase = void 0;\n/**\n * Contains detailed information about why a result was canceled.\n * @class CancellationDetailsBase\n */\nclass CancellationDetailsBase {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {CancellationReason} reason - The cancellation reason.\n     * @param {string} errorDetails - The error details, if provided.\n     */\n    constructor(reason, errorDetails, errorCode) {\n        this.privReason = reason;\n        this.privErrorDetails = errorDetails;\n        this.privErrorCode = errorCode;\n    }\n    /**\n     * The reason the recognition was canceled.\n     * @member CancellationDetailsBase.prototype.reason\n     * @function\n     * @public\n     * @returns {CancellationReason} Specifies the reason canceled.\n     */\n    get reason() {\n        return this.privReason;\n    }\n    /**\n     * In case of an unsuccessful recognition, provides details of the occurred error.\n     * @member CancellationDetailsBase.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} A String that represents the error details.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n    /**\n     * The error code in case of an unsuccessful recognition.\n     * Added in version 1.1.0.\n     * @return An error code that represents the error reason.\n     */\n    get ErrorCode() {\n        return this.privErrorCode;\n    }\n}\nexports.CancellationDetailsBase = CancellationDetailsBase;\n\n//# sourceMappingURL=CancellationDetailsBase.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationDetails = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst CancellationDetailsBase_js_1 = require(\"./CancellationDetailsBase.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\n/**\n * Contains detailed information about why a result was canceled.\n * @class CancellationDetails\n */\nclass CancellationDetails extends CancellationDetailsBase_js_1.CancellationDetailsBase {\n    constructor(reason, errorDetails, errorCode) {\n        super(reason, errorDetails, errorCode);\n    }\n    /**\n     * Creates an instance of CancellationDetails object for the canceled RecognitionResult.\n     * @member CancellationDetails.fromResult\n     * @function\n     * @public\n     * @param {RecognitionResult | SpeechSynthesisResult} result - The result that was canceled.\n     * @returns {CancellationDetails} The cancellation details object being created.\n     */\n    static fromResult(result) {\n        let reason = Exports_js_2.CancellationReason.Error;\n        let errorCode = Exports_js_2.CancellationErrorCode.NoError;\n        if (result instanceof Exports_js_2.RecognitionResult && !!result.json) {\n            const simpleSpeech = Exports_js_1.SimpleSpeechPhrase.fromJSON(result.json, 0); // Offset fixups are already done.\n            reason = Exports_js_1.EnumTranslation.implTranslateCancelResult(simpleSpeech.RecognitionStatus);\n        }\n        if (!!result.properties) {\n            errorCode = Exports_js_2.CancellationErrorCode[result.properties.getProperty(Exports_js_1.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[Exports_js_2.CancellationErrorCode.NoError])];\n        }\n        return new CancellationDetails(reason, result.errorDetails || Exports_js_1.EnumTranslation.implTranslateErrorDetails(errorCode), errorCode);\n    }\n}\nexports.CancellationDetails = CancellationDetails;\n\n//# sourceMappingURL=CancellationDetails.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationErrorCode = void 0;\n/**\n * Defines error code in case that CancellationReason is Error.\n * Added in version 1.1.0.\n */\nvar CancellationErrorCode;\n(function (CancellationErrorCode) {\n    /**\n     * Indicates that no error occurred during speech recognition.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"NoError\"] = 0] = \"NoError\";\n    /**\n     * Indicates an authentication error.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"AuthenticationFailure\"] = 1] = \"AuthenticationFailure\";\n    /**\n     * Indicates that one or more recognition parameters are invalid.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"BadRequestParameters\"] = 2] = \"BadRequestParameters\";\n    /**\n     * Indicates that the number of parallel requests exceeded the number of allowed\n     * concurrent transcriptions for the subscription.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"TooManyRequests\"] = 3] = \"TooManyRequests\";\n    /**\n     * Indicates a connection error.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"ConnectionFailure\"] = 4] = \"ConnectionFailure\";\n    /**\n     * Indicates a time-out error when waiting for response from service.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"ServiceTimeout\"] = 5] = \"ServiceTimeout\";\n    /**\n     * Indicates that an error is returned by the service.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"ServiceError\"] = 6] = \"ServiceError\";\n    /**\n     * Indicates an unexpected runtime error.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"RuntimeError\"] = 7] = \"RuntimeError\";\n    /**\n     * Indicates an quota overrun on existing key.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"Forbidden\"] = 8] = \"Forbidden\";\n})(CancellationErrorCode = exports.CancellationErrorCode || (exports.CancellationErrorCode = {}));\n\n//# sourceMappingURL=CancellationErrorCodes.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionEventArgs = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines payload for connection events like Connected/Disconnected.\n * Added in version 1.2.0\n */\nclass ConnectionEventArgs extends Exports_js_1.SessionEventArgs {\n}\nexports.ConnectionEventArgs = ConnectionEventArgs;\n\n//# sourceMappingURL=ConnectionEventArgs.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServiceEventArgs = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines payload for any Service message event\n * Added in version 1.9.0\n */\nclass ServiceEventArgs extends Exports_js_1.SessionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} json - json payload of the USP message.\n     */\n    constructor(json, name, sessionId) {\n        super(sessionId);\n        this.privJsonResult = json;\n        this.privEventName = name;\n    }\n    get jsonString() {\n        return this.privJsonResult;\n    }\n    get eventName() {\n        return this.privEventName;\n    }\n}\nexports.ServiceEventArgs = ServiceEventArgs;\n\n//# sourceMappingURL=ServiceEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PhraseListGrammar = void 0;\n/**\n * Allows additions of new phrases to improve speech recognition.\n *\n * Phrases added to the recognizer are effective at the start of the next recognition, or the next time the SpeechSDK must reconnect\n * to the speech service.\n */\nclass PhraseListGrammar {\n    constructor(recogBase) {\n        this.privGrammerBuilder = recogBase.dynamicGrammar;\n    }\n    /**\n     * Creates a PhraseListGrammar from a given speech recognizer. Will accept any recognizer that derives from @class Recognizer.\n     * @param recognizer The recognizer to add phrase lists to.\n     */\n    static fromRecognizer(recognizer) {\n        const recoBase = recognizer.internalData;\n        return new PhraseListGrammar(recoBase);\n    }\n    /**\n     * Adds a single phrase to the current recognizer.\n     * @param phrase Phrase to add.\n     */\n    addPhrase(phrase) {\n        this.privGrammerBuilder.addPhrase(phrase);\n    }\n    /**\n     * Adds multiple phrases to the current recognizer.\n     * @param phrases Array of phrases to add.\n     */\n    addPhrases(phrases) {\n        this.privGrammerBuilder.addPhrase(phrases);\n    }\n    /**\n     * Clears all phrases added to the current recognizer.\n     */\n    clear() {\n        this.privGrammerBuilder.clearPhrases();\n    }\n}\nexports.PhraseListGrammar = PhraseListGrammar;\n\n//# sourceMappingURL=PhraseListGrammar.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DialogServiceConfigImpl = exports.DialogServiceConfig = void 0;\n/* eslint-disable max-classes-per-file */\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Class that defines base configurations for dialog service connector\n * @class DialogServiceConfig\n */\nclass DialogServiceConfig {\n    /**\n     * Creates an instance of DialogService config.\n     * @constructor\n     */\n    constructor() {\n        return;\n    }\n    /**\n     * Sets the corresponding backend application identifier.\n     * @member DialogServiceConfig.prototype.Conversation_ApplicationId\n     * @function\n     * @public\n     * @param {string} value - The application identifier to set.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    set applicationId(value) { }\n    static get DialogTypes() {\n        return {\n            BotFramework: \"bot_framework\",\n            CustomCommands: \"custom_commands\"\n        };\n    }\n}\nexports.DialogServiceConfig = DialogServiceConfig;\n/**\n * Dialog Service configuration.\n * @class DialogServiceConfigImpl\n */\nclass DialogServiceConfigImpl extends DialogServiceConfig {\n    /**\n     * Creates an instance of dialogService config.\n     */\n    constructor() {\n        super();\n        this.privSpeechConfig = new Exports_js_1.SpeechConfigImpl();\n    }\n    /**\n     * Provides access to custom properties.\n     * @member DialogServiceConfigImpl.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The properties.\n     */\n    get properties() {\n        return this.privSpeechConfig.properties;\n    }\n    /**\n     * Gets the speech recognition language.\n     * @member DialogServiceConfigImpl.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     */\n    get speechRecognitionLanguage() {\n        return this.privSpeechConfig.speechRecognitionLanguage;\n    }\n    /**\n     * Sets the speech recognition language.\n     * @member DialogServiceConfigImpl.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @param {string} value - The language to set.\n     */\n    set speechRecognitionLanguage(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n        this.privSpeechConfig.speechRecognitionLanguage = value;\n    }\n    get outputFormat() {\n        return this.privSpeechConfig.outputFormat;\n    }\n    set outputFormat(value) {\n        this.privSpeechConfig.outputFormat = value;\n    }\n    /**\n     * Sets a named property as value\n     * @member DialogServiceConfigImpl.prototype.setProperty\n     * @function\n     * @public\n     * @param {PropertyId | string} name - The property to set.\n     * @param {string} value - The value.\n     */\n    setProperty(name, value) {\n        this.privSpeechConfig.setProperty(name, value);\n    }\n    /**\n     * Sets a named property as value\n     * @member DialogServiceConfigImpl.prototype.getProperty\n     * @function\n     * @public\n     * @param {PropertyId | string} name - The property to get.\n     * @param {string} def - The default value to return in case the property is not known.\n     * @returns {string} The current value, or provided default, of the given property.\n     */\n    getProperty(name, def) {\n        void def;\n        return this.privSpeechConfig.getProperty(name);\n    }\n    /**\n     * Sets the proxy configuration.\n     * Only relevant in Node.js environments.\n     * Added in version 1.4.0.\n     * @param proxyHostName The host name of the proxy server, without the protocol scheme (http://)\n     * @param proxyPort The port number of the proxy server.\n     * @param proxyUserName The user name of the proxy server.\n     * @param proxyPassword The password of the proxy server.\n     */\n    setProxy(proxyHostName, proxyPort, proxyUserName, proxyPassword) {\n        this.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyHostName, proxyHostName);\n        this.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyPort, `${proxyPort}`);\n        if (proxyUserName) {\n            this.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyUserName, proxyUserName);\n        }\n        if (proxyPassword) {\n            this.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyPassword, proxyPassword);\n        }\n    }\n    setServiceProperty(name, value, channel) {\n        void channel;\n        this.privSpeechConfig.setServiceProperty(name, value);\n    }\n    /**\n     * Dispose of associated resources.\n     * @member DialogServiceConfigImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        return;\n    }\n}\nexports.DialogServiceConfigImpl = DialogServiceConfigImpl;\n\n//# sourceMappingURL=DialogServiceConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BotFrameworkConfig = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst DialogServiceConfig_js_1 = require(\"./DialogServiceConfig.js\");\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Class that defines configurations for the dialog service connector object for using a Bot Framework backend.\n * @class BotFrameworkConfig\n */\nclass BotFrameworkConfig extends DialogServiceConfig_js_1.DialogServiceConfigImpl {\n    /**\n     * Creates an instance of BotFrameworkConfig.\n     */\n    constructor() {\n        super();\n    }\n    /**\n     * Creates a bot framework configuration instance with the provided subscription information.\n     * @member BotFrameworkConfig.fromSubscription\n     * @function\n     * @public\n     * @param subscription Subscription key associated with the bot\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @param botId Optional. Identifier for using a specific bot within an Azure resource group. Equivalent to the\n     * resource name.\n     * @returns {BotFrameworkConfig} A new bot framework configuration instance.\n     */\n    static fromSubscription(subscription, region, botId) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(subscription, \"subscription\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const botFrameworkConfig = new DialogServiceConfig_js_1.DialogServiceConfigImpl();\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.Conversation_DialogType, DialogServiceConfig_js_1.DialogServiceConfig.DialogTypes.BotFramework);\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Key, subscription);\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Region, region);\n        if (botId) {\n            botFrameworkConfig.setProperty(Exports_js_1.PropertyId.Conversation_ApplicationId, botId);\n        }\n        return botFrameworkConfig;\n    }\n    /**\n     * Creates a bot framework configuration instance for the specified authorization token and region.\n     * Note: The caller must ensure that an authorization token is valid. Before an authorization token expires, the\n     * caller must refresh it by setting the authorizationToken property on the corresponding\n     * DialogServiceConnector instance created with this config. The contents of configuration objects are copied\n     * when connectors are created, so setting authorizationToken on a DialogServiceConnector will not update the\n     * original configuration's authorization token. Create a new configuration instance or set the\n     * SpeechServiceAuthorization_Token property to update an existing instance if it will be used to create\n     * further DialogServiceConnectors.\n     * @member BotFrameworkConfig.fromAuthorizationToken\n     * @function\n     * @public\n     * @param authorizationToken The authorization token associated with the bot\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @param botId Optional. Identifier for using a specific bot within an Azure resource group. Equivalent to the\n     * resource name.\n     * @returns {BotFrameworkConfig} A new bot framework configuration instance.\n     */\n    static fromAuthorizationToken(authorizationToken, region, botId) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const botFrameworkConfig = new DialogServiceConfig_js_1.DialogServiceConfigImpl();\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.Conversation_DialogType, DialogServiceConfig_js_1.DialogServiceConfig.DialogTypes.BotFramework);\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Region, region);\n        if (botId) {\n            botFrameworkConfig.setProperty(Exports_js_1.PropertyId.Conversation_ApplicationId, botId);\n        }\n        return botFrameworkConfig;\n    }\n    /**\n     * Creates an instance of a BotFrameworkConfig.\n     * This method is intended only for users who use a non-default service host. The standard resource path will be\n     * assumed. For services with a non-standard resource path or no path at all, use fromEndpoint instead.\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\n     * Note: To use an authorization token with fromHost, use fromHost(URL) and then set the AuthorizationToken\n     * property on the created BotFrameworkConfig instance.\n     * Note: Added in version 1.15.0.\n     * @member BotFrameworkConfig.fromHost\n     * @function\n     * @public\n     * @param {URL | string} host - If a URL is provided, the fully-qualified host with protocol (e.g.\n     * wss://your.host.com:1234) will be used. If a string is provided, it will be embedded in\n     * wss://{host}.convai.speech.azure.us.\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization\n     * token must be set.\n     * @param botId Optional. Identifier for using a specific bot within an Azure resource group. Equivalent to the\n     * resource name.\n     * @returns {BotFrameworkConfig} A new bot framework configuration instance.\n     */\n    static fromHost(host, subscriptionKey, botId) {\n        void botId;\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(host, \"host\");\n        const resolvedHost = host instanceof URL ? host : new URL(`wss://${host}.convai.speech.azure.us`);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(resolvedHost, \"resolvedHost\");\n        const botFrameworkConfig = new DialogServiceConfig_js_1.DialogServiceConfigImpl();\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.Conversation_DialogType, DialogServiceConfig_js_1.DialogServiceConfig.DialogTypes.BotFramework);\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Host, resolvedHost.toString());\n        if (undefined !== subscriptionKey) {\n            botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        }\n        return botFrameworkConfig;\n    }\n    /**\n     * Creates an instance of a BotFrameworkConfig.\n     * This method is intended only for users who use a non-standard service endpoint or parameters.\n     * Note: The query parameters specified in the endpoint URL are not changed, even if they are set by any other APIs.\n     * Note: To use authorization token with fromEndpoint, pass an empty string to the subscriptionKey in the\n     * fromEndpoint method, and then set authorizationToken=\"token\" on the created BotFrameworkConfig instance to\n     * use the authorization token.\n     * Note: Added in version 1.15.0.\n     * @member BotFrameworkConfig.fromEndpoint\n     * @function\n     * @public\n     * @param {URL} endpoint - The service endpoint to connect to.\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization\n     * token must be set.\n     * @returns {BotFrameworkConfig} - A new bot framework configuration instance using the provided endpoint.\n     */\n    static fromEndpoint(endpoint, subscriptionKey) {\n        Contracts_js_1.Contracts.throwIfNull(endpoint, \"endpoint\");\n        const botFrameworkConfig = new DialogServiceConfig_js_1.DialogServiceConfigImpl();\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.Conversation_DialogType, DialogServiceConfig_js_1.DialogServiceConfig.DialogTypes.BotFramework);\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Endpoint, endpoint.toString());\n        if (undefined !== subscriptionKey) {\n            botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        }\n        return botFrameworkConfig;\n    }\n}\nexports.BotFrameworkConfig = BotFrameworkConfig;\n\n//# sourceMappingURL=BotFrameworkConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CustomCommandsConfig = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst DialogServiceConfig_js_1 = require(\"./DialogServiceConfig.js\");\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Class that defines configurations for the dialog service connector object for using a CustomCommands backend.\n * @class CustomCommandsConfig\n */\nclass CustomCommandsConfig extends DialogServiceConfig_js_1.DialogServiceConfigImpl {\n    /**\n     * Creates an instance of CustomCommandsConfig.\n     */\n    constructor() {\n        super();\n    }\n    /**\n     * Creates an instance of the bot framework config with the specified subscription and region.\n     * @member CustomCommandsConfig.fromSubscription\n     * @function\n     * @public\n     * @param applicationId Speech Commands application id.\n     * @param subscription Subscription key associated with the bot\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {CustomCommandsConfig} A new bot framework config.\n     */\n    static fromSubscription(applicationId, subscription, region) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(applicationId, \"applicationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(subscription, \"subscription\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const customCommandsConfig = new DialogServiceConfig_js_1.DialogServiceConfigImpl();\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.Conversation_DialogType, DialogServiceConfig_js_1.DialogServiceConfig.DialogTypes.CustomCommands);\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.Conversation_ApplicationId, applicationId);\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Key, subscription);\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Region, region);\n        return customCommandsConfig;\n    }\n    /**\n     * Creates an instance of the bot framework config with the specified Speech Commands application id, authorization token and region.\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\n     * expires, the caller needs to refresh it by calling this setter with a new valid token.\n     * As configuration values are copied when creating a new recognizer, the new token value will not apply to recognizers that have already been created.\n     * For recognizers that have been created before, you need to set authorization token of the corresponding recognizer\n     * to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\n     * @member CustomCommandsConfig.fromAuthorizationToken\n     * @function\n     * @public\n     * @param applicationId Speech Commands application id.\n     * @param authorizationToken The authorization token associated with the application.\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {CustomCommandsConfig} A new speech commands config.\n     */\n    static fromAuthorizationToken(applicationId, authorizationToken, region) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(applicationId, \"applicationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const customCommandsConfig = new DialogServiceConfig_js_1.DialogServiceConfigImpl();\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.Conversation_DialogType, DialogServiceConfig_js_1.DialogServiceConfig.DialogTypes.CustomCommands);\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.Conversation_ApplicationId, applicationId);\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Region, region);\n        return customCommandsConfig;\n    }\n    /**\n     * Sets the corresponding backend application identifier.\n     * @member CustomCommandsConfig.prototype.Conversation_ApplicationId\n     * @function\n     * @public\n     * @param {string} value - The application identifier to set.\n     */\n    set applicationId(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n        this.setProperty(Exports_js_1.PropertyId.Conversation_ApplicationId, value);\n    }\n    /**\n     * Gets the corresponding backend application identifier.\n     * @member CustomCommandsConfig.prototype.Conversation_ApplicationId\n     * @function\n     * @public\n     * @param {string} value - The application identifier to get.\n     */\n    get applicationId() {\n        return this.getProperty(Exports_js_1.PropertyId.Conversation_ApplicationId);\n    }\n}\nexports.CustomCommandsConfig = CustomCommandsConfig;\n\n//# sourceMappingURL=CustomCommandsConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryParameterNames = void 0;\nclass QueryParameterNames {\n}\nexports.QueryParameterNames = QueryParameterNames;\nQueryParameterNames.BotId = \"botid\";\nQueryParameterNames.CustomSpeechDeploymentId = \"cid\";\nQueryParameterNames.CustomVoiceDeploymentId = \"deploymentId\";\nQueryParameterNames.EnableAudioLogging = \"storeAudio\";\nQueryParameterNames.EnableLanguageId = \"lidEnabled\";\nQueryParameterNames.EnableWordLevelTimestamps = \"wordLevelTimestamps\";\nQueryParameterNames.EndSilenceTimeoutMs = \"endSilenceTimeoutMs\";\nQueryParameterNames.SegmentationSilenceTimeoutMs = \"segmentationSilenceTimeoutMs\";\nQueryParameterNames.SegmentationMaximumTimeMs = \"segmentationMaximumTimeMs\";\nQueryParameterNames.SegmentationStrategy = \"segmentationStrategy\";\nQueryParameterNames.Format = \"format\";\nQueryParameterNames.InitialSilenceTimeoutMs = \"initialSilenceTimeoutMs\";\nQueryParameterNames.Language = \"language\";\nQueryParameterNames.Profanity = \"profanity\";\nQueryParameterNames.RequestBotStatusMessages = \"enableBotMessageStatus\";\nQueryParameterNames.StableIntermediateThreshold = \"stableIntermediateThreshold\";\nQueryParameterNames.StableTranslation = \"stableTranslation\";\nQueryParameterNames.TestHooks = \"testhooks\";\nQueryParameterNames.Postprocessing = \"postprocessing\";\nQueryParameterNames.CtsMeetingId = \"meetingId\";\nQueryParameterNames.CtsDeviceId = \"deviceId\";\nQueryParameterNames.CtsIsParticipant = \"isParticipant\";\nQueryParameterNames.EnableAvatar = \"enableTalkingAvatar\";\n\n//# sourceMappingURL=QueryParameterNames.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionFactoryBase = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst Exports_js_3 = require(\"../sdk/Exports.js\");\nconst QueryParameterNames_js_1 = require(\"./QueryParameterNames.js\");\nclass ConnectionFactoryBase {\n    static getHostSuffix(region) {\n        if (!!region) {\n            if (region.toLowerCase().startsWith(\"china\")) {\n                return \".azure.cn\";\n            }\n            if (region.toLowerCase().startsWith(\"usgov\")) {\n                return \".azure.us\";\n            }\n        }\n        return \".microsoft.com\";\n    }\n    setCommonUrlParams(config, queryParams, endpoint) {\n        const propertyIdToParameterMap = new Map([\n            [Exports_js_3.PropertyId.Speech_SegmentationSilenceTimeoutMs, QueryParameterNames_js_1.QueryParameterNames.SegmentationSilenceTimeoutMs],\n            [Exports_js_3.PropertyId.SpeechServiceConnection_EnableAudioLogging, QueryParameterNames_js_1.QueryParameterNames.EnableAudioLogging],\n            [Exports_js_3.PropertyId.SpeechServiceConnection_EndSilenceTimeoutMs, QueryParameterNames_js_1.QueryParameterNames.EndSilenceTimeoutMs],\n            [Exports_js_3.PropertyId.SpeechServiceConnection_InitialSilenceTimeoutMs, QueryParameterNames_js_1.QueryParameterNames.InitialSilenceTimeoutMs],\n            [Exports_js_3.PropertyId.SpeechServiceResponse_PostProcessingOption, QueryParameterNames_js_1.QueryParameterNames.Postprocessing],\n            [Exports_js_3.PropertyId.SpeechServiceResponse_ProfanityOption, QueryParameterNames_js_1.QueryParameterNames.Profanity],\n            [Exports_js_3.PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, QueryParameterNames_js_1.QueryParameterNames.EnableWordLevelTimestamps],\n            [Exports_js_3.PropertyId.SpeechServiceResponse_StablePartialResultThreshold, QueryParameterNames_js_1.QueryParameterNames.StableIntermediateThreshold],\n        ]);\n        propertyIdToParameterMap.forEach((parameterName, propertyId) => {\n            this.setUrlParameter(propertyId, parameterName, config, queryParams, endpoint);\n        });\n        const serviceProperties = JSON.parse(config.parameters.getProperty(Exports_js_1.ServicePropertiesPropertyName, \"{}\"));\n        Object.keys(serviceProperties).forEach((value) => {\n            queryParams[value] = serviceProperties[value];\n        });\n    }\n    setUrlParameter(propId, parameterName, config, queryParams, endpoint) {\n        const value = config.parameters.getProperty(propId, undefined);\n        // FIXME: The .search() check will incorrectly match parameter name anywhere in the string\n        //        including e.g. the path portion, or even as a substring of other query parameters\n        if (value && (!endpoint || endpoint.search(parameterName) === -1)) {\n            queryParams[parameterName] = value.toLocaleLowerCase();\n        }\n    }\n    static async getRedirectUrlFromEndpoint(endpoint) {\n        let redirectUrlString;\n        if (typeof window !== \"undefined\" && typeof window.fetch !== \"undefined\") {\n            // make a rest call to the endpoint to get the redirect url\n            const redirectUrl = new URL(endpoint);\n            redirectUrl.protocol = \"https:\";\n            redirectUrl.port = \"443\";\n            const params = redirectUrl.searchParams;\n            params.append(\"GenerateRedirectResponse\", \"true\");\n            const redirectedUrlString = redirectUrl.toString();\n            Exports_js_2.Events.instance.onEvent(new Exports_js_2.ConnectionRedirectEvent(\"\", redirectedUrlString, undefined, \"ConnectionFactoryBase: redirectUrl request\"));\n            const redirectResponse = await fetch(redirectedUrlString);\n            if (redirectResponse.status !== 200) {\n                return endpoint;\n            }\n            // Fix: properly read the response text\n            redirectUrlString = await redirectResponse.text();\n        }\n        else {\n            redirectUrlString = endpoint;\n        }\n        Exports_js_2.Events.instance.onEvent(new Exports_js_2.ConnectionRedirectEvent(\"\", redirectUrlString, endpoint, \"ConnectionFactoryBase: redirectUrlString\"));\n        try {\n            // Validate the URL before returning\n            return new URL(redirectUrlString.trim()).toString();\n        }\n        catch (error) {\n            return endpoint; // Return original endpoint if the redirect URL is invalid\n        }\n    }\n}\nexports.ConnectionFactoryBase = ConnectionFactoryBase;\n\n//# sourceMappingURL=ConnectionFactoryBase.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DialogConnectionFactory = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../common.speech/Exports.js\");\nconst Exports_js_3 = require(\"../sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = require(\"./ConnectionFactoryBase.js\");\nconst Exports_js_4 = require(\"./Exports.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\nconst QueryParameterNames_js_1 = require(\"./QueryParameterNames.js\");\nclass DialogConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    create(config, authInfo, connectionId) {\n        const applicationId = config.parameters.getProperty(Exports_js_3.PropertyId.Conversation_ApplicationId, \"\");\n        const dialogType = config.parameters.getProperty(Exports_js_3.PropertyId.Conversation_DialogType);\n        const region = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Region);\n        const language = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage, \"en-US\");\n        const requestTurnStatus = config.parameters.getProperty(Exports_js_3.PropertyId.Conversation_Request_Bot_Status_Messages, \"true\");\n        const queryParams = {};\n        queryParams[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        queryParams[QueryParameterNames_js_1.QueryParameterNames.Format] = config.parameters.getProperty(Exports_js_2.OutputFormatPropertyName, Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Simple]).toLowerCase();\n        queryParams[QueryParameterNames_js_1.QueryParameterNames.Language] = language;\n        queryParams[QueryParameterNames_js_1.QueryParameterNames.RequestBotStatusMessages] = requestTurnStatus;\n        if (applicationId) {\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.BotId] = applicationId;\n            if (dialogType === Exports_js_3.DialogServiceConfig.DialogTypes.CustomCommands) {\n                queryParams[HeaderNames_js_1.HeaderNames.CustomCommandsAppId] = applicationId;\n            }\n        }\n        const resourceInfix = dialogType === Exports_js_3.DialogServiceConfig.DialogTypes.CustomCommands ? \"commands/\"\n            : \"\";\n        const version = dialogType === Exports_js_3.DialogServiceConfig.DialogTypes.CustomCommands ? \"v1\"\n            : dialogType === Exports_js_3.DialogServiceConfig.DialogTypes.BotFramework ? \"v3\"\n                : \"v0\";\n        const headers = {};\n        if (authInfo.token != null && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        // The URL used for connection is chosen in a priority order of specification:\n        //  1. If a custom endpoint is provided, that URL is used verbatim.\n        //  2. If a custom host is provided (e.g. \"wss://my.custom.endpoint.com:1123\"), a URL is constructed from it.\n        //  3. If no custom connection details are provided, a URL is constructed from default values.\n        let endpoint = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Endpoint, \"\");\n        if (!endpoint) {\n            const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n            const host = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Host, `wss://${region}.${DialogConnectionFactory.BaseUrl}${hostSuffix}`);\n            const standardizedHost = host.endsWith(\"/\") ? host : host + \"/\";\n            endpoint = `${standardizedHost}${resourceInfix}${DialogConnectionFactory.ApiKey}/${version}`;\n        }\n        this.setCommonUrlParams(config, queryParams, endpoint);\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        return Promise.resolve(new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_4.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId));\n    }\n}\nexports.DialogConnectionFactory = DialogConnectionFactory;\nDialogConnectionFactory.ApiKey = \"api\";\nDialogConnectionFactory.BaseUrl = \"convai.speech\";\n\n//# sourceMappingURL=DialogConnectorFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DialogServiceConnector = void 0;\nconst DialogConnectorFactory_js_1 = require(\"../common.speech/DialogConnectorFactory.js\");\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst PhraseDetectionContext_js_1 = require(\"../common.speech/ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\nconst PropertyId_js_1 = require(\"./PropertyId.js\");\n/**\n * Dialog Service Connector\n * @class DialogServiceConnector\n */\nclass DialogServiceConnector extends Exports_js_3.Recognizer {\n    /**\n     * Initializes an instance of the DialogServiceConnector.\n     * @constructor\n     * @param {DialogServiceConfig} dialogConfig - Set of properties to configure this recognizer.\n     * @param {AudioConfig} audioConfig - An optional audio config associated with the recognizer\n     */\n    constructor(dialogConfig, audioConfig) {\n        const dialogServiceConfigImpl = dialogConfig;\n        Contracts_js_1.Contracts.throwIfNull(dialogConfig, \"dialogConfig\");\n        super(audioConfig, dialogServiceConfigImpl.properties, new DialogConnectorFactory_js_1.DialogConnectionFactory());\n        this.isTurnComplete = true;\n        this.privIsDisposed = false;\n        this.privProperties = dialogServiceConfigImpl.properties.clone();\n        const agentConfig = this.buildAgentConfig();\n        this.privReco.agentConfig.set(agentConfig);\n    }\n    /**\n     * Starts a connection to the service.\n     * Users can optionally call connect() to manually set up a connection in advance, before starting interactions.\n     *\n     * Note: On return, the connection might not be ready yet. Please subscribe to the Connected event to\n     * be notified when the connection is established.\n     * @member DialogServiceConnector.prototype.connect\n     * @function\n     * @public\n     */\n    connect(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.privReco.connect(), cb, err);\n    }\n    /**\n     * Closes the connection the service.\n     * Users can optionally call disconnect() to manually shutdown the connection of the associated DialogServiceConnector.\n     *\n     * If disconnect() is called during a recognition, recognition will fail and cancel with an error.\n     */\n    disconnect(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.privReco.disconnect(), cb, err);\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member DialogServiceConnector.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(PropertyId_js_1.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Sets the authorization token used to communicate with the service.\n     * @member DialogServiceConnector.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(PropertyId_js_1.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * The collection of properties and their values defined for this DialogServiceConnector.\n     * @member DialogServiceConnector.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this DialogServiceConnector.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /** Gets the template for the activity generated by service from speech.\n     * Properties from the template will be stamped on the generated activity.\n     * It can be empty\n     */\n    get speechActivityTemplate() {\n        return this.properties.getProperty(PropertyId_js_1.PropertyId.Conversation_Speech_Activity_Template);\n    }\n    /** Sets the template for the activity generated by service from speech.\n     * Properties from the template will be stamped on the generated activity.\n     * It can be null or empty.\n     * Note: it has to be a valid Json object.\n     */\n    set speechActivityTemplate(speechActivityTemplate) {\n        this.properties.setProperty(PropertyId_js_1.PropertyId.Conversation_Speech_Activity_Template, speechActivityTemplate);\n    }\n    /**\n     * Starts recognition and stops after the first utterance is recognized.\n     * @member DialogServiceConnector.prototype.listenOnceAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the result when the reco has completed.\n     * @param err - Callback invoked in case of an error.\n     */\n    listenOnceAsync(cb, err) {\n        if (this.isTurnComplete) {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            const callbackHolder = async () => {\n                await this.privReco.connect();\n                await this.implRecognizerStop();\n                this.isTurnComplete = false;\n                const ret = new Exports_js_2.Deferred();\n                await this.privReco.recognize(PhraseDetectionContext_js_1.RecognitionMode.Conversation, ret.resolve, ret.reject);\n                const e = await ret.promise;\n                await this.implRecognizerStop();\n                return e;\n            };\n            const retPromise = callbackHolder();\n            retPromise.catch(() => {\n                // Destroy the recognizer.\n                // We've done all we can here.\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                this.dispose(true).catch(() => { });\n            });\n            (0, Exports_js_2.marshalPromiseToCallbacks)(retPromise.finally(() => {\n                this.isTurnComplete = true;\n            }), cb, err);\n        }\n    }\n    sendActivityAsync(activity, cb, errCb) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.privReco.sendMessage(activity), cb, errCb);\n    }\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member DialogServiceConnector.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, err) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.dispose(true), cb, err);\n    }\n    async dispose(disposing) {\n        if (this.privIsDisposed) {\n            return;\n        }\n        if (disposing) {\n            this.privIsDisposed = true;\n            await this.implRecognizerStop();\n            await super.dispose(disposing);\n        }\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.privProperties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const audioSource = audioConfig;\n        return new Exports_js_1.DialogServiceAdapter(authentication, connectionFactory, audioSource, recognizerConfig, this);\n    }\n    buildAgentConfig() {\n        const communicationType = this.properties.getProperty(\"Conversation_Communication_Type\", \"Default\");\n        return {\n            botInfo: {\n                commType: communicationType,\n                commandsCulture: undefined,\n                connectionId: this.properties.getProperty(PropertyId_js_1.PropertyId.Conversation_Agent_Connection_Id),\n                conversationId: this.properties.getProperty(PropertyId_js_1.PropertyId.Conversation_Conversation_Id, undefined),\n                fromId: this.properties.getProperty(PropertyId_js_1.PropertyId.Conversation_From_Id, undefined),\n                ttsAudioFormat: this.properties.getProperty(PropertyId_js_1.PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)\n            },\n            version: 0.2\n        };\n    }\n}\nexports.DialogServiceConnector = DialogServiceConnector;\n\n//# sourceMappingURL=DialogServiceConnector.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ActivityReceivedEventArgs = void 0;\n/**\n * Defines contents of received message/events.\n * @class ActivityReceivedEventArgs\n */\nclass ActivityReceivedEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {any} activity - The activity..\n     */\n    constructor(activity, audioStream) {\n        this.privActivity = activity;\n        this.privAudioStream = audioStream;\n    }\n    /**\n     * Gets the received activity\n     * @member ActivityReceivedEventArgs.prototype.activity\n     * @function\n     * @public\n     * @returns {any} the received activity.\n     */\n    get activity() {\n        return this.privActivity;\n    }\n    get audioStream() {\n        return this.privAudioStream;\n    }\n}\nexports.ActivityReceivedEventArgs = ActivityReceivedEventArgs;\n\n//# sourceMappingURL=ActivityReceivedEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TurnStatusResponsePayload = void 0;\nclass TurnStatusResponsePayload {\n    constructor(json) {\n        this.privMessageStatusResponse = JSON.parse(json);\n    }\n    static fromJSON(json) {\n        return new TurnStatusResponsePayload(json);\n    }\n    get interactionId() {\n        return this.privMessageStatusResponse.interactionId;\n    }\n    get conversationId() {\n        return this.privMessageStatusResponse.conversationId;\n    }\n    get statusCode() {\n        // Payloads may contain a limited set of textual representations or a numeric status\n        // code. The textual values are here converted into numeric ones.\n        switch (this.privMessageStatusResponse.statusCode) {\n            case \"Success\":\n                return 200;\n            case \"Failed\":\n                return 400;\n            case \"TimedOut\":\n                return 429;\n            default:\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                return this.privMessageStatusResponse.statusCode;\n        }\n    }\n}\nexports.TurnStatusResponsePayload = TurnStatusResponsePayload;\n\n//# sourceMappingURL=TurnStatusPayload.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TurnStatusReceivedEventArgs = void 0;\nconst TurnStatusPayload_js_1 = require(\"../common.speech/ServiceMessages/TurnStatusPayload.js\");\n/**\n * Defines contents of received message/events.\n * @class TurnStatusReceivedEventArgs\n */\nclass TurnStatusReceivedEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} turnStatus - The JSON-encoded turn status message.\n     */\n    constructor(turnStatus) {\n        this.privTurnStatus = TurnStatusPayload_js_1.TurnStatusResponsePayload.fromJSON(turnStatus);\n    }\n    /**\n     * Gets the interaction identifier associated with this turn status event.\n     * @member TurnStatusReceivedEventArgs.prototype.interactionId\n     * @function\n     * @public\n     * @returns {any} the received interaction id.\n     */\n    get interactionId() {\n        return this.privTurnStatus.interactionId;\n    }\n    /**\n     * Gets the conversation identifier associated with this turn status event.\n     * @member TurnStatusReceivedEventArgs.prototype.conversationId\n     * @function\n     * @public\n     * @returns {any} the received conversation id.\n     */\n    get conversationId() {\n        return this.privTurnStatus.conversationId;\n    }\n    /**\n     * Gets the received turn status code.\n     * @member TurnStatusReceivedEventArgs.prototype.statusCode\n     * @function\n     * @public\n     * @returns {number} the received turn status.\n     */\n    get statusCode() {\n        return this.privTurnStatus.statusCode; // eslint-disable-line @typescript-eslint/no-unsafe-return\n    }\n}\nexports.TurnStatusReceivedEventArgs = TurnStatusReceivedEventArgs;\n\n//# sourceMappingURL=TurnStatusReceivedEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServicePropertyChannel = void 0;\n/**\n * Defines channels used to pass property settings to service.\n * Added in version 1.7.0.\n */\nvar ServicePropertyChannel;\n(function (ServicePropertyChannel) {\n    /**\n     * Uses URI query parameter to pass property settings to service.\n     */\n    ServicePropertyChannel[ServicePropertyChannel[\"UriQueryParameter\"] = 0] = \"UriQueryParameter\";\n})(ServicePropertyChannel = exports.ServicePropertyChannel || (exports.ServicePropertyChannel = {}));\n\n//# sourceMappingURL=ServicePropertyChannel.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProfanityOption = void 0;\n/**\n * Profanity option.\n * Added in version 1.7.0.\n */\nvar ProfanityOption;\n(function (ProfanityOption) {\n    ProfanityOption[ProfanityOption[\"Masked\"] = 0] = \"Masked\";\n    ProfanityOption[ProfanityOption[\"Removed\"] = 1] = \"Removed\";\n    ProfanityOption[ProfanityOption[\"Raw\"] = 2] = \"Raw\";\n})(ProfanityOption = exports.ProfanityOption || (exports.ProfanityOption = {}));\n\n//# sourceMappingURL=ProfanityOption.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseAudioPlayer = void 0;\nconst Error_js_1 = require(\"../../common/Error.js\");\nconst Exports_js_1 = require(\"../Exports.js\");\nconst AudioStreamFormat_js_1 = require(\"./AudioStreamFormat.js\");\n/**\n * Base audio player class\n * TODO: Plays only PCM for now.\n * @class\n */\nclass BaseAudioPlayer {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {AudioStreamFormat} audioFormat audio stream format recognized by the player.\n     */\n    constructor(audioFormat) {\n        this.audioContext = null;\n        this.gainNode = null;\n        this.autoUpdateBufferTimer = 0;\n        if (audioFormat === undefined) {\n            audioFormat = Exports_js_1.AudioStreamFormat.getDefaultInputFormat();\n        }\n        this.init(audioFormat);\n    }\n    /**\n     * play Audio sample\n     * @param newAudioData audio data to be played.\n     */\n    playAudioSample(newAudioData, cb, err) {\n        try {\n            this.ensureInitializedContext();\n            const audioData = this.formatAudioData(newAudioData);\n            const newSamplesData = new Float32Array(this.samples.length + audioData.length);\n            newSamplesData.set(this.samples, 0);\n            newSamplesData.set(audioData, this.samples.length);\n            this.samples = newSamplesData;\n            if (!!cb) {\n                cb();\n            }\n        }\n        catch (e) {\n            if (!!err) {\n                err(e);\n            }\n        }\n    }\n    /**\n     * stops audio and clears the buffers\n     */\n    stopAudio(cb, err) {\n        if (this.audioContext !== null) {\n            this.samples = new Float32Array();\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            clearInterval(this.autoUpdateBufferTimer);\n            this.audioContext.close().then(() => {\n                if (!!cb) {\n                    cb();\n                }\n            }, (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n            this.audioContext = null;\n        }\n    }\n    init(audioFormat) {\n        this.audioFormat = audioFormat;\n        this.samples = new Float32Array();\n    }\n    ensureInitializedContext() {\n        if (this.audioContext === null) {\n            this.createAudioContext();\n            const timerPeriod = 200;\n            this.autoUpdateBufferTimer = setInterval(() => {\n                this.updateAudioBuffer();\n            }, timerPeriod);\n        }\n    }\n    createAudioContext() {\n        // new ((window as any).AudioContext || (window as any).webkitAudioContext)();\n        this.audioContext = AudioStreamFormat_js_1.AudioStreamFormatImpl.getAudioContext();\n        // TODO: Various examples shows this gain node, it does not seem to be needed unless we plan\n        // to control the volume, not likely\n        this.gainNode = this.audioContext.createGain();\n        this.gainNode.gain.value = 1;\n        this.gainNode.connect(this.audioContext.destination);\n        this.startTime = this.audioContext.currentTime;\n    }\n    formatAudioData(audioData) {\n        switch (this.audioFormat.bitsPerSample) {\n            case 8:\n                return this.formatArrayBuffer(new Int8Array(audioData), 128);\n            case 16:\n                return this.formatArrayBuffer(new Int16Array(audioData), 32768);\n            case 32:\n                return this.formatArrayBuffer(new Int32Array(audioData), 2147483648);\n            default:\n                throw new Error_js_1.InvalidOperationError(\"Only WAVE_FORMAT_PCM (8/16/32 bps) format supported at this time\");\n        }\n    }\n    formatArrayBuffer(audioData, maxValue) {\n        const float32Data = new Float32Array(audioData.length);\n        for (let i = 0; i < audioData.length; i++) {\n            float32Data[i] = audioData[i] / maxValue;\n        }\n        return float32Data;\n    }\n    updateAudioBuffer() {\n        if (this.samples.length === 0) {\n            return;\n        }\n        const channelCount = this.audioFormat.channels;\n        const bufferSource = this.audioContext.createBufferSource();\n        const frameCount = this.samples.length / channelCount;\n        const audioBuffer = this.audioContext.createBuffer(channelCount, frameCount, this.audioFormat.samplesPerSec);\n        // TODO: Should we do the conversion in the pushAudioSample instead?\n        for (let channel = 0; channel < channelCount; channel++) {\n            // Fill in individual channel data\n            let channelOffset = channel;\n            const audioData = audioBuffer.getChannelData(channel);\n            for (let i = 0; i < this.samples.length; i++, channelOffset += channelCount) {\n                audioData[i] = this.samples[channelOffset];\n            }\n        }\n        if (this.startTime < this.audioContext.currentTime) {\n            this.startTime = this.audioContext.currentTime;\n        }\n        bufferSource.buffer = audioBuffer;\n        bufferSource.connect(this.gainNode);\n        bufferSource.start(this.startTime);\n        // Make sure we play the next sample after the current one.\n        this.startTime += audioBuffer.duration;\n        // Clear the samples for the next pushed data.\n        this.samples = new Float32Array();\n    }\n    async playAudio(audioData) {\n        if (this.audioContext === null) {\n            this.createAudioContext();\n        }\n        const source = this.audioContext.createBufferSource();\n        const destination = this.audioContext.destination;\n        await this.audioContext.decodeAudioData(audioData, (newBuffer) => {\n            source.buffer = newBuffer;\n            source.connect(destination);\n            source.start(0);\n        });\n    }\n}\nexports.BaseAudioPlayer = BaseAudioPlayer;\n\n//# sourceMappingURL=BaseAudioPlayer.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionMessageEventArgs = void 0;\nclass ConnectionMessageEventArgs {\n    constructor(message) {\n        this.privConnectionMessage = message;\n    }\n    /**\n     * Gets the <see cref=\"ConnectionMessage\"/> associated with this <see cref=\"ConnectionMessageEventArgs\"/>.\n     */\n    get message() {\n        return this.privConnectionMessage;\n    }\n    /**\n     * Returns a string that represents the connection message event.\n     */\n    toString() {\n        return \"Message: \" + this.privConnectionMessage.toString();\n    }\n}\nexports.ConnectionMessageEventArgs = ConnectionMessageEventArgs;\n\n//# sourceMappingURL=ConnectionMessageEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VoiceProfile = void 0;\n/**\n * Defines Voice Profile class for Speaker Recognition\n * @class VoiceProfile\n */\nclass VoiceProfile {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} profileId - profileId of this Voice Profile.\n     * @param {VoiceProfileType} profileType - profileType of this Voice Profile.\n     */\n    constructor(profileId, profileType) {\n        this.privId = profileId;\n        this.privProfileType = profileType;\n    }\n    /**\n     * profileId of this Voice Profile instance\n     * @member VoiceProfile.prototype.profileId\n     * @function\n     * @public\n     * @returns {string} profileId of this Voice Profile instance.\n     */\n    get profileId() {\n        return this.privId;\n    }\n    /**\n     * profileType of this Voice Profile instance\n     * @member VoiceProfile.prototype.profileType\n     * @function\n     * @public\n     * @returns {VoiceProfileType} profile type of this Voice Profile instance.\n     */\n    get profileType() {\n        return this.privProfileType;\n    }\n}\nexports.VoiceProfile = VoiceProfile;\n\n//# sourceMappingURL=VoiceProfile.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VoiceProfileEnrollmentCancellationDetails = exports.VoiceProfileEnrollmentResult = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\n/**\n * Output format\n * @class VoiceProfileEnrollmentResult\n */\nclass VoiceProfileEnrollmentResult {\n    constructor(reason, json, statusText) {\n        this.privReason = reason;\n        this.privProperties = new Exports_js_2.PropertyCollection();\n        if (this.privReason !== Exports_js_2.ResultReason.Canceled) {\n            if (!!json) {\n                this.privDetails = JSON.parse(json);\n                if (this.privDetails.enrollmentStatus.toLowerCase() === \"enrolling\") {\n                    this.privReason = Exports_js_2.ResultReason.EnrollingVoiceProfile;\n                }\n            }\n        }\n        else {\n            this.privErrorDetails = statusText;\n            this.privProperties.setProperty(Exports_js_1.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[Exports_js_2.CancellationErrorCode.ServiceError]);\n        }\n    }\n    get reason() {\n        return this.privReason;\n    }\n    get enrollmentsCount() {\n        return this.privDetails.enrollmentsCount;\n    }\n    get enrollmentsLength() {\n        return this.privDetails.enrollmentsLength;\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    get enrollmentResultDetails() {\n        return this.privDetails;\n    }\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n    static FromIdentificationProfileList(json) {\n        const results = [];\n        for (const item of json.value) {\n            const reason = item.enrollmentStatus.toLowerCase() === \"enrolling\" ?\n                Exports_js_2.ResultReason.EnrollingVoiceProfile : item.enrollmentStatus.toLowerCase() === \"enrolled\" ?\n                Exports_js_2.ResultReason.EnrolledVoiceProfile : Exports_js_2.ResultReason.Canceled;\n            const result = new VoiceProfileEnrollmentResult(reason, null, null);\n            result.privDetails = this.getIdentificationDetails(item);\n            results.push(result);\n        }\n        return results;\n    }\n    static FromVerificationProfileList(json) {\n        const results = [];\n        for (const item of json.value) {\n            const reason = item.enrollmentStatus.toLowerCase() === \"enrolling\" ?\n                Exports_js_2.ResultReason.EnrollingVoiceProfile : item.enrollmentStatus.toLowerCase() === \"enrolled\" ?\n                Exports_js_2.ResultReason.EnrolledVoiceProfile : Exports_js_2.ResultReason.Canceled;\n            const result = new VoiceProfileEnrollmentResult(reason, null, null);\n            result.privDetails = this.getVerificationDetails(item);\n            results.push(result);\n        }\n        return results;\n    }\n    static getIdentificationDetails(json) {\n        return {\n            audioLength: json.audioLength ? parseFloat(json.audioLength) : 0,\n            audioSpeechLength: json.audioSpeechLength ? parseFloat(json.audioSpeechLength) : 0,\n            enrollmentStatus: json.enrollmentStatus,\n            enrollmentsCount: json.enrollmentsCount || 0,\n            enrollmentsLength: json.enrollmentsLength ? parseFloat(json.enrollmentsLength) : 0,\n            enrollmentsSpeechLength: json.enrollmentsSpeechLength ? parseFloat(json.enrollmentsSpeechLength) : 0,\n            profileId: json.profileId || json.identificationProfileId,\n            remainingEnrollmentsSpeechLength: json.remainingEnrollmentsSpeechLength ? parseFloat(json.remainingEnrollmentsSpeechLength) : 0\n        };\n    }\n    static getVerificationDetails(json) {\n        return {\n            audioLength: json.audioLength ? parseFloat(json.audioLength) : 0,\n            audioSpeechLength: json.audioSpeechLength ? parseFloat(json.audioSpeechLength) : 0,\n            enrollmentStatus: json.enrollmentStatus,\n            enrollmentsCount: json.enrollmentsCount,\n            enrollmentsLength: json.enrollmentsLength ? parseFloat(json.enrollmentsLength) : 0,\n            enrollmentsSpeechLength: json.enrollmentsSpeechLength ? parseFloat(json.enrollmentsSpeechLength) : 0,\n            profileId: json.profileId || json.verificationProfileId,\n            remainingEnrollmentsCount: json.remainingEnrollments || json.remainingEnrollmentsCount,\n            remainingEnrollmentsSpeechLength: json.remainingEnrollmentsSpeechLength ? parseFloat(json.remainingEnrollmentsSpeechLength) : 0\n        };\n    }\n}\nexports.VoiceProfileEnrollmentResult = VoiceProfileEnrollmentResult;\n/**\n * @class VoiceProfileEnrollmentCancellationDetails\n */\nclass VoiceProfileEnrollmentCancellationDetails extends Exports_js_2.CancellationDetailsBase {\n    constructor(reason, errorDetails, errorCode) {\n        super(reason, errorDetails, errorCode);\n    }\n    /**\n     * Creates an instance of VoiceProfileEnrollmentCancellationDetails object for the canceled VoiceProfileEnrollmentResult.\n     * @member VoiceProfileEnrollmentCancellationDetails.fromResult\n     * @function\n     * @public\n     * @param {VoiceProfileEnrollmentResult} result - The result that was canceled.\n     * @returns {VoiceProfileEnrollmentCancellationDetails} The cancellation details object being created.\n     */\n    static fromResult(result) {\n        const reason = Exports_js_2.CancellationReason.Error;\n        let errorCode = Exports_js_2.CancellationErrorCode.NoError;\n        if (!!result.properties) {\n            errorCode = Exports_js_2.CancellationErrorCode[result.properties.getProperty(Exports_js_1.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[Exports_js_2.CancellationErrorCode.NoError])]; //eslint-disable-line\n        }\n        return new VoiceProfileEnrollmentCancellationDetails(reason, result.errorDetails, errorCode);\n    }\n}\nexports.VoiceProfileEnrollmentCancellationDetails = VoiceProfileEnrollmentCancellationDetails;\n\n//# sourceMappingURL=VoiceProfileEnrollmentResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VoiceProfileCancellationDetails = exports.VoiceProfileResult = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\n/**\n * Output format\n * @class VoiceProfileResult\n */\nclass VoiceProfileResult {\n    constructor(reason, statusText) {\n        this.privReason = reason;\n        this.privProperties = new Exports_js_2.PropertyCollection();\n        if (reason === Exports_js_2.ResultReason.Canceled) {\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(statusText, \"statusText\");\n            this.privErrorDetails = statusText;\n            this.privProperties.setProperty(Exports_js_1.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[Exports_js_2.CancellationErrorCode.ServiceError]);\n        }\n    }\n    get reason() {\n        return this.privReason;\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n}\nexports.VoiceProfileResult = VoiceProfileResult;\n/**\n * @class VoiceProfileCancellationDetails\n */\nclass VoiceProfileCancellationDetails extends Exports_js_2.CancellationDetailsBase {\n    constructor(reason, errorDetails, errorCode) {\n        super(reason, errorDetails, errorCode);\n    }\n    /**\n     * Creates an instance of VoiceProfileCancellationDetails object for the canceled VoiceProfileResult.\n     * @member VoiceProfileCancellationDetails.fromResult\n     * @function\n     * @public\n     * @param {VoiceProfileResult} result - The result that was canceled.\n     * @returns {VoiceProfileCancellationDetails} The cancellation details object being created.\n     */\n    static fromResult(result) {\n        const reason = Exports_js_2.CancellationReason.Error;\n        let errorCode = Exports_js_2.CancellationErrorCode.NoError;\n        if (!!result.properties) {\n            errorCode = Exports_js_2.CancellationErrorCode[result.properties.getProperty(Exports_js_1.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[Exports_js_2.CancellationErrorCode.NoError])]; //eslint-disable-line\n        }\n        return new VoiceProfileCancellationDetails(reason, result.errorDetails, errorCode);\n    }\n}\nexports.VoiceProfileCancellationDetails = VoiceProfileCancellationDetails;\n\n//# sourceMappingURL=VoiceProfileResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VoiceProfilePhraseResult = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Output format\n * @class VoiceProfilePhraseResult\n */\nclass VoiceProfilePhraseResult extends Exports_js_1.VoiceProfileResult {\n    constructor(reason, statusText, type, phraseArray) {\n        super(reason, statusText);\n        this.privPhrases = [];\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(phraseArray, \"phrase array\");\n        this.privType = type;\n        if (!!phraseArray && !!phraseArray[0]) {\n            this.privPhrases = phraseArray;\n        }\n    }\n    get phrases() {\n        return this.privPhrases;\n    }\n    get type() {\n        return this.privType;\n    }\n}\nexports.VoiceProfilePhraseResult = VoiceProfilePhraseResult;\n\n//# sourceMappingURL=VoiceProfilePhraseResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VoiceProfileClient = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst AudioConfig_js_1 = require(\"./Audio/AudioConfig.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\n/**\n * Defines VoiceProfileClient class for Speaker Recognition\n * Handles operations from user for Voice Profile operations (e.g. createProfile, deleteProfile)\n * @class VoiceProfileClient\n */\nclass VoiceProfileClient extends Exports_js_2.Recognizer {\n    /**\n     * VoiceProfileClient constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - An set of initial properties for this synthesizer (authentication key, region, &c)\n     */\n    constructor(speechConfig) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig, \"speechConfig\");\n        const speechConfigImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\n        super(AudioConfig_js_1.AudioConfig.fromStreamInput(Exports_js_2.AudioInputStream.createPushStream()), speechConfigImpl.properties, new Exports_js_1.VoiceProfileConnectionFactory());\n        this.privProperties = speechConfigImpl.properties.clone();\n        this.privVoiceAdapter = this.privReco;\n        this.privDisposedVoiceAdapter = false;\n    }\n    /**\n     * The collection of properties and their values defined for this VoiceProfileClient.\n     * @member VoiceProfileClient.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this VoiceProfileClient.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member VoiceProfileClient.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member VoiceProfileClient.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * Create a speaker recognition voice profile\n     * @member VoiceProfileClient.prototype.createProfileAsync\n     * @function\n     * @public\n     * @async\n     * @param {VoiceProfileType} profileType Type of Voice Profile to be created\n     * @param {string} lang Language string (locale) for Voice Profile\n     * @return {Promise<VoiceProfile>} - Promise of a VoiceProfile.\n     */\n    async createProfileAsync(profileType, lang) {\n        const profileIds = await this.privVoiceAdapter.createProfile(profileType, lang);\n        return new Exports_js_2.VoiceProfile(profileIds[0], profileType);\n    }\n    /**\n     * Get current information of a voice profile\n     * @member VoiceProfileClient.prototype.retrieveEnrollmentResultAsync\n     * @function\n     * @public\n     * @async\n     * @param {VoiceProfile} profile Voice Profile to retrieve info for\n     * @return {Promise<VoiceProfileEnrollmentResult>} - Promise of a VoiceProfileEnrollmentResult.\n     */\n    async retrieveEnrollmentResultAsync(profile) {\n        return this.privVoiceAdapter.retrieveEnrollmentResult(profile);\n    }\n    /**\n     * Get all voice profiles on account with given voice profile type\n     * @member VoiceProfileClient.prototype.getAllProfilesAsync\n     * @function\n     * @public\n     * @async\n     * @param {VoiceProfileType} profileType profile type (identification/verification) for which to list profiles\n     * @return {Promise<VoiceProfileEnrollmentResult[]>} - Promise of an array of VoiceProfileEnrollmentResults.\n     */\n    async getAllProfilesAsync(profileType) {\n        return this.privVoiceAdapter.getAllProfiles(profileType);\n        /*\n        const result: { json: { value: EnrollmentResultJSON[] } } = await this.privAdapter.getProfiles(profileType);\n        if (profileType === VoiceProfileType.TextIndependentIdentification) {\n            return VoiceProfileEnrollmentResult.FromIdentificationProfileList(result.json);\n        }\n        return VoiceProfileEnrollmentResult.FromVerificationProfileList(result.json);\n        */\n    }\n    /**\n     * Get valid authorization phrases for voice profile enrollment\n     * @member VoiceProfileClient.prototype.getActivationPhrasesAsync\n     * @function\n     * @public\n     * @async\n     * @param {VoiceProfileType} profileType Profile Type to get activation phrases for\n     * @param {string} lang Language string (locale) for Voice Profile\n     */\n    async getActivationPhrasesAsync(profileType, lang) {\n        return this.privVoiceAdapter.getActivationPhrases(profileType, lang);\n    }\n    /**\n     * Create a speaker recognition voice profile\n     * @member VoiceProfileClient.prototype.enrollProfileAsync\n     * @function\n     * @public\n     * @async\n     * @param {VoiceProfile} profile Voice Profile to create enrollment for\n     * @param {AudioConfig} audioConfig source info from which to create enrollment\n     * @return {Promise<VoiceProfileEnrollmentResult>} - Promise of a VoiceProfileEnrollmentResult.\n     */\n    async enrollProfileAsync(profile, audioConfig) {\n        const configImpl = audioConfig;\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(configImpl, \"audioConfig\");\n        this.audioConfig = audioConfig;\n        this.privVoiceAdapter.SpeakerAudioSource = configImpl;\n        return this.privVoiceAdapter.enrollProfile(profile);\n    }\n    /**\n     * Delete a speaker recognition voice profile\n     * @member VoiceProfileClient.prototype.deleteProfileAsync\n     * @function\n     * @public\n     * @async\n     * @param {VoiceProfile} profile Voice Profile to be deleted\n     * @return {Promise<VoiceProfileResult>} - Promise of a VoiceProfileResult.\n     */\n    async deleteProfileAsync(profile) {\n        return this.privVoiceAdapter.deleteProfile(profile);\n    }\n    /**\n     * Remove all enrollments for a speaker recognition voice profile\n     * @member VoiceProfileClient.prototype.resetProfileAsync\n     * @function\n     * @public\n     * @async\n     * @param {VoiceProfile} profile Voice Profile to be reset\n     * @return {Promise<VoiceProfileResult>} - Promise of a VoiceProfileResult.\n     */\n    async resetProfileAsync(profile) {\n        return this.privVoiceAdapter.resetProfile(profile);\n    }\n    /**\n     * Clean up object and close underlying connection\n     * @member VoiceProfileClient.prototype.close\n     * @function\n     * @async\n     * @public\n     */\n    async close() {\n        await this.dispose(true);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const audioImpl = audioConfig;\n        return new Exports_js_1.VoiceServiceRecognizer(authentication, connectionFactory, audioImpl, recognizerConfig, this);\n    }\n    async dispose(disposing) {\n        if (this.privDisposedVoiceAdapter) {\n            return;\n        }\n        this.privDisposedVoiceAdapter = true;\n        if (disposing) {\n            await super.dispose(disposing);\n        }\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.properties);\n    }\n    getResult(result, successReason) {\n        const response = new Exports_js_2.VoiceProfileResult(result.ok ? successReason : Exports_js_2.ResultReason.Canceled, result.statusText);\n        return (response);\n    }\n}\nexports.VoiceProfileClient = VoiceProfileClient;\n\n//# sourceMappingURL=VoiceProfileClient.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeakerRecognizer = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\n/**\n * Defines SpeakerRecognizer class for Speaker Recognition\n * Handles operations from user for Voice Profile operations (e.g. createProfile, deleteProfile)\n * @class SpeakerRecognizer\n */\nclass SpeakerRecognizer extends Exports_js_2.Recognizer {\n    /**\n     * Initializes an instance of the SpeakerRecognizer.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - The set of configuration properties.\n     * @param {AudioConfig} audioConfig - An optional audio input config associated with the recognizer\n     */\n    constructor(speechConfig, audioConfig) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig, \"speechConfig\");\n        const configImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(configImpl, \"speechConfig\");\n        super(audioConfig, configImpl.properties, new Exports_js_1.SpeakerRecognitionConnectionFactory());\n        this.privAudioConfigImpl = audioConfig;\n        Contracts_js_1.Contracts.throwIfNull(this.privAudioConfigImpl, \"audioConfig\");\n        this.privDisposedSpeakerRecognizer = false;\n        this.privProperties = configImpl.properties;\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member SpeakerRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member SpeakerRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * The collection of properties and their values defined for this SpeakerRecognizer.\n     * @member SpeakerRecognizer.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeakerRecognizer.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Get recognition result for model using given audio\n     * @member SpeakerRecognizer.prototype.recognizeOnceAsync\n     * @function\n     * @public\n     * @async\n     * @param {SpeakerIdentificationModel | SpeakerVerificationModel} model Model containing Voice Profiles to be identified\n     * @param cb - Callback invoked once result is returned.\n     * @param err - Callback invoked in case of an error.\n     */\n    async recognizeOnceAsync(model) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedSpeakerRecognizer);\n        return this.recognizeSpeakerOnceAsyncImpl(model);\n    }\n    /**\n     * Included for compatibility\n     * @member SpeakerRecognizer.prototype.close\n     * @function\n     * @public\n     * @async\n     */\n    async close() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedSpeakerRecognizer);\n        await this.dispose(true);\n    }\n    async recognizeSpeakerOnceAsyncImpl(model) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedSpeakerRecognizer);\n        await this.implRecognizerStop();\n        const result = await this.privReco.recognizeSpeaker(model);\n        await this.implRecognizerStop();\n        return result;\n    }\n    async implRecognizerStop() {\n        if (this.privReco) {\n            await this.privReco.stopRecognizing();\n        }\n        return;\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.privProperties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const audioImpl = audioConfig;\n        return new Exports_js_1.SpeakerServiceRecognizer(authentication, connectionFactory, audioImpl, recognizerConfig, this);\n    }\n    async dispose(disposing) {\n        if (this.privDisposedSpeakerRecognizer) {\n            return;\n        }\n        if (disposing) {\n            this.privDisposedSpeakerRecognizer = true;\n            await super.dispose(disposing);\n        }\n    }\n}\nexports.SpeakerRecognizer = SpeakerRecognizer;\n\n//# sourceMappingURL=SpeakerRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeakerIdentificationModel = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines SpeakerIdentificationModel class for Speaker Recognition\n * Model contains a set of profiles against which to identify speaker(s)\n * @class SpeakerIdentificationModel\n */\nclass SpeakerIdentificationModel {\n    constructor(profiles) {\n        this.privVoiceProfiles = [];\n        this.privProfileIds = [];\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(profiles, \"VoiceProfiles\");\n        if (profiles.length === 0) {\n            throw new Error(\"Empty Voice Profiles array\");\n        }\n        for (const profile of profiles) {\n            if (profile.profileType !== Exports_js_1.VoiceProfileType.TextIndependentIdentification) {\n                throw new Error(\"Identification model can only be created from Identification profile: \" + profile.profileId);\n            }\n            this.privVoiceProfiles.push(profile);\n            this.privProfileIds.push(profile.profileId);\n        }\n    }\n    static fromProfiles(profiles) {\n        return new SpeakerIdentificationModel(profiles);\n    }\n    get voiceProfileIds() {\n        return this.privProfileIds.join(\",\");\n    }\n    get profileIds() {\n        return this.privProfileIds;\n    }\n    get scenario() {\n        return \"TextIndependentIdentification\";\n    }\n}\nexports.SpeakerIdentificationModel = SpeakerIdentificationModel;\n\n//# sourceMappingURL=SpeakerIdentificationModel.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeakerVerificationModel = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines SpeakerVerificationModel class for Speaker Recognition\n * Model contains a profile against which to verify a speaker\n * @class SpeakerVerificationModel\n */\nclass SpeakerVerificationModel {\n    constructor(profile) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(profile, \"VoiceProfile\");\n        if (profile.profileType === Exports_js_1.VoiceProfileType.TextIndependentIdentification) {\n            throw new Error(\"Verification model cannot be created from Identification profile\");\n        }\n        this.privVoiceProfile = profile;\n    }\n    static fromProfile(profile) {\n        return new SpeakerVerificationModel(profile);\n    }\n    get voiceProfile() {\n        return this.privVoiceProfile;\n    }\n    get profileIds() {\n        return [this.voiceProfile.profileId];\n    }\n    get scenario() {\n        if (this.voiceProfile.profileType === Exports_js_1.VoiceProfileType.TextDependentVerification) {\n            return \"TextDependentVerification\";\n        }\n        else {\n            return \"TextIndependentVerification\";\n        }\n    }\n}\nexports.SpeakerVerificationModel = SpeakerVerificationModel;\n\n//# sourceMappingURL=SpeakerVerificationModel.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LanguageIdMode = void 0;\n/**\n * Language Identification mode\n * @class LanguageIdMode\n */\nvar LanguageIdMode;\n(function (LanguageIdMode) {\n    /**\n     * Detect language at audio start\n     * @member LanguageIdMode.AtStart\n     */\n    LanguageIdMode[LanguageIdMode[\"AtStart\"] = 0] = \"AtStart\";\n    /**\n     * Continuously detect language\n     * @member LanguageIdMode.Continuous\n     */\n    LanguageIdMode[LanguageIdMode[\"Continuous\"] = 1] = \"Continuous\";\n})(LanguageIdMode = exports.LanguageIdMode || (exports.LanguageIdMode = {}));\n\n//# sourceMappingURL=LanguageIdMode.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AutoDetectSourceLanguageConfig = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\nconst LanguageIdMode_js_1 = require(\"./LanguageIdMode.js\");\n/**\n * Language auto detect configuration.\n * @class AutoDetectSourceLanguageConfig\n * Added in version 1.13.0.\n */\nclass AutoDetectSourceLanguageConfig {\n    constructor() {\n        this.privProperties = new Exports_js_2.PropertyCollection();\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_LanguageIdMode, \"AtStart\");\n        this.privLanguageIdMode = LanguageIdMode_js_1.LanguageIdMode.AtStart;\n    }\n    /**\n     * @member AutoDetectSourceLanguageConfig.fromOpenRange\n     * @function\n     * @public\n     * Only [[SpeechSynthesizer]] supports source language auto detection from open range,\n     * for [[Recognizer]], please use AutoDetectSourceLanguageConfig with specific source languages.\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with open range.\n     */\n    static fromOpenRange() {\n        const config = new AutoDetectSourceLanguageConfig();\n        config.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, Exports_js_1.AutoDetectSourceLanguagesOpenRangeOptionName);\n        config.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage, \"en-US\");\n        return config;\n    }\n    /**\n     * @member AutoDetectSourceLanguageConfig.fromLanguages\n     * @function\n     * @public\n     * @param {string[]} languages Comma-separated string of languages (eg. \"en-US,fr-FR\") to populate properties of config.\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with given languages.\n     */\n    static fromLanguages(languages) {\n        Contracts_js_1.Contracts.throwIfArrayEmptyOrWhitespace(languages, \"languages\");\n        const config = new AutoDetectSourceLanguageConfig();\n        config.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, languages.join());\n        return config;\n    }\n    /**\n     * @member AutoDetectSourceLanguageConfig.fromSourceLanguageConfigs\n     * @function\n     * @public\n     * @param {SourceLanguageConfig[]} configs SourceLanguageConfigs to populate properties of config.\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with given SourceLanguageConfigs.\n     */\n    static fromSourceLanguageConfigs(configs) {\n        if (configs.length < 1) {\n            throw new Error(\"Expected non-empty SourceLanguageConfig array.\");\n        }\n        const autoConfig = new AutoDetectSourceLanguageConfig();\n        const langs = [];\n        configs.forEach((config) => {\n            langs.push(config.language);\n            if (config.endpointId !== undefined && config.endpointId !== \"\") {\n                const customProperty = config.language + Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId.toString();\n                autoConfig.properties.setProperty(customProperty, config.endpointId);\n            }\n        });\n        autoConfig.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, langs.join());\n        return autoConfig;\n    }\n    /**\n     * @member AutoDetectSourceLanguageConfig.prototype.properties\n     * @function\n     * @public\n     * @return {PropertyCollection} Properties of the config.\n     * @summary Gets an auto detected language config properties\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * @member AutoDetectSourceLanguageConfig.prototype.mode\n     * @function\n     * @public\n     * @param {LanguageIdMode} mode LID mode desired.\n     * @summary Sets LID operation to desired mode\n     */\n    set mode(mode) {\n        if (mode === LanguageIdMode_js_1.LanguageIdMode.Continuous) {\n            this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, \"2\");\n            this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_LanguageIdMode, \"Continuous\");\n        }\n        else { // LanguageIdMode.AtStart\n            this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, \"1\");\n            this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_LanguageIdMode, \"AtStart\");\n        }\n        this.privLanguageIdMode = mode;\n    }\n}\nexports.AutoDetectSourceLanguageConfig = AutoDetectSourceLanguageConfig;\n\n//# sourceMappingURL=AutoDetectSourceLanguageConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AutoDetectSourceLanguageResult = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\n/**\n * Output format\n * @class AutoDetectSourceLanguageResult\n */\nclass AutoDetectSourceLanguageResult {\n    constructor(language, languageDetectionConfidence) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(language, \"language\");\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(languageDetectionConfidence, \"languageDetectionConfidence\");\n        this.privLanguage = language;\n        this.privLanguageDetectionConfidence = languageDetectionConfidence;\n    }\n    /**\n     * Creates an instance of AutoDetectSourceLanguageResult object from a SpeechRecognitionResult instance.\n     * @member AutoDetectSourceLanguageResult.fromResult\n     * @function\n     * @public\n     * @param {SpeechRecognitionResult} result - The recognition result.\n     * @returns {AutoDetectSourceLanguageResult} AutoDetectSourceLanguageResult object being created.\n     */\n    static fromResult(result) {\n        return new AutoDetectSourceLanguageResult(result.language, result.languageDetectionConfidence);\n    }\n    /**\n     * Creates an instance of AutoDetectSourceLanguageResult object from a ConversationTranscriptionResult instance.\n     * @member AutoDetectSourceLanguageResult.fromConversationTranscriptionResult\n     * @function\n     * @public\n     * @param {ConversationTranscriptionResult} result - The transcription result.\n     * @returns {AutoDetectSourceLanguageResult} AutoDetectSourceLanguageResult object being created.\n     */\n    static fromConversationTranscriptionResult(result) {\n        return new AutoDetectSourceLanguageResult(result.language, result.languageDetectionConfidence);\n    }\n    get language() {\n        return this.privLanguage;\n    }\n    get languageDetectionConfidence() {\n        return this.privLanguageDetectionConfidence;\n    }\n}\nexports.AutoDetectSourceLanguageResult = AutoDetectSourceLanguageResult;\n\n//# sourceMappingURL=AutoDetectSourceLanguageResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SourceLanguageConfig = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\n/**\n * Source Language configuration.\n * @class SourceLanguageConfig\n */\nclass SourceLanguageConfig {\n    constructor(language, endpointId) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(language, \"language\");\n        this.privLanguage = language;\n        this.privEndpointId = endpointId;\n    }\n    /**\n     * @member SourceLanguageConfig.fromLanguage\n     * @function\n     * @public\n     * @param {string} language language (eg. \"en-US\") value of config.\n     * @param {string?} endpointId endpointId of model bound to given language of config.\n     * @return {SourceLanguageConfig} Instance of SourceLanguageConfig\n     * @summary Creates an instance of the SourceLanguageConfig with the given language and optional endpointId.\n     * Added in version 1.13.0.\n     */\n    static fromLanguage(language, endpointId) {\n        return new SourceLanguageConfig(language, endpointId);\n    }\n    get language() {\n        return this.privLanguage;\n    }\n    get endpointId() {\n        return this.privEndpointId;\n    }\n}\nexports.SourceLanguageConfig = SourceLanguageConfig;\n\n//# sourceMappingURL=SourceLanguageConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeakerRecognitionCancellationDetails = exports.SpeakerRecognitionResult = exports.SpeakerRecognitionResultType = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\nvar SpeakerRecognitionResultType;\n(function (SpeakerRecognitionResultType) {\n    SpeakerRecognitionResultType[SpeakerRecognitionResultType[\"Verify\"] = 0] = \"Verify\";\n    SpeakerRecognitionResultType[SpeakerRecognitionResultType[\"Identify\"] = 1] = \"Identify\";\n})(SpeakerRecognitionResultType = exports.SpeakerRecognitionResultType || (exports.SpeakerRecognitionResultType = {}));\n/**\n * Output format\n * @class SpeakerRecognitionResult\n */\nclass SpeakerRecognitionResult {\n    constructor(response, resultReason = Exports_js_2.ResultReason.RecognizedSpeaker, cancellationErrorCode = Exports_js_2.CancellationErrorCode.NoError, errorDetails = \"\") {\n        this.privProperties = new Exports_js_2.PropertyCollection();\n        const resultType = response.scenario === \"TextIndependentIdentification\" ? SpeakerRecognitionResultType.Identify : SpeakerRecognitionResultType.Verify;\n        this.privReason = resultReason;\n        if (this.privReason !== Exports_js_2.ResultReason.Canceled) {\n            if (resultType === SpeakerRecognitionResultType.Identify) {\n                this.privProfileId = response.identificationResult.identifiedProfile.profileId;\n                this.privScore = response.identificationResult.identifiedProfile.score;\n                this.privReason = Exports_js_2.ResultReason.RecognizedSpeakers;\n            }\n            else {\n                this.privScore = response.verificationResult.score;\n                if (response.verificationResult.recognitionResult.toLowerCase() !== \"accept\") {\n                    this.privReason = Exports_js_2.ResultReason.NoMatch;\n                }\n                if (response.verificationResult.profileId !== undefined && response.verificationResult.profileId !== \"\") {\n                    this.privProfileId = response.verificationResult.profileId;\n                }\n            }\n        }\n        else {\n            this.privErrorDetails = errorDetails;\n            this.privProperties.setProperty(Exports_js_1.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[cancellationErrorCode]);\n        }\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_JsonResult, JSON.stringify(response));\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    get reason() {\n        return this.privReason;\n    }\n    get profileId() {\n        return this.privProfileId;\n    }\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n    get score() {\n        return this.privScore;\n    }\n}\nexports.SpeakerRecognitionResult = SpeakerRecognitionResult;\n/**\n * @class SpeakerRecognitionCancellationDetails\n */\nclass SpeakerRecognitionCancellationDetails extends Exports_js_2.CancellationDetailsBase {\n    constructor(reason, errorDetails, errorCode) {\n        super(reason, errorDetails, errorCode);\n    }\n    /**\n     * Creates an instance of SpeakerRecognitionCancellationDetails object for the canceled SpeakerRecognitionResult\n     * @member SpeakerRecognitionCancellationDetails.fromResult\n     * @function\n     * @public\n     * @param {SpeakerRecognitionResult} result - The result that was canceled.\n     * @returns {SpeakerRecognitionCancellationDetails} The cancellation details object being created.\n     */\n    static fromResult(result) {\n        const reason = Exports_js_2.CancellationReason.Error;\n        let errorCode = Exports_js_2.CancellationErrorCode.NoError;\n        if (!!result.properties) {\n            errorCode = Exports_js_2.CancellationErrorCode[result.properties.getProperty(Exports_js_1.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[Exports_js_2.CancellationErrorCode.NoError])];\n        }\n        return new SpeakerRecognitionCancellationDetails(reason, result.errorDetails, errorCode);\n    }\n}\nexports.SpeakerRecognitionCancellationDetails = SpeakerRecognitionCancellationDetails;\n\n//# sourceMappingURL=SpeakerRecognitionResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationImpl = exports.Conversation = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../../common/Exports.js\");\nconst Contracts_js_1 = require(\"../Contracts.js\");\nconst Exports_js_3 = require(\"../Exports.js\");\nclass Conversation {\n    constructor() {\n        return;\n    }\n    /**\n     * Create a conversation\n     * @param speechConfig\n     * @param cb\n     * @param err\n     */\n    static createConversationAsync(speechConfig, arg2, arg3, arg4) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig, Exports_js_1.ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"config\"));\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig.region, Exports_js_1.ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Region\"));\n        if (!speechConfig.subscriptionKey && !speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceAuthorization_Token])) {\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig.subscriptionKey, Exports_js_1.ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Key\"));\n        }\n        let conversationImpl;\n        let cb;\n        let err;\n        if (typeof arg2 === \"string\") {\n            conversationImpl = new ConversationImpl(speechConfig, arg2);\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            (0, Exports_js_2.marshalPromiseToCallbacks)((async () => { })(), arg3, arg4);\n        }\n        else {\n            conversationImpl = new ConversationImpl(speechConfig);\n            cb = arg2;\n            err = arg3;\n            conversationImpl.createConversationAsync((() => {\n                if (!!cb) {\n                    cb();\n                }\n            }), (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n        }\n        return conversationImpl;\n    }\n}\nexports.Conversation = Conversation;\nclass ConversationImpl extends Conversation {\n    /**\n     * Create a conversation impl\n     * @param speechConfig\n     * @param {string} id - optional conversationId\n     */\n    constructor(speechConfig, id) {\n        super();\n        this.privErrors = Exports_js_1.ConversationConnectionConfig.restErrors;\n        /** websocket callbacks */\n        /* eslint-disable @typescript-eslint/typedef */\n        this.onConnected = (e) => {\n            this.privIsConnected = true;\n            try {\n                if (!!this.privConversationTranslator?.sessionStarted) {\n                    this.privConversationTranslator.sessionStarted(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onDisconnected = (e) => {\n            try {\n                if (!!this.privConversationTranslator?.sessionStopped) {\n                    this.privConversationTranslator.sessionStopped(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n            finally {\n                void this.close(false);\n            }\n        };\n        this.onCanceled = (r, e) => {\n            try {\n                if (!!this.privConversationTranslator?.canceled) {\n                    this.privConversationTranslator.canceled(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantUpdateCommandReceived = (r, e) => {\n            try {\n                const updatedParticipant = this.privParticipants.getParticipant(e.id);\n                if (updatedParticipant !== undefined) {\n                    switch (e.key) {\n                        case Exports_js_1.ConversationTranslatorCommandTypes.changeNickname:\n                            updatedParticipant.displayName = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setUseTTS:\n                            updatedParticipant.isUsingTts = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setProfanityFiltering:\n                            updatedParticipant.profanity = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setMute:\n                            updatedParticipant.isMuted = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setTranslateToLanguages:\n                            updatedParticipant.translateToLanguages = e.value;\n                            break;\n                    }\n                    this.privParticipants.addOrUpdateParticipant(updatedParticipant);\n                    if (!!this.privConversationTranslator) {\n                        this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.Updated, [this.toParticipant(updatedParticipant)], e.sessionId));\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onLockRoomCommandReceived = () => {\n            // TODO\n        };\n        this.onMuteAllCommandReceived = (r, e) => {\n            try {\n                this.privParticipants.participants.forEach((p) => p.isMuted = (p.isHost ? false : e.isMuted));\n                if (!!this.privConversationTranslator) {\n                    this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.Updated, this.toParticipants(false), e.sessionId));\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantJoinCommandReceived = (r, e) => {\n            try {\n                const newParticipant = this.privParticipants.addOrUpdateParticipant(e.participant);\n                if (newParticipant !== undefined) {\n                    if (!!this.privConversationTranslator) {\n                        this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.JoinedConversation, [this.toParticipant(newParticipant)], e.sessionId));\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantLeaveCommandReceived = (r, e) => {\n            try {\n                const ejectedParticipant = this.privParticipants.getParticipant(e.participant.id);\n                if (ejectedParticipant !== undefined) {\n                    // remove the participant from the internal participants list\n                    this.privParticipants.deleteParticipant(e.participant.id);\n                    if (!!this.privConversationTranslator) {\n                        // notify subscribers that the participant has left the conversation\n                        this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.LeftConversation, [this.toParticipant(ejectedParticipant)], e.sessionId));\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onTranslationReceived = (r, e) => {\n            try {\n                switch (e.command) {\n                    case Exports_js_1.ConversationTranslatorMessageTypes.final:\n                        if (!!this.privConversationTranslator) {\n                            this.privConversationTranslator.transcribed(this.privConversationTranslator, new Exports_js_3.ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\n                        }\n                        break;\n                    case Exports_js_1.ConversationTranslatorMessageTypes.partial:\n                        if (!!this.privConversationTranslator) {\n                            this.privConversationTranslator.transcribing(this.privConversationTranslator, new Exports_js_3.ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\n                        }\n                        break;\n                    case Exports_js_1.ConversationTranslatorMessageTypes.instantMessage:\n                        if (!!this.privConversationTranslator) {\n                            this.privConversationTranslator.textMessageReceived(this.privConversationTranslator, new Exports_js_3.ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\n                        }\n                        break;\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantsListReceived = (r, e) => {\n            try {\n                // check if the session token needs to be updated\n                if (e.sessionToken !== undefined && e.sessionToken !== null) {\n                    this.privRoom.token = e.sessionToken;\n                }\n                // save the participants\n                this.privParticipants.participants = [...e.participants];\n                // enable the conversation\n                if (this.privParticipants.me !== undefined) {\n                    this.privIsReady = true;\n                }\n                if (!!this.privConversationTranslator) {\n                    this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.JoinedConversation, this.toParticipants(true), e.sessionId));\n                }\n                // if this is the host, update the nickname if needed\n                if (this.me.isHost) {\n                    const nickname = this.privConversationTranslator?.properties.getProperty(Exports_js_3.PropertyId.ConversationTranslator_Name);\n                    if (nickname !== undefined && nickname.length > 0 && nickname !== this.me.displayName) {\n                        // issue a change nickname request\n                        this.changeNicknameAsync(nickname);\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onConversationExpiration = (r, e) => {\n            try {\n                if (!!this.privConversationTranslator) {\n                    this.privConversationTranslator.conversationExpiration(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.privIsConnected = false;\n        this.privIsDisposed = false;\n        this.privConversationId = \"\";\n        this.privProperties = new Exports_js_3.PropertyCollection();\n        this.privManager = new Exports_js_1.ConversationManager();\n        // check the speech language\n        const language = speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        if (!language) {\n            speechConfig.setProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage], Exports_js_1.ConversationConnectionConfig.defaultLanguageCode);\n        }\n        this.privLanguage = speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        if (!id) {\n            // check the target language(s)\n            if (speechConfig.targetLanguages.length === 0) {\n                speechConfig.addTargetLanguage(this.privLanguage);\n            }\n            // check the profanity setting: speech and conversationTranslator should be in sync\n            const profanity = speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceResponse_ProfanityOption]);\n            if (!profanity) {\n                speechConfig.setProfanity(Exports_js_3.ProfanityOption.Masked);\n            }\n            // check the nickname: it should pass this regex: ^\\w+([\\s-][\\w\\(\\)]+)*$\"\n            // TODO: specify the regex required. Nicknames must be unique or get the duplicate nickname error\n            // TODO: check what the max length is and if a truncation is required or if the service handles it without an error\n            let hostNickname = speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.ConversationTranslator_Name]);\n            if (hostNickname === undefined || hostNickname === null) {\n                hostNickname = \"Host\";\n            }\n            Contracts_js_1.Contracts.throwIfNullOrTooLong(hostNickname, \"nickname\", 50);\n            Contracts_js_1.Contracts.throwIfNullOrTooShort(hostNickname, \"nickname\", 2);\n            speechConfig.setProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.ConversationTranslator_Name], hostNickname);\n        }\n        else {\n            this.privConversationId = id;\n        }\n        // save the speech config for future usage\n        this.privConfig = speechConfig;\n        // save the config properties\n        const configImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(configImpl, \"speechConfig\");\n        this.privProperties = configImpl.properties.clone();\n        this.privIsConnected = false;\n        this.privParticipants = new Exports_js_1.InternalParticipants();\n        this.privIsReady = false;\n        this.privTextMessageMaxLength = 1000;\n    }\n    // get the internal data about a conversation\n    get room() {\n        return this.privRoom;\n    }\n    // get the wrapper for connecting to the websockets\n    get connection() {\n        return this.privConversationRecognizer; // this.privConnection;\n    }\n    // get the config\n    get config() {\n        return this.privConfig;\n    }\n    // get the conversation Id\n    get conversationId() {\n        return this.privRoom ? this.privRoom.roomId : this.privConversationId;\n    }\n    // get the properties\n    get properties() {\n        return this.privProperties;\n    }\n    // get the speech language\n    get speechRecognitionLanguage() {\n        return this.privLanguage;\n    }\n    get isMutedByHost() {\n        return this.privParticipants.me?.isHost ? false : this.privParticipants.me?.isMuted;\n    }\n    get isConnected() {\n        return this.privIsConnected && this.privIsReady;\n    }\n    get participants() {\n        return this.toParticipants(true);\n    }\n    get me() {\n        return this.toParticipant(this.privParticipants.me);\n    }\n    get host() {\n        return this.toParticipant(this.privParticipants.host);\n    }\n    get transcriberRecognizer() {\n        return this.privTranscriberRecognizer;\n    }\n    get conversationInfo() {\n        const convId = this.conversationId;\n        const p = this.participants.map((part) => ({\n            id: part.id,\n            preferredLanguage: part.preferredLanguage,\n            voice: part.voice\n        }));\n        const props = {};\n        for (const key of Exports_js_1.ConversationConnectionConfig.transcriptionEventKeys) {\n            const val = this.properties.getProperty(key, \"\");\n            if (val !== \"\") {\n                props[key] = val;\n            }\n        }\n        const info = { id: convId, participants: p, conversationProperties: props };\n        return info;\n    }\n    get canSend() {\n        return this.privIsConnected && !this.privParticipants.me?.isMuted;\n    }\n    get canSendAsHost() {\n        return this.privIsConnected && this.privParticipants.me?.isHost;\n    }\n    // get / set the speech auth token\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    get authorizationToken() {\n        return this.privToken;\n    }\n    set authorizationToken(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"authorizationToken\");\n        this.privToken = value;\n    }\n    set conversationTranslator(conversationTranslator) {\n        this.privConversationTranslator = conversationTranslator;\n    }\n    onToken(token) {\n        this.privConversationTranslator.onToken(token);\n    }\n    /**\n     * Create a new conversation as Host\n     * @param cb\n     * @param err\n     */\n    createConversationAsync(cb, err) {\n        try {\n            if (!!this.privConversationRecognizer) {\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\n            }\n            this.privManager.createOrJoin(this.privProperties, undefined, ((room) => {\n                if (!room) {\n                    this.handleError(new Error(this.privErrors.permissionDeniedConnect), err);\n                }\n                this.privRoom = room;\n                this.handleCallback(cb, err);\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Starts a new conversation as host.\n     * @param cb\n     * @param err\n     */\n    startConversationAsync(cb, err) {\n        try {\n            // check if there is already a recognizer\n            if (!!this.privConversationRecognizer) {\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\n            }\n            // check if there is conversation data available\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedConnect);\n            // connect to the conversation websocket\n            this.privParticipants.meId = this.privRoom.participantId;\n            this.privConversationRecognizer = Exports_js_1.ConversationRecognizerFactory.fromConfig(this, this.privConfig);\n            // Because ConversationTranslator manually sets up and manages the connection, Conversation\n            // has to forward serviceRecognizer connection events that usually get passed automatically\n            this.privConversationRecognizer.connected = this.onConnected;\n            this.privConversationRecognizer.disconnected = this.onDisconnected;\n            this.privConversationRecognizer.canceled = this.onCanceled;\n            this.privConversationRecognizer.participantUpdateCommandReceived = this.onParticipantUpdateCommandReceived;\n            this.privConversationRecognizer.lockRoomCommandReceived = this.onLockRoomCommandReceived;\n            this.privConversationRecognizer.muteAllCommandReceived = this.onMuteAllCommandReceived;\n            this.privConversationRecognizer.participantJoinCommandReceived = this.onParticipantJoinCommandReceived;\n            this.privConversationRecognizer.participantLeaveCommandReceived = this.onParticipantLeaveCommandReceived;\n            this.privConversationRecognizer.translationReceived = this.onTranslationReceived;\n            this.privConversationRecognizer.participantsListReceived = this.onParticipantsListReceived;\n            this.privConversationRecognizer.conversationExpiration = this.onConversationExpiration;\n            this.privConversationRecognizer.connect(this.privRoom.token, (() => {\n                this.handleCallback(cb, err);\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Join a conversation as a participant.\n     * @param { IParticipant } participant - participant to add\n     * @param cb\n     * @param err\n     */\n    addParticipantAsync(participant, cb, err) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(participant, \"Participant\");\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.addParticipantImplAsync(participant), cb, err);\n    }\n    /**\n     * Join a conversation as a participant.\n     * @param conversation\n     * @param nickname\n     * @param lang\n     * @param cb\n     * @param err\n     */\n    joinConversationAsync(conversationId, nickname, lang, cb, err) {\n        try {\n            // TODO\n            // if (!!this.privConversationRecognizer) {\n            //     throw new Error(this.privErrors.permissionDeniedStart);\n            // }\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(conversationId, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversationId\"));\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(lang, this.privErrors.invalidArgs.replace(\"{arg}\", \"language\"));\n            // join the conversation\n            this.privManager.createOrJoin(this.privProperties, conversationId, ((room) => {\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(room, this.privErrors.permissionDeniedConnect);\n                this.privRoom = room;\n                this.privConfig.authorizationToken = room.cognitiveSpeechAuthToken;\n                // join callback\n                if (!!cb) {\n                    cb(room.cognitiveSpeechAuthToken);\n                }\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Deletes a conversation\n     * @param cb\n     * @param err\n     */\n    deleteConversationAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.deleteConversationImplAsync(), cb, err);\n    }\n    async deleteConversationImplAsync() {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privProperties, this.privErrors.permissionDeniedConnect);\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.token, this.privErrors.permissionDeniedConnect);\n        await this.privManager.leave(this.privProperties, this.privRoom.token);\n        this.dispose();\n    }\n    /**\n     * Issues a request to close the client websockets\n     * @param cb\n     * @param err\n     */\n    endConversationAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.endConversationImplAsync(), cb, err);\n    }\n    endConversationImplAsync() {\n        return this.close(true);\n    }\n    /**\n     * Issues a request to lock the conversation\n     * @param cb\n     * @param err\n     */\n    lockConversationAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"lock\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getLockCommand(true), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to mute the conversation\n     * @param cb\n     * @param err\n     */\n    muteAllParticipantsAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversationRecognizer, this.privErrors.permissionDeniedSend);\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            // check the user's permissions\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"mute\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteAllCommand(true), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to mute a participant in the conversation\n     * @param userId\n     * @param cb\n     * @param err\n     */\n    muteParticipantAsync(userId, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            // check the connection is open (host + participant can perform the mute command)\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            // if not host, check the participant is not muting another participant\n            if (!this.me.isHost && this.me.id !== userId) {\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\n            }\n            // check the user exists\n            const exists = this.privParticipants.getParticipantIndex(userId);\n            if (exists === -1) {\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteCommand(userId, true), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to remove a participant from the conversation\n     * @param userId\n     * @param cb\n     * @param err\n     */\n    removeParticipantAsync(userId, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            if (!!this.privTranscriberRecognizer && userId.hasOwnProperty(\"id\")) {\n                // Assume this is a transcription participant\n                (0, Exports_js_2.marshalPromiseToCallbacks)(this.removeParticipantImplAsync(userId), cb, err);\n            }\n            else {\n                Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n                if (!this.canSendAsHost) {\n                    this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"remove\")), err);\n                }\n                let participantId = \"\";\n                if (typeof userId === \"string\") {\n                    participantId = userId;\n                }\n                else if (userId.hasOwnProperty(\"id\")) {\n                    const participant = userId;\n                    participantId = participant.id;\n                }\n                else if (userId.hasOwnProperty(\"userId\")) {\n                    const user = userId;\n                    participantId = user.userId;\n                }\n                Contracts_js_1.Contracts.throwIfNullOrWhitespace(participantId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\n                // check the participant exists\n                const index = this.participants.findIndex((p) => p.id === participantId);\n                if (index === -1) {\n                    this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\n                }\n                if (!!this.privConversationRecognizer) {\n                    this.privConversationRecognizer.sendRequest(this.getEjectCommand(participantId), (() => {\n                        this.handleCallback(cb, err);\n                    }), ((error) => {\n                        this.handleError(error, err);\n                    }));\n                }\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to unlock the conversation\n     * @param cb\n     * @param err\n     */\n    unlockConversationAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unlock\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getLockCommand(false), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to unmute all participants in the conversation\n     * @param cb\n     * @param err\n     */\n    unmuteAllParticipantsAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unmute all\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteAllCommand(false), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to unmute a participant in the conversation\n     * @param userId\n     * @param cb\n     * @param err\n     */\n    unmuteParticipantAsync(userId, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            // check the connection is open (host + participant can perform the mute command)\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            // if not host, check the participant is not muting another participant\n            if (!this.me.isHost && this.me.id !== userId) {\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\n            }\n            // check the user exists\n            const exists = this.privParticipants.getParticipantIndex(userId);\n            if (exists === -1) {\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteCommand(userId, false), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Send a text message\n     * @param message\n     * @param cb\n     * @param err\n     */\n    sendTextMessageAsync(message, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(message, this.privErrors.invalidArgs.replace(\"{arg}\", \"message\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            // TODO: is a max length check required?\n            if (message.length > this.privTextMessageMaxLength) {\n                this.handleError(new Error(this.privErrors.invalidArgs.replace(\"{arg}\", \"message length\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMessageCommand(message), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Set translated to languages\n     * @param {string[]} languages - languages to translate to\n     * @param cb\n     * @param err\n     */\n    setTranslatedLanguagesAsync(languages, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfArrayEmptyOrWhitespace(languages, this.privErrors.invalidArgs.replace(\"{arg}\", \"languages\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getSetTranslateToLanguagesCommand(languages), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Change nickname\n     * @param {string} nickname - new nickname for the room\n     * @param cb\n     * @param err\n     */\n    changeNicknameAsync(nickname, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getChangeNicknameCommand(nickname), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this.privIsDisposed = true;\n        if (!!this.config) {\n            this.config.close();\n        }\n        this.privConfig = undefined;\n        this.privLanguage = undefined;\n        this.privProperties = undefined;\n        this.privRoom = undefined;\n        this.privToken = undefined;\n        this.privManager = undefined;\n        this.privIsConnected = false;\n        this.privIsReady = false;\n        this.privParticipants = undefined;\n    }\n    async connectTranscriberRecognizer(recognizer) {\n        if (!!this.privTranscriberRecognizer) {\n            await this.privTranscriberRecognizer.close();\n        }\n        await recognizer.enforceAudioGating();\n        this.privTranscriberRecognizer = recognizer;\n        this.privTranscriberRecognizer.conversation = this;\n    }\n    getKeepAlive() {\n        const nickname = (!!this.me) ? this.me.displayName : \"default_nickname\";\n        return JSON.stringify({\n            id: \"0\",\n            nickname,\n            participantId: this.privRoom.participantId,\n            roomId: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.keepAlive\n        });\n    }\n    /* eslint-enable @typescript-eslint/typedef */\n    addParticipantImplAsync(participant) {\n        const newParticipant = this.privParticipants.addOrUpdateParticipant(participant);\n        if (newParticipant !== undefined) {\n            if (!!this.privTranscriberRecognizer) {\n                const conversationInfo = this.conversationInfo;\n                conversationInfo.participants = [participant];\n                return this.privTranscriberRecognizer.pushConversationEvent(conversationInfo, \"join\");\n            }\n        }\n    }\n    removeParticipantImplAsync(participant) {\n        this.privParticipants.deleteParticipant(participant.id);\n        const conversationInfo = this.conversationInfo;\n        conversationInfo.participants = [participant];\n        return this.privTranscriberRecognizer.pushConversationEvent(conversationInfo, \"leave\");\n    }\n    async close(dispose) {\n        try {\n            this.privIsConnected = false;\n            await this.privConversationRecognizer?.close();\n            this.privConversationRecognizer = undefined;\n            if (!!this.privConversationTranslator) {\n                this.privConversationTranslator.dispose();\n            }\n        }\n        catch (e) {\n            // ignore error\n            throw e;\n        }\n        if (dispose) {\n            this.dispose();\n        }\n    }\n    /** Helpers */\n    handleCallback(cb, err) {\n        if (!!cb) {\n            try {\n                cb();\n            }\n            catch (e) {\n                if (!!err) {\n                    err(e);\n                }\n            }\n            cb = undefined;\n        }\n    }\n    handleError(error, err) {\n        if (!!err) {\n            if (error instanceof Error) {\n                const typedError = error;\n                err(typedError.name + \": \" + typedError.message);\n            }\n            else {\n                err(error);\n            }\n        }\n    }\n    /** Participant Helpers */\n    toParticipants(includeHost) {\n        const participants = this.privParticipants.participants.map((p) => (this.toParticipant(p)));\n        if (!includeHost) {\n            return participants.filter((p) => p.isHost === false);\n        }\n        else {\n            return participants;\n        }\n    }\n    toParticipant(p) {\n        return new Exports_js_3.Participant(p.id, p.avatar, p.displayName, p.isHost, p.isMuted, p.isUsingTts, p.preferredLanguage, p.voice);\n    }\n    getMuteAllCommand(isMuted) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setMuteAll,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: isMuted\n        });\n    }\n    getMuteCommand(participantId, isMuted) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setMute,\n            // eslint-disable-next-line object-shorthand\n            participantId: participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: isMuted\n        });\n    }\n    getLockCommand(isLocked) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setLockState,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: isLocked\n        });\n    }\n    getEjectCommand(participantId) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.ejectParticipant,\n            // eslint-disable-next-line object-shorthand\n            participantId: participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n        });\n    }\n    getSetTranslateToLanguagesCommand(languages) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setTranslateToLanguages,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: languages\n        });\n    }\n    getChangeNicknameCommand(nickname) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, \"nickname\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.changeNickname,\n            nickname,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: nickname\n        });\n    }\n    getMessageCommand(message) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(message, \"message\");\n        return JSON.stringify({\n            participantId: this.privRoom.participantId,\n            roomId: this.privRoom.roomId,\n            text: message,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.instantMessage\n        });\n    }\n}\nexports.ConversationImpl = ConversationImpl;\n\n//# sourceMappingURL=Conversation.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationCommon = void 0;\nclass ConversationCommon {\n    constructor(audioConfig) {\n        this.privAudioConfig = audioConfig;\n    }\n    handleCallback(cb, err) {\n        if (!!cb) {\n            try {\n                cb();\n            }\n            catch (e) {\n                if (!!err) {\n                    err(e);\n                }\n            }\n            cb = undefined;\n        }\n    }\n    handleError(error, err) {\n        if (!!err) {\n            if (error instanceof Error) {\n                const typedError = error;\n                err(typedError.name + \": \" + typedError.message);\n            }\n            else {\n                err(error);\n            }\n        }\n    }\n}\nexports.ConversationCommon = ConversationCommon;\n\n//# sourceMappingURL=ConversationCommon.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationExpirationEventArgs = void 0;\nconst Exports_js_1 = require(\"../Exports.js\");\nclass ConversationExpirationEventArgs extends Exports_js_1.SessionEventArgs {\n    constructor(expirationTime, sessionId) {\n        super(sessionId);\n        this.privExpirationTime = expirationTime;\n    }\n    /** How much longer until the conversation expires (in minutes). */\n    get expirationTime() {\n        return this.privExpirationTime;\n    }\n}\nexports.ConversationExpirationEventArgs = ConversationExpirationEventArgs;\n\n//# sourceMappingURL=ConversationExpirationEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationParticipantsChangedEventArgs = void 0;\nconst Exports_js_1 = require(\"../Exports.js\");\nclass ConversationParticipantsChangedEventArgs extends Exports_js_1.SessionEventArgs {\n    constructor(reason, participants, sessionId) {\n        super(sessionId);\n        this.privReason = reason;\n        this.privParticipant = participants;\n    }\n    get reason() {\n        return this.privReason;\n    }\n    get participants() {\n        return this.privParticipant;\n    }\n}\nexports.ConversationParticipantsChangedEventArgs = ConversationParticipantsChangedEventArgs;\n\n//# sourceMappingURL=ConversationParticipantsChangedEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranslationCanceledEventArgs = void 0;\nconst CancellationEventArgsBase_js_1 = require(\"../CancellationEventArgsBase.js\");\nclass ConversationTranslationCanceledEventArgs extends CancellationEventArgsBase_js_1.CancellationEventArgsBase {\n}\nexports.ConversationTranslationCanceledEventArgs = ConversationTranslationCanceledEventArgs;\n\n//# sourceMappingURL=ConversationTranslationCanceledEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranslationEventArgs = void 0;\nconst Exports_js_1 = require(\"../Exports.js\");\nclass ConversationTranslationEventArgs extends Exports_js_1.RecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {ConversationTranslationResult} result - The translation recognition result.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(result, offset, sessionId) {\n        super(offset, sessionId);\n        this.privResult = result;\n    }\n    /**\n     * Specifies the recognition result.\n     * @returns {ConversationTranslationResult} the recognition result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\nexports.ConversationTranslationEventArgs = ConversationTranslationEventArgs;\n\n//# sourceMappingURL=ConversationTranslationEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranslationResult = void 0;\nconst TranslationRecognitionResult_js_1 = require(\"../TranslationRecognitionResult.js\");\nclass ConversationTranslationResult extends TranslationRecognitionResult_js_1.TranslationRecognitionResult {\n    constructor(participantId, translations, originalLanguage, resultId, reason, text, duration, offset, errorDetails, json, properties) {\n        super(translations, resultId, reason, text, duration, offset, undefined, undefined, errorDetails, json, properties);\n        this.privId = participantId;\n        this.privOrigLang = originalLanguage;\n    }\n    /**\n     * The unique identifier for the participant this result is for.\n     */\n    get participantId() {\n        return this.privId;\n    }\n    /**\n     * The original language this result was in.\n     */\n    get originalLang() {\n        return this.privOrigLang;\n    }\n}\nexports.ConversationTranslationResult = ConversationTranslationResult;\n\n//# sourceMappingURL=ConversationTranslationResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StringUtils = void 0;\n/**\n * String helper functions\n */\nclass StringUtils {\n    /**\n     * Formats a string by replacing the named {keys} in the string with the values contained in the replacement dictionary.\n     * @param format The format string that contains the parts to replace surrounded by {}. For example: \"wss://{region}.cts.speech.microsoft.com\".\n     * If your string needs to contain a { or } you can use the {{ and }} escape sequences respectively.\n     * @param replacements The dictionary of replacements. If a replacement is not found, it is replaced with an empty string\n     * @returns The formatted string. If you pass in a null or undefined format string, an empty string will be returned\n     */\n    static formatString(format, replacements) {\n        if (!format) {\n            return \"\";\n        }\n        if (!replacements) {\n            return format;\n        }\n        let formatted = \"\";\n        let key = \"\";\n        const appendToFormatted = (str) => {\n            formatted += str;\n        };\n        const appendToKey = (str) => {\n            key += str;\n        };\n        let appendFunc = appendToFormatted;\n        for (let i = 0; i < format.length; i++) {\n            const c = format[i];\n            const next = i + 1 < format.length ? format[i + 1] : \"\";\n            switch (c) {\n                case \"{\":\n                    if (next === \"{\") {\n                        appendFunc(\"{\");\n                        i++;\n                    }\n                    else {\n                        appendFunc = appendToKey;\n                    }\n                    break;\n                case \"}\":\n                    if (next === \"}\") {\n                        appendFunc(\"}\");\n                        i++;\n                    }\n                    else {\n                        if (replacements.hasOwnProperty(key)) {\n                            formatted += replacements[key];\n                        }\n                        appendFunc = appendToFormatted;\n                        key = \"\";\n                    }\n                    break;\n                default:\n                    appendFunc(c);\n                    break;\n            }\n        }\n        return formatted;\n    }\n}\nexports.StringUtils = StringUtils;\n\n//# sourceMappingURL=StringUtils.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranslatorConnectionFactory = void 0;\nconst Exports_js_1 = require(\"../../common.browser/Exports.js\");\nconst StringUtils_js_1 = require(\"../../common/StringUtils.js\");\nconst Contracts_js_1 = require(\"../../sdk/Contracts.js\");\nconst Exports_js_2 = require(\"../../sdk/Exports.js\");\nconst HeaderNames_js_1 = require(\"../HeaderNames.js\");\nconst QueryParameterNames_js_1 = require(\"../QueryParameterNames.js\");\nconst ConnectionFactoryBase_js_1 = require(\"./../ConnectionFactoryBase.js\");\nconst Exports_js_3 = require(\"./../Exports.js\");\n/**\n * Connection factory for the conversation translator. Handles connecting to the regular translator endpoint,\n * as well as the virtual microphone array transcription endpoint\n */\nclass ConversationTranslatorConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    constructor(convGetter) {\n        super();\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(convGetter, \"convGetter\");\n        this.privConvGetter = convGetter;\n    }\n    create(config, authInfo, connectionId) {\n        const isVirtMicArrayEndpoint = config.parameters.getProperty(\"ConversationTranslator_MultiChannelAudio\", \"\").toUpperCase() === \"TRUE\";\n        const convInfo = this.privConvGetter().room;\n        const region = convInfo.cognitiveSpeechRegion || config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, \"\");\n        const replacementValues = {\n            hostSuffix: ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region),\n            path: ConversationTranslatorConnectionFactory.CTS_VIRT_MIC_PATH,\n            region: encodeURIComponent(region)\n        };\n        replacementValues[QueryParameterNames_js_1.QueryParameterNames.Language] = encodeURIComponent(config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage, \"\"));\n        replacementValues[QueryParameterNames_js_1.QueryParameterNames.CtsMeetingId] = encodeURIComponent(convInfo.roomId);\n        replacementValues[QueryParameterNames_js_1.QueryParameterNames.CtsDeviceId] = encodeURIComponent(convInfo.participantId);\n        replacementValues[QueryParameterNames_js_1.QueryParameterNames.CtsIsParticipant] = convInfo.isHost ? \"\" : (\"&\" + QueryParameterNames_js_1.QueryParameterNames.CtsIsParticipant);\n        let endpointUrl = \"\";\n        const queryParams = {};\n        const headers = {};\n        if (isVirtMicArrayEndpoint) {\n            // connecting to the conversation transcription virtual microphone array endpoint\n            endpointUrl = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint);\n            if (!endpointUrl) {\n                const hostName = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, \"transcribe.{region}.cts.speech{hostSuffix}\");\n                endpointUrl = \"wss://\" + hostName + \"{path}\";\n            }\n            // because the region can change during a session, we support being passed a format string which we can then\n            // replace with the correct information.\n            endpointUrl = StringUtils_js_1.StringUtils.formatString(endpointUrl, replacementValues);\n            const parsedUrl = new URL(endpointUrl);\n            parsedUrl.searchParams.forEach((val, key) => {\n                queryParams[key] = val;\n            });\n            const connFactory = new Exports_js_3.TranscriberConnectionFactory();\n            connFactory.setQueryParams(queryParams, config, endpointUrl);\n            // Some query parameters are required for the CTS endpoint, let's explicity set them here\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.CtsMeetingId] = replacementValues[QueryParameterNames_js_1.QueryParameterNames.CtsMeetingId];\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.CtsDeviceId] = replacementValues[QueryParameterNames_js_1.QueryParameterNames.CtsDeviceId];\n            if (!convInfo.isHost) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.CtsIsParticipant] = \"\"; // this doesn't have a value so set to an empty string\n            }\n            if (!(QueryParameterNames_js_1.QueryParameterNames.Format in queryParams)) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.Format] = \"simple\";\n            }\n            parsedUrl.searchParams.forEach((val, key) => {\n                parsedUrl.searchParams.set(key, queryParams[key]);\n                delete queryParams[key];\n            });\n            endpointUrl = parsedUrl.toString();\n        }\n        else {\n            // connecting to regular translation endpoint\n            const connFactory = new Exports_js_3.TranslationConnectionFactory();\n            endpointUrl = connFactory.getEndpointUrl(config, true);\n            endpointUrl = StringUtils_js_1.StringUtils.formatString(endpointUrl, replacementValues);\n            connFactory.setQueryParams(queryParams, config, endpointUrl);\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        headers[Exports_js_1.RestConfigBase.configParams.token] = convInfo.token;\n        if (!!authInfo.token) {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"\").toUpperCase() === \"TRUE\";\n        return Promise.resolve(new Exports_js_1.WebsocketConnection(endpointUrl, queryParams, headers, new Exports_js_3.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId));\n    }\n}\nexports.ConversationTranslatorConnectionFactory = ConversationTranslatorConnectionFactory;\nConversationTranslatorConnectionFactory.CTS_VIRT_MIC_PATH = \"/speech/recognition/dynamicaudio\";\n\n//# sourceMappingURL=ConversationTranslatorConnectionFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranslator = exports.SpeechState = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../../common.speech/Exports.js\");\nconst ConversationTranslatorConnectionFactory_js_1 = require(\"../../common.speech/Transcription/ConversationTranslatorConnectionFactory.js\");\nconst Exports_js_2 = require(\"../../common/Exports.js\");\nconst Contracts_js_1 = require(\"../Contracts.js\");\nconst Exports_js_3 = require(\"../Exports.js\");\nconst Conversation_js_1 = require(\"./Conversation.js\");\nconst Exports_js_4 = require(\"./Exports.js\");\nvar SpeechState;\n(function (SpeechState) {\n    SpeechState[SpeechState[\"Inactive\"] = 0] = \"Inactive\";\n    SpeechState[SpeechState[\"Connecting\"] = 1] = \"Connecting\";\n    SpeechState[SpeechState[\"Connected\"] = 2] = \"Connected\";\n})(SpeechState = exports.SpeechState || (exports.SpeechState = {}));\n// child class of TranslationRecognizer meant only for use with ConversationTranslator\nclass ConversationTranslationRecognizer extends Exports_js_3.TranslationRecognizer {\n    constructor(speechConfig, audioConfig, translator, convGetter) {\n        super(speechConfig, audioConfig, new ConversationTranslatorConnectionFactory_js_1.ConversationTranslatorConnectionFactory(convGetter));\n        this.privSpeechState = SpeechState.Inactive;\n        if (!!translator) {\n            this.privTranslator = translator;\n            this.sessionStarted = () => {\n                this.privSpeechState = SpeechState.Connected;\n            };\n            this.sessionStopped = () => {\n                this.privSpeechState = SpeechState.Inactive;\n            };\n            this.recognizing = (tr, e) => {\n                if (!!this.privTranslator.recognizing) {\n                    this.privTranslator.recognizing(this.privTranslator, e);\n                }\n            };\n            // eslint-disable-next-line @typescript-eslint/no-misused-promises\n            this.recognized = async (tr, e) => {\n                // if there is an error connecting to the conversation service from the speech service the error will be returned in the ErrorDetails field.\n                if (e.result?.errorDetails) {\n                    await this.cancelSpeech();\n                    // TODO: format the error message contained in 'errorDetails'\n                    this.fireCancelEvent(e.result.errorDetails);\n                }\n                else {\n                    if (!!this.privTranslator.recognized) {\n                        this.privTranslator.recognized(this.privTranslator, e);\n                    }\n                }\n                return;\n            };\n            // eslint-disable-next-line @typescript-eslint/no-misused-promises\n            this.canceled = async () => {\n                if (this.privSpeechState !== SpeechState.Inactive) {\n                    try {\n                        await this.cancelSpeech();\n                    }\n                    catch (error) {\n                        this.privSpeechState = SpeechState.Inactive;\n                    }\n                }\n            };\n        }\n    }\n    get state() {\n        return this.privSpeechState;\n    }\n    set state(newState) {\n        this.privSpeechState = newState;\n    }\n    set authentication(token) {\n        this.privReco.authentication = token;\n    }\n    onConnection() {\n        this.privSpeechState = SpeechState.Connected;\n    }\n    async onCancelSpeech() {\n        this.privSpeechState = SpeechState.Inactive;\n        await this.cancelSpeech();\n    }\n    /**\n     * Fire a cancel event\n     * @param error\n     */\n    fireCancelEvent(error) {\n        try {\n            if (!!this.privTranslator.canceled) {\n                const cancelEvent = new Exports_js_4.ConversationTranslationCanceledEventArgs(Exports_js_3.CancellationReason.Error, error, Exports_js_3.CancellationErrorCode.RuntimeError);\n                this.privTranslator.canceled(this.privTranslator, cancelEvent);\n            }\n        }\n        catch (e) {\n            //\n        }\n    }\n    async cancelSpeech() {\n        try {\n            this.stopContinuousRecognitionAsync();\n            await this.privReco?.disconnect();\n            this.privSpeechState = SpeechState.Inactive;\n        }\n        catch (e) {\n            // ignore the error\n        }\n    }\n}\n/**\n * Join, leave or connect to a conversation.\n */\nclass ConversationTranslator extends Exports_js_4.ConversationCommon {\n    constructor(audioConfig) {\n        super(audioConfig);\n        this.privErrors = Exports_js_1.ConversationConnectionConfig.restErrors;\n        this.privIsDisposed = false;\n        this.privIsSpeaking = false;\n        this.privPlaceholderKey = \"abcdefghijklmnopqrstuvwxyz012345\";\n        this.privPlaceholderRegion = \"westus\";\n        this.privProperties = new Exports_js_3.PropertyCollection();\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    get speechRecognitionLanguage() {\n        return this.privSpeechRecognitionLanguage;\n    }\n    get participants() {\n        return this.privConversation?.participants;\n    }\n    get canSpeak() {\n        // is there a Conversation websocket available and has the Recognizer been set up\n        if (!this.privConversation.isConnected || !this.privCTRecognizer) {\n            return false;\n        }\n        // is the user already speaking\n        if (this.privIsSpeaking || this.privCTRecognizer.state === SpeechState.Connected || this.privCTRecognizer.state === SpeechState.Connecting) {\n            return false;\n        }\n        // is the user muted\n        if (this.privConversation.isMutedByHost) {\n            return false;\n        }\n        return true;\n    }\n    onToken(token) {\n        this.privCTRecognizer.authentication = token;\n    }\n    setServiceProperty(name, value) {\n        const currentProperties = JSON.parse(this.privProperties.getProperty(Exports_js_1.ServicePropertiesPropertyName, \"{}\"));\n        currentProperties[name] = value;\n        this.privProperties.setProperty(Exports_js_1.ServicePropertiesPropertyName, JSON.stringify(currentProperties));\n    }\n    joinConversationAsync(conversation, nickname, param1, param2, param3) {\n        try {\n            if (typeof conversation === \"string\") {\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(conversation, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversation id\"));\n                Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\n                if (!!this.privConversation) {\n                    this.handleError(new Error(this.privErrors.permissionDeniedStart), param3);\n                }\n                let lang = param1;\n                if (lang === undefined || lang === null || lang === \"\") {\n                    lang = Exports_js_1.ConversationConnectionConfig.defaultLanguageCode;\n                }\n                // create a placeholder config\n                this.privSpeechTranslationConfig = Exports_js_3.SpeechTranslationConfig.fromSubscription(this.privPlaceholderKey, this.privPlaceholderRegion);\n                this.privSpeechTranslationConfig.setProfanity(Exports_js_3.ProfanityOption.Masked);\n                this.privSpeechTranslationConfig.addTargetLanguage(lang);\n                this.privSpeechTranslationConfig.setProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage], lang);\n                this.privSpeechTranslationConfig.setProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.ConversationTranslator_Name], nickname);\n                const propertyIdsToCopy = [\n                    Exports_js_3.PropertyId.SpeechServiceConnection_Host,\n                    Exports_js_3.PropertyId.ConversationTranslator_Host,\n                    Exports_js_3.PropertyId.SpeechServiceConnection_Endpoint,\n                    Exports_js_3.PropertyId.SpeechServiceConnection_ProxyHostName,\n                    Exports_js_3.PropertyId.SpeechServiceConnection_ProxyPassword,\n                    Exports_js_3.PropertyId.SpeechServiceConnection_ProxyPort,\n                    Exports_js_3.PropertyId.SpeechServiceConnection_ProxyUserName,\n                    \"ConversationTranslator_MultiChannelAudio\",\n                    \"ConversationTranslator_Region\"\n                ];\n                for (const prop of propertyIdsToCopy) {\n                    const value = this.privProperties.getProperty(prop);\n                    if (value) {\n                        const key = typeof prop === \"string\" ? prop : Exports_js_3.PropertyId[prop];\n                        this.privSpeechTranslationConfig.setProperty(key, value);\n                    }\n                }\n                const currentProperties = JSON.parse(this.privProperties.getProperty(Exports_js_1.ServicePropertiesPropertyName, \"{}\"));\n                for (const prop of Object.keys(currentProperties)) {\n                    this.privSpeechTranslationConfig.setServiceProperty(prop, currentProperties[prop], Exports_js_3.ServicePropertyChannel.UriQueryParameter);\n                }\n                // join the conversation\n                this.privConversation = new Conversation_js_1.ConversationImpl(this.privSpeechTranslationConfig);\n                this.privConversation.conversationTranslator = this;\n                this.privConversation.joinConversationAsync(conversation, nickname, lang, ((result) => {\n                    if (!result) {\n                        this.handleError(new Error(this.privErrors.permissionDeniedConnect), param3);\n                    }\n                    this.privSpeechTranslationConfig.authorizationToken = result;\n                    this.privConversation.room.isHost = false;\n                    // connect to the ws\n                    this.privConversation.startConversationAsync((() => {\n                        this.handleCallback(param2, param3);\n                    }), ((error) => {\n                        this.handleError(error, param3);\n                    }));\n                }), ((error) => {\n                    this.handleError(error, param3);\n                }));\n            }\n            else if (typeof conversation === \"object\") {\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(conversation, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversation id\"));\n                Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\n                // save the nickname\n                this.privProperties.setProperty(Exports_js_3.PropertyId.ConversationTranslator_Name, nickname);\n                // ref the conversation object\n                this.privConversation = conversation;\n                // ref the conversation translator object\n                this.privConversation.conversationTranslator = this;\n                this.privConversation.room.isHost = true;\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedConnect);\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversation.room.token, this.privErrors.permissionDeniedConnect);\n                this.privSpeechTranslationConfig = conversation.config;\n                this.handleCallback(param1, param2);\n            }\n            else {\n                this.handleError(new Error(this.privErrors.invalidArgs.replace(\"{arg}\", \"invalid conversation type\")), param2);\n            }\n        }\n        catch (error) {\n            this.handleError(error, typeof param1 === \"string\" ? param3 : param2);\n        }\n    }\n    /**\n     * Leave the conversation\n     * @param cb\n     * @param err\n     */\n    leaveConversationAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)((async () => {\n            // stop the speech websocket\n            await this.cancelSpeech();\n            // stop the websocket\n            await this.privConversation.endConversationImplAsync();\n            // https delete request\n            await this.privConversation.deleteConversationImplAsync();\n            this.dispose();\n        })(), cb, err);\n    }\n    /**\n     * Send a text message\n     * @param message\n     * @param cb\n     * @param err\n     */\n    sendTextMessageAsync(message, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedSend);\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(message, this.privErrors.invalidArgs.replace(\"{arg}\", message));\n            this.privConversation.sendTextMessageAsync(message, cb, err);\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Start speaking\n     * @param cb\n     * @param err\n     */\n    startTranscribingAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)((async () => {\n            try {\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedSend);\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversation.room.token, this.privErrors.permissionDeniedConnect);\n                if (this.privCTRecognizer === undefined) {\n                    await this.connectTranslatorRecognizer();\n                }\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privCTRecognizer, this.privErrors.permissionDeniedSend);\n                if (!this.canSpeak) {\n                    this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n                }\n                await this.startContinuousRecognition();\n                this.privIsSpeaking = true;\n            }\n            catch (error) {\n                this.privIsSpeaking = false;\n                await this.cancelSpeech();\n                throw error;\n            }\n        })(), cb, err);\n    }\n    /**\n     * Stop speaking\n     * @param cb\n     * @param err\n     */\n    stopTranscribingAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)((async () => {\n            try {\n                if (!this.privIsSpeaking) {\n                    // stop speech\n                    await this.cancelSpeech();\n                    return;\n                }\n                // stop the recognition but leave the websocket open\n                this.privIsSpeaking = false;\n                await new Promise((resolve, reject) => {\n                    this.privCTRecognizer.stopContinuousRecognitionAsync(resolve, reject);\n                });\n            }\n            catch (error) {\n                await this.cancelSpeech();\n            }\n        })(), cb, err);\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    dispose(reason, success, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)((async () => {\n            if (this.isDisposed && !this.privIsSpeaking) {\n                return;\n            }\n            await this.cancelSpeech();\n            this.privIsDisposed = true;\n            this.privSpeechTranslationConfig.close();\n            this.privSpeechRecognitionLanguage = undefined;\n            this.privProperties = undefined;\n            this.privAudioConfig = undefined;\n            this.privSpeechTranslationConfig = undefined;\n            this.privConversation.dispose();\n            this.privConversation = undefined;\n        })(), success, err);\n    }\n    /**\n     * Cancel the speech websocket\n     */\n    async cancelSpeech() {\n        try {\n            this.privIsSpeaking = false;\n            await this.privCTRecognizer?.onCancelSpeech();\n            this.privCTRecognizer = undefined;\n        }\n        catch (e) {\n            // ignore the error\n        }\n    }\n    /**\n     * Connect to the speech translation recognizer.\n     * Currently there is no language validation performed before sending the SpeechLanguage code to the service.\n     * If it's an invalid language the raw error will be: 'Error during WebSocket handshake: Unexpected response code: 400'\n     * e.g. pass in 'fr' instead of 'fr-FR', or a text-only language 'cy'\n     */\n    async connectTranslatorRecognizer() {\n        try {\n            if (this.privAudioConfig === undefined) {\n                this.privAudioConfig = Exports_js_3.AudioConfig.fromDefaultMicrophoneInput();\n            }\n            // clear the temp subscription key if it's a participant joining\n            if (this.privSpeechTranslationConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_Key])\n                === this.privPlaceholderKey) {\n                this.privSpeechTranslationConfig.setProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_Key], \"\");\n            }\n            const convGetter = () => this.privConversation;\n            this.privCTRecognizer = new ConversationTranslationRecognizer(this.privSpeechTranslationConfig, this.privAudioConfig, this, convGetter);\n        }\n        catch (error) {\n            await this.cancelSpeech();\n            throw error;\n        }\n    }\n    /**\n     * Handle the start speaking request\n     */\n    startContinuousRecognition() {\n        return new Promise((resolve, reject) => {\n            this.privCTRecognizer.startContinuousRecognitionAsync(resolve, reject);\n        });\n    }\n}\nexports.ConversationTranslator = ConversationTranslator;\n\n//# sourceMappingURL=ConversationTranslator.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranscriber = void 0;\nconst Exports_js_1 = require(\"../../common.speech/Exports.js\");\nconst PhraseDetectionContext_js_1 = require(\"../../common.speech/ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\nconst Exports_js_2 = require(\"../../common/Exports.js\");\nconst Contracts_js_1 = require(\"../Contracts.js\");\nconst Exports_js_3 = require(\"../Exports.js\");\n/**\n * Performs speech recognition with speaker separation from microphone, file, or other audio input streams, and gets transcribed text as result.\n * @class ConversationTranscriber\n */\nclass ConversationTranscriber extends Exports_js_3.Recognizer {\n    /**\n     * ConversationTranscriber constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n    constructor(speechConfig, audioConfig) {\n        const speechConfigImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(speechConfigImpl.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage), Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        super(audioConfig, speechConfigImpl.properties, new Exports_js_1.ConversationTranscriberConnectionFactory(), speechConfig.tokenCredential);\n        this.privProperties.setProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, \"2\");\n        this.privDisposedRecognizer = false;\n    }\n    /**\n     * ConversationTranscriber constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the recognizer\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n    static FromConfig(speechConfig, autoDetectSourceLanguageConfig, audioConfig) {\n        const speechConfigImpl = speechConfig;\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechConfigImpl.properties);\n        const recognizer = new ConversationTranscriber(speechConfig, audioConfig);\n        return recognizer;\n    }\n    /**\n     * Gets the endpoint id of a customized speech model that is used for transcription.\n     * @member ConversationTranscriber.prototype.endpointId\n     * @function\n     * @public\n     * @returns {string} the endpoint id of a customized speech model that is used for speech recognition.\n     */\n    get endpointId() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_EndpointId, \"00000000-0000-0000-0000-000000000000\");\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member ConversationTranscriber.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member ConversationTranscriber.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * Gets the spoken language of transcription.\n     * @member ConversationTranscriber.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @returns {string} The spoken language of transcription.\n     */\n    get speechRecognitionLanguage() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    /**\n     * Gets the output format of transcription.\n     * @member ConversationTranscriber.prototype.outputFormat\n     * @function\n     * @public\n     * @returns {OutputFormat} The output format of transcription.\n     */\n    get outputFormat() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        if (this.properties.getProperty(Exports_js_1.OutputFormatPropertyName, Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Simple]) === Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Simple]) {\n            return Exports_js_3.OutputFormat.Simple;\n        }\n        else {\n            return Exports_js_3.OutputFormat.Detailed;\n        }\n    }\n    /**\n     * The collection of properties and their values defined for this conversation transcriber.\n     * @member ConversationTranscriber.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechRecognizer.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Starts conversation transcription, until stopTranscribingAsync() is called.\n     * User must subscribe to events to receive transcription results.\n     * @member ConversationTranscriber.prototype.startTranscribingAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the transcription has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startTranscribingAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.startContinuousRecognitionAsyncImpl(PhraseDetectionContext_js_1.RecognitionMode.Conversation), cb, err);\n    }\n    /**\n     * Stops conversation transcription.\n     * @member ConversationTranscriber.prototype.stopTranscribingAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the transcription has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopTranscribingAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.stopContinuousRecognitionAsyncImpl(), cb, err);\n    }\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member ConversationTranscriber.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, errorCb) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.dispose(true), cb, errorCb);\n    }\n    /**\n     * Disposes any resources held by the object.\n     * @member SpeechRecognizer.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - true if disposing the object.\n     */\n    async dispose(disposing) {\n        if (this.privDisposedRecognizer) {\n            return;\n        }\n        if (disposing) {\n            this.privDisposedRecognizer = true;\n            await this.implRecognizerStop();\n        }\n        await super.dispose(disposing);\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.privProperties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const configImpl = audioConfig;\n        recognizerConfig.isSpeakerDiarizationEnabled = true;\n        return new Exports_js_1.ConversationTranscriptionServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\n    }\n}\nexports.ConversationTranscriber = ConversationTranscriber;\n\n//# sourceMappingURL=ConversationTranscriber.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Participant = exports.User = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../Exports.js\");\nclass User {\n    constructor(userId) {\n        this.privUserId = userId;\n    }\n    get userId() {\n        return this.privUserId;\n    }\n}\nexports.User = User;\nclass Participant {\n    constructor(id, avatar, displayName, isHost, isMuted, isUsingTts, preferredLanguage, voice) {\n        this.privId = id;\n        this.privAvatar = avatar;\n        this.privDisplayName = displayName;\n        this.privIsHost = isHost;\n        this.privIsMuted = isMuted;\n        this.privIsUsingTts = isUsingTts;\n        this.privPreferredLanguage = preferredLanguage;\n        this.privVoice = voice;\n        this.privProperties = new Exports_js_1.PropertyCollection();\n    }\n    get avatar() {\n        return this.privAvatar;\n    }\n    get displayName() {\n        return this.privDisplayName;\n    }\n    get id() {\n        return this.privId;\n    }\n    get preferredLanguage() {\n        return this.privPreferredLanguage;\n    }\n    get isHost() {\n        return this.privIsHost;\n    }\n    get isMuted() {\n        return this.privIsMuted;\n    }\n    get isUsingTts() {\n        return this.privIsUsingTts;\n    }\n    get voice() {\n        return this.privVoice;\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    static From(id, language, voice) {\n        return new Participant(id, \"\", id, false, false, false, language, voice);\n    }\n}\nexports.Participant = Participant;\n\n//# sourceMappingURL=IParticipant.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParticipantChangedReason = void 0;\nvar ParticipantChangedReason;\n(function (ParticipantChangedReason) {\n    /** Participant has joined the conversation. */\n    ParticipantChangedReason[ParticipantChangedReason[\"JoinedConversation\"] = 0] = \"JoinedConversation\";\n    /** Participant has left the conversation. This could be voluntary, or involuntary\n     * (e.g. they are experiencing networking issues).\n     */\n    ParticipantChangedReason[ParticipantChangedReason[\"LeftConversation\"] = 1] = \"LeftConversation\";\n    /** The participants' state has changed (e.g. they became muted, changed their nickname). */\n    ParticipantChangedReason[ParticipantChangedReason[\"Updated\"] = 2] = \"Updated\";\n})(ParticipantChangedReason = exports.ParticipantChangedReason || (exports.ParticipantChangedReason = {}));\n\n//# sourceMappingURL=ParticipantChangedReason.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MeetingImpl = exports.Meeting = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../../common/Exports.js\");\nconst Contracts_js_1 = require(\"../Contracts.js\");\nconst Exports_js_3 = require(\"../Exports.js\");\nclass Meeting {\n    constructor() {\n        return;\n    }\n    /**\n     * Create a meeting\n     * @param speechConfig\n     * @param meetingId\n     * @param cb\n     * @param err\n     */\n    static createMeetingAsync(speechConfig, meetingId, arg3, arg4) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig, Exports_js_1.ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"config\"));\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig.region, Exports_js_1.ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Region\"));\n        Contracts_js_1.Contracts.throwIfNull(meetingId, \"meetingId\");\n        if (meetingId.length === 0) {\n            throw new Error(\"meetingId cannot be empty\");\n        }\n        if (!speechConfig.subscriptionKey && !speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceAuthorization_Token])) {\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig.subscriptionKey, Exports_js_1.ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Key\"));\n        }\n        const meetingImpl = new MeetingImpl(speechConfig, meetingId);\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        (0, Exports_js_2.marshalPromiseToCallbacks)((async () => { })(), arg3, arg4);\n        return meetingImpl;\n    }\n}\nexports.Meeting = Meeting;\nclass MeetingImpl extends Meeting {\n    /**\n     * Create a Meeting impl\n     * @param speechConfig\n     * @param {string} id - optional conversationId\n     */\n    constructor(speechConfig, id) {\n        super();\n        this.privErrors = Exports_js_1.ConversationConnectionConfig.restErrors;\n        /** websocket callbacks */\n        /* eslint-disable @typescript-eslint/typedef */\n        this.onConnected = (e) => {\n            this.privIsConnected = true;\n            try {\n                if (!!this.privConversationTranslator?.sessionStarted) {\n                    this.privConversationTranslator.sessionStarted(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onDisconnected = (e) => {\n            try {\n                if (!!this.privConversationTranslator?.sessionStopped) {\n                    this.privConversationTranslator.sessionStopped(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n            finally {\n                void this.close(false);\n            }\n        };\n        this.onCanceled = (r, e) => {\n            try {\n                if (!!this.privConversationTranslator?.canceled) {\n                    this.privConversationTranslator.canceled(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantUpdateCommandReceived = (r, e) => {\n            try {\n                const updatedParticipant = this.privParticipants.getParticipant(e.id);\n                if (updatedParticipant !== undefined) {\n                    switch (e.key) {\n                        case Exports_js_1.ConversationTranslatorCommandTypes.changeNickname:\n                            updatedParticipant.displayName = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setUseTTS:\n                            updatedParticipant.isUsingTts = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setProfanityFiltering:\n                            updatedParticipant.profanity = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setMute:\n                            updatedParticipant.isMuted = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setTranslateToLanguages:\n                            updatedParticipant.translateToLanguages = e.value;\n                            break;\n                    }\n                    this.privParticipants.addOrUpdateParticipant(updatedParticipant);\n                    if (!!this.privConversationTranslator) {\n                        this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.Updated, [this.toParticipant(updatedParticipant)], e.sessionId));\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onLockRoomCommandReceived = () => {\n            // TODO\n        };\n        this.onMuteAllCommandReceived = (r, e) => {\n            try {\n                this.privParticipants.participants.forEach((p) => p.isMuted = (p.isHost ? false : e.isMuted));\n                if (!!this.privConversationTranslator) {\n                    this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.Updated, this.toParticipants(false), e.sessionId));\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantJoinCommandReceived = (r, e) => {\n            try {\n                const newParticipant = this.privParticipants.addOrUpdateParticipant(e.participant);\n                if (newParticipant !== undefined) {\n                    if (!!this.privConversationTranslator) {\n                        this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.JoinedConversation, [this.toParticipant(newParticipant)], e.sessionId));\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantLeaveCommandReceived = (r, e) => {\n            try {\n                const ejectedParticipant = this.privParticipants.getParticipant(e.participant.id);\n                if (ejectedParticipant !== undefined) {\n                    // remove the participant from the internal participants list\n                    this.privParticipants.deleteParticipant(e.participant.id);\n                    if (!!this.privConversationTranslator) {\n                        // notify subscribers that the participant has left the conversation\n                        this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.LeftConversation, [this.toParticipant(ejectedParticipant)], e.sessionId));\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onTranslationReceived = (r, e) => {\n            try {\n                switch (e.command) {\n                    case Exports_js_1.ConversationTranslatorMessageTypes.final:\n                        if (!!this.privConversationTranslator) {\n                            this.privConversationTranslator.transcribed(this.privConversationTranslator, new Exports_js_3.ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\n                        }\n                        break;\n                    case Exports_js_1.ConversationTranslatorMessageTypes.partial:\n                        if (!!this.privConversationTranslator) {\n                            this.privConversationTranslator.transcribing(this.privConversationTranslator, new Exports_js_3.ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\n                        }\n                        break;\n                    case Exports_js_1.ConversationTranslatorMessageTypes.instantMessage:\n                        if (!!this.privConversationTranslator) {\n                            this.privConversationTranslator.textMessageReceived(this.privConversationTranslator, new Exports_js_3.ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\n                        }\n                        break;\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantsListReceived = (r, e) => {\n            try {\n                // check if the session token needs to be updated\n                if (e.sessionToken !== undefined && e.sessionToken !== null) {\n                    this.privRoom.token = e.sessionToken;\n                }\n                // save the participants\n                this.privParticipants.participants = [...e.participants];\n                // enable the conversation\n                if (this.privParticipants.me !== undefined) {\n                    this.privIsReady = true;\n                }\n                if (!!this.privConversationTranslator) {\n                    this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.JoinedConversation, this.toParticipants(true), e.sessionId));\n                }\n                // if this is the host, update the nickname if needed\n                if (this.me.isHost) {\n                    const nickname = this.privConversationTranslator?.properties.getProperty(Exports_js_3.PropertyId.ConversationTranslator_Name);\n                    if (nickname !== undefined && nickname.length > 0 && nickname !== this.me.displayName) {\n                        // issue a change nickname request\n                        this.changeNicknameAsync(nickname);\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onConversationExpiration = (r, e) => {\n            try {\n                if (!!this.privConversationTranslator) {\n                    this.privConversationTranslator.conversationExpiration(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.privIsConnected = false;\n        this.privIsDisposed = false;\n        this.privConversationId = \"\";\n        this.privProperties = new Exports_js_3.PropertyCollection();\n        this.privManager = new Exports_js_1.ConversationManager();\n        // check the speech language\n        const language = speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        if (!language) {\n            speechConfig.setProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage], Exports_js_1.ConversationConnectionConfig.defaultLanguageCode);\n        }\n        this.privLanguage = speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        this.privConversationId = id;\n        // save the speech config for future usage\n        this.privConfig = speechConfig;\n        // save the config properties\n        const configImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(configImpl, \"speechConfig\");\n        this.privProperties = configImpl.properties.clone();\n        this.privIsConnected = false;\n        this.privParticipants = new Exports_js_1.InternalParticipants();\n        this.privIsReady = false;\n        this.privTextMessageMaxLength = 1000;\n    }\n    // get the internal data about a conversation\n    get room() {\n        return this.privRoom;\n    }\n    // get the wrapper for connecting to the websockets\n    get connection() {\n        return this.privConversationRecognizer; // this.privConnection;\n    }\n    // get the config\n    get config() {\n        return this.privConfig;\n    }\n    // get the meeting Id\n    get meetingId() {\n        return this.privRoom ? this.privRoom.roomId : this.privConversationId;\n    }\n    // get the properties\n    get properties() {\n        return this.privProperties;\n    }\n    // get the speech language\n    get speechRecognitionLanguage() {\n        return this.privLanguage;\n    }\n    get isMutedByHost() {\n        return this.privParticipants.me?.isHost ? false : this.privParticipants.me?.isMuted;\n    }\n    get isConnected() {\n        return this.privIsConnected && this.privIsReady;\n    }\n    get participants() {\n        return this.toParticipants(true);\n    }\n    get me() {\n        return this.toParticipant(this.privParticipants.me);\n    }\n    get host() {\n        return this.toParticipant(this.privParticipants.host);\n    }\n    get transcriberRecognizer() {\n        return this.privTranscriberRecognizer;\n    }\n    get meetingInfo() {\n        const convId = this.meetingId;\n        const p = this.participants.map((part) => ({\n            id: part.id,\n            preferredLanguage: part.preferredLanguage,\n            voice: part.voice\n        }));\n        const props = {};\n        for (const key of Exports_js_1.ConversationConnectionConfig.transcriptionEventKeys) {\n            const val = this.properties.getProperty(key, \"\");\n            if (val !== \"\") {\n                props[key] = val;\n            }\n        }\n        const info = { id: convId, participants: p, meetingProperties: props };\n        return info;\n    }\n    get canSend() {\n        return this.privIsConnected && !this.privParticipants.me?.isMuted;\n    }\n    get canSendAsHost() {\n        return this.privIsConnected && this.privParticipants.me?.isHost;\n    }\n    // get / set the speech auth token\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    get authorizationToken() {\n        return this.privToken;\n    }\n    set authorizationToken(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"authorizationToken\");\n        this.privToken = value;\n    }\n    /**\n     * Create a new meeting as Host\n     * @param cb\n     * @param err\n     */\n    createMeetingAsync(cb, err) {\n        try {\n            if (!!this.privConversationRecognizer) {\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\n            }\n            this.privManager.createOrJoin(this.privProperties, undefined, ((room) => {\n                if (!room) {\n                    this.handleError(new Error(this.privErrors.permissionDeniedConnect), err);\n                }\n                this.privRoom = room;\n                this.handleCallback(cb, err);\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Starts a new meeting as host.\n     * @param cb\n     * @param err\n     */\n    startMeetingAsync(cb, err) {\n        try {\n            // check if there is already a recognizer\n            if (!!this.privConversationRecognizer) {\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\n            }\n            // check if there is conversation data available\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedConnect);\n            // connect to the conversation websocket\n            this.privParticipants.meId = this.privRoom.participantId;\n            // Because ConversationTranslator manually sets up and manages the connection, Conversation\n            // has to forward serviceRecognizer connection events that usually get passed automatically\n            this.privConversationRecognizer.connected = this.onConnected;\n            this.privConversationRecognizer.disconnected = this.onDisconnected;\n            this.privConversationRecognizer.canceled = this.onCanceled;\n            this.privConversationRecognizer.participantUpdateCommandReceived = this.onParticipantUpdateCommandReceived;\n            this.privConversationRecognizer.lockRoomCommandReceived = this.onLockRoomCommandReceived;\n            this.privConversationRecognizer.muteAllCommandReceived = this.onMuteAllCommandReceived;\n            this.privConversationRecognizer.participantJoinCommandReceived = this.onParticipantJoinCommandReceived;\n            this.privConversationRecognizer.participantLeaveCommandReceived = this.onParticipantLeaveCommandReceived;\n            this.privConversationRecognizer.translationReceived = this.onTranslationReceived;\n            this.privConversationRecognizer.participantsListReceived = this.onParticipantsListReceived;\n            this.privConversationRecognizer.conversationExpiration = this.onConversationExpiration;\n            this.privConversationRecognizer.connect(this.privRoom.token, (() => {\n                this.handleCallback(cb, err);\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Join a meeting as a participant.\n     * @param { IParticipant } participant - participant to add\n     * @param cb\n     * @param err\n     */\n    addParticipantAsync(participant, cb, err) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(participant, \"Participant\");\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.addParticipantImplAsync(participant), cb, err);\n    }\n    /**\n     * Join a meeting as a participant.\n     * @param meeting\n     * @param nickname\n     * @param lang\n     * @param cb\n     * @param err\n     */\n    joinMeetingAsync(meetingId, nickname, lang, cb, err) {\n        try {\n            // TODO\n            // if (!!this.privConversationRecognizer) {\n            //     throw new Error(this.privErrors.permissionDeniedStart);\n            // }\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(meetingId, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversationId\"));\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(lang, this.privErrors.invalidArgs.replace(\"{arg}\", \"language\"));\n            // join the conversation\n            this.privManager.createOrJoin(this.privProperties, meetingId, ((room) => {\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(room, this.privErrors.permissionDeniedConnect);\n                this.privRoom = room;\n                this.privConfig.authorizationToken = room.cognitiveSpeechAuthToken;\n                // join callback\n                if (!!cb) {\n                    cb(room.cognitiveSpeechAuthToken);\n                }\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Deletes a meeting\n     * @param cb\n     * @param err\n     */\n    deleteMeetingAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.deleteMeetingImplAsync(), cb, err);\n    }\n    async deleteMeetingImplAsync() {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privProperties, this.privErrors.permissionDeniedConnect);\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.token, this.privErrors.permissionDeniedConnect);\n        await this.privManager.leave(this.privProperties, this.privRoom.token);\n        this.dispose();\n    }\n    /**\n     * Issues a request to close the client websockets\n     * @param cb\n     * @param err\n     */\n    endMeetingAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.endMeetingImplAsync(), cb, err);\n    }\n    endMeetingImplAsync() {\n        return this.close(true);\n    }\n    /**\n     * Issues a request to lock the conversation\n     * @param cb\n     * @param err\n     */\n    lockMeetingAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"lock\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getLockCommand(true), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to mute the meeting\n     * @param cb\n     * @param err\n     */\n    muteAllParticipantsAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversationRecognizer, this.privErrors.permissionDeniedSend);\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            // check the user's permissions\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"mute\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteAllCommand(true), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to mute a participant in the meeting\n     * @param userId\n     * @param cb\n     * @param err\n     */\n    muteParticipantAsync(userId, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            // check the connection is open (host + participant can perform the mute command)\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            // if not host, check the participant is not muting another participant\n            if (!this.me.isHost && this.me.id !== userId) {\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\n            }\n            // check the user exists\n            const exists = this.privParticipants.getParticipantIndex(userId);\n            if (exists === -1) {\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteCommand(userId, true), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to remove a participant from the conversation\n     * @param userId\n     * @param cb\n     * @param err\n     */\n    removeParticipantAsync(userId, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            if (!!this.privTranscriberRecognizer && userId.hasOwnProperty(\"id\")) {\n                // Assume this is a transcription participant\n                (0, Exports_js_2.marshalPromiseToCallbacks)(this.removeParticipantImplAsync(userId), cb, err);\n            }\n            else {\n                Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n                if (!this.canSendAsHost) {\n                    this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"remove\")), err);\n                }\n                let participantId = \"\";\n                if (typeof userId === \"string\") {\n                    participantId = userId;\n                }\n                else if (userId.hasOwnProperty(\"id\")) {\n                    const participant = userId;\n                    participantId = participant.id;\n                }\n                else if (userId.hasOwnProperty(\"userId\")) {\n                    const user = userId;\n                    participantId = user.userId;\n                }\n                Contracts_js_1.Contracts.throwIfNullOrWhitespace(participantId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\n                // check the participant exists\n                const index = this.participants.findIndex((p) => p.id === participantId);\n                if (index === -1) {\n                    this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\n                }\n                if (!!this.privConversationRecognizer) {\n                    this.privConversationRecognizer.sendRequest(this.getEjectCommand(participantId), (() => {\n                        this.handleCallback(cb, err);\n                    }), ((error) => {\n                        this.handleError(error, err);\n                    }));\n                }\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to unlock the meeting\n     * @param cb\n     * @param err\n     */\n    unlockMeetingAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unlock\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getLockCommand(false), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to unmute all participants in the meeting\n     * @param cb\n     * @param err\n     */\n    unmuteAllParticipantsAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unmute all\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteAllCommand(false), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to unmute a participant in the meeting\n     * @param userId\n     * @param cb\n     * @param err\n     */\n    unmuteParticipantAsync(userId, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            // check the connection is open (host + participant can perform the mute command)\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            // if not host, check the participant is not muting another participant\n            if (!this.me.isHost && this.me.id !== userId) {\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\n            }\n            // check the user exists\n            const exists = this.privParticipants.getParticipantIndex(userId);\n            if (exists === -1) {\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteCommand(userId, false), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Send a text message\n     * @param message\n     * @param cb\n     * @param err\n     */\n    sendTextMessageAsync(message, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(message, this.privErrors.invalidArgs.replace(\"{arg}\", \"message\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            // TODO: is a max length check required?\n            if (message.length > this.privTextMessageMaxLength) {\n                this.handleError(new Error(this.privErrors.invalidArgs.replace(\"{arg}\", \"message length\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMessageCommand(message), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Set translated to languages\n     * @param {string[]} languages - languages to translate to\n     * @param cb\n     * @param err\n     */\n    setTranslatedLanguagesAsync(languages, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfArrayEmptyOrWhitespace(languages, this.privErrors.invalidArgs.replace(\"{arg}\", \"languages\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getSetTranslateToLanguagesCommand(languages), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Change nickname\n     * @param {string} nickname - new nickname for the room\n     * @param cb\n     * @param err\n     */\n    changeNicknameAsync(nickname, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getChangeNicknameCommand(nickname), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this.privIsDisposed = true;\n        if (!!this.config) {\n            this.config.close();\n        }\n        this.privConfig = undefined;\n        this.privLanguage = undefined;\n        this.privProperties = undefined;\n        this.privRoom = undefined;\n        this.privToken = undefined;\n        this.privManager = undefined;\n        this.privIsConnected = false;\n        this.privIsReady = false;\n        this.privParticipants = undefined;\n    }\n    async connectTranscriberRecognizer(recognizer) {\n        if (!!this.privTranscriberRecognizer) {\n            await this.privTranscriberRecognizer.close();\n        }\n        await recognizer.enforceAudioGating();\n        this.privTranscriberRecognizer = recognizer;\n        this.privTranscriberRecognizer.meeting = this;\n    }\n    getKeepAlive() {\n        const nickname = (!!this.me) ? this.me.displayName : \"default_nickname\";\n        return JSON.stringify({\n            id: \"0\",\n            nickname,\n            participantId: this.privRoom.participantId,\n            roomId: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.keepAlive\n        });\n    }\n    /* eslint-enable @typescript-eslint/typedef */\n    addParticipantImplAsync(participant) {\n        const newParticipant = this.privParticipants.addOrUpdateParticipant(participant);\n        if (newParticipant !== undefined) {\n            if (!!this.privTranscriberRecognizer) {\n                const meetingInfo = this.meetingInfo;\n                meetingInfo.participants = [participant];\n                return this.privTranscriberRecognizer.pushMeetingEvent(meetingInfo, \"join\");\n            }\n        }\n    }\n    removeParticipantImplAsync(participant) {\n        this.privParticipants.deleteParticipant(participant.id);\n        const meetingInfo = this.meetingInfo;\n        meetingInfo.participants = [participant];\n        return this.privTranscriberRecognizer.pushMeetingEvent(meetingInfo, \"leave\");\n    }\n    async close(dispose) {\n        try {\n            this.privIsConnected = false;\n            await this.privConversationRecognizer?.close();\n            this.privConversationRecognizer = undefined;\n            if (!!this.privConversationTranslator) {\n                this.privConversationTranslator.dispose();\n            }\n        }\n        catch (e) {\n            // ignore error\n            throw e;\n        }\n        if (dispose) {\n            this.dispose();\n        }\n    }\n    /** Helpers */\n    handleCallback(cb, err) {\n        if (!!cb) {\n            try {\n                cb();\n            }\n            catch (e) {\n                if (!!err) {\n                    err(e);\n                }\n            }\n            cb = undefined;\n        }\n    }\n    handleError(error, err) {\n        if (!!err) {\n            if (error instanceof Error) {\n                const typedError = error;\n                err(typedError.name + \": \" + typedError.message);\n            }\n            else {\n                err(error);\n            }\n        }\n    }\n    /** Participant Helpers */\n    toParticipants(includeHost) {\n        const participants = this.privParticipants.participants.map((p) => (this.toParticipant(p)));\n        if (!includeHost) {\n            return participants.filter((p) => p.isHost === false);\n        }\n        else {\n            return participants;\n        }\n    }\n    toParticipant(p) {\n        return new Exports_js_3.Participant(p.id, p.avatar, p.displayName, p.isHost, p.isMuted, p.isUsingTts, p.preferredLanguage, p.voice);\n    }\n    getMuteAllCommand(isMuted) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingd\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setMuteAll,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: isMuted\n        });\n    }\n    getMuteCommand(participantId, isMuted) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setMute,\n            // eslint-disable-next-line object-shorthand\n            participantId: participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: isMuted\n        });\n    }\n    getLockCommand(isLocked) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setLockState,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: isLocked\n        });\n    }\n    getEjectCommand(participantId) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.ejectParticipant,\n            // eslint-disable-next-line object-shorthand\n            participantId: participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n        });\n    }\n    getSetTranslateToLanguagesCommand(languages) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setTranslateToLanguages,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: languages\n        });\n    }\n    getChangeNicknameCommand(nickname) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, \"nickname\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.changeNickname,\n            nickname,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: nickname\n        });\n    }\n    getMessageCommand(message) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(message, \"message\");\n        return JSON.stringify({\n            participantId: this.privRoom.participantId,\n            roomId: this.privRoom.roomId,\n            text: message,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.instantMessage\n        });\n    }\n}\nexports.MeetingImpl = MeetingImpl;\n\n//# sourceMappingURL=Meeting.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MeetingTranscriptionCanceledEventArgs = void 0;\nconst CancellationEventArgsBase_js_1 = require(\"../CancellationEventArgsBase.js\");\nclass MeetingTranscriptionCanceledEventArgs extends CancellationEventArgsBase_js_1.CancellationEventArgsBase {\n}\nexports.MeetingTranscriptionCanceledEventArgs = MeetingTranscriptionCanceledEventArgs;\n\n//# sourceMappingURL=MeetingTranscriptionCanceledEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MeetingTranscriber = void 0;\nconst Exports_js_1 = require(\"../../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../../common/Exports.js\");\nconst Contracts_js_1 = require(\"../Contracts.js\");\nconst Exports_js_3 = require(\"../Exports.js\");\nconst Exports_js_4 = require(\"./Exports.js\");\nclass MeetingTranscriber {\n    /**\n     * MeetingTranscriber constructor.\n     * @constructor\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n    constructor(audioConfig) {\n        this.privAudioConfig = audioConfig;\n        this.privProperties = new Exports_js_3.PropertyCollection();\n        this.privRecognizer = undefined;\n        this.privDisposedRecognizer = false;\n    }\n    /**\n     * Gets the spoken language of recognition.\n     * @member MeetingTranscriber.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @returns {string} The spoken language of recognition.\n     */\n    get speechRecognitionLanguage() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    /**\n     * The collection of properties and their values defined for this MeetingTranscriber.\n     * @member MeetingTranscriber.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this MeetingTranscriber.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * @Internal\n     * Internal data member to support fromRecognizer* pattern methods on other classes.\n     * Do not use externally, object returned will change without warning or notice.\n     */\n    get internalData() {\n        return this.privRecognizer.internalData;\n    }\n    /**\n     * @Deprecated\n     * @Obsolete\n     * Please use the Connection.fromRecognizer pattern to obtain a connection object\n     */\n    get connection() {\n        return Exports_js_3.Connection.fromRecognizer(this.privRecognizer);\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member MeetingTranscriber.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member MeetingTranscriber.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * @param {Meeting} meeting - meeting to be recognized\n     */\n    joinMeetingAsync(meeting, cb, err) {\n        /* eslint-disable no-console */\n        // console.log(\">> MeetingTranscriber::joinMeetingAsync\");\n        /* eslint-enable no-console */\n        const meetingImpl = meeting;\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(Exports_js_4.MeetingImpl, \"Meeting\");\n        // ref the meeting object\n        // create recognizer and subscribe to recognizer events\n        this.privRecognizer = new Exports_js_1.TranscriberRecognizer(meeting.config, this.privAudioConfig);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRecognizer, \"Recognizer\");\n        this.privRecognizer.connectMeetingCallbacks(this);\n        (0, Exports_js_2.marshalPromiseToCallbacks)(meetingImpl.connectTranscriberRecognizer(this.privRecognizer), cb, err);\n    }\n    /**\n     * Starts meeting transcription, until stopTranscribingAsync() is called.\n     * User must subscribe to events to receive transcription results.\n     * @member MeetingTranscriber.prototype.startTranscribingAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the transcription has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startTranscribingAsync(cb, err) {\n        this.privRecognizer.startContinuousRecognitionAsync(cb, err);\n    }\n    /**\n     * Starts meeting transcription, until stopTranscribingAsync() is called.\n     * User must subscribe to events to receive transcription results.\n     * @member MeetingTranscriber.prototype.stopTranscribingAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the transcription has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopTranscribingAsync(cb, err) {\n        this.privRecognizer.stopContinuousRecognitionAsync(cb, err);\n    }\n    /**\n     * Leave the current meeting. After this is called, you will no longer receive any events.\n     */\n    leaveMeetingAsync(cb, err) {\n        this.privRecognizer.disconnectCallbacks();\n        // eslint-disable-next-line\n        (0, Exports_js_2.marshalPromiseToCallbacks)((async () => { return; })(), cb, err);\n    }\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member MeetingTranscriber.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, errorCb) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.dispose(true), cb, errorCb);\n    }\n    /**\n     * Disposes any resources held by the object.\n     * @member MeetingTranscriber.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - true if disposing the object.\n     */\n    async dispose(disposing) {\n        if (this.privDisposedRecognizer) {\n            return;\n        }\n        if (!!this.privRecognizer) {\n            await this.privRecognizer.close();\n            this.privRecognizer = undefined;\n        }\n        if (disposing) {\n            this.privDisposedRecognizer = true;\n        }\n    }\n}\nexports.MeetingTranscriber = MeetingTranscriber;\n\n//# sourceMappingURL=MeetingTranscriber.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranscriptionResult = void 0;\nconst Exports_js_1 = require(\"../Exports.js\");\n/**\n * Defines result of conversation transcription.\n * @class ConversationTranscriptionResult\n */\nclass ConversationTranscriptionResult extends Exports_js_1.RecognitionResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @public\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} text - The recognized text.\n     * @param {number} duration - The duration.\n     * @param {number} offset - The offset into the stream.\n     * @param {string} language - Primary Language detected, if provided.\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\n     * @param {string} speakerId - speaker id for conversation transcription.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {string} json - Additional Json, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    constructor(resultId, reason, text, duration, offset, language, languageDetectionConfidence, speakerId, errorDetails, json, properties) {\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties);\n        this.privSpeakerId = speakerId;\n    }\n    /**\n     * speaker id\n     * @member ConversationTranscriptionResult.prototype.speakerId\n     * @function\n     * @public\n     * @returns {string} id of speaker in given result\n     */\n    get speakerId() {\n        return this.privSpeakerId;\n    }\n}\nexports.ConversationTranscriptionResult = ConversationTranscriptionResult;\n\n//# sourceMappingURL=ConversationTranscriptionResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranscriptionResult = exports.MeetingTranscriber = exports.MeetingTranscriptionCanceledEventArgs = exports.MeetingImpl = exports.Meeting = exports.ParticipantChangedReason = exports.User = exports.Participant = exports.ConversationTranscriber = exports.ConversationTranslator = exports.ConversationTranslationResult = exports.ConversationTranslationEventArgs = exports.ConversationTranslationCanceledEventArgs = exports.ConversationParticipantsChangedEventArgs = exports.ConversationExpirationEventArgs = exports.ConversationCommon = exports.ConversationImpl = exports.Conversation = void 0;\nvar Conversation_js_1 = require(\"./Conversation.js\");\nObject.defineProperty(exports, \"Conversation\", { enumerable: true, get: function () { return Conversation_js_1.Conversation; } });\nObject.defineProperty(exports, \"ConversationImpl\", { enumerable: true, get: function () { return Conversation_js_1.ConversationImpl; } });\nvar ConversationCommon_js_1 = require(\"./ConversationCommon.js\");\nObject.defineProperty(exports, \"ConversationCommon\", { enumerable: true, get: function () { return ConversationCommon_js_1.ConversationCommon; } });\nvar ConversationExpirationEventArgs_js_1 = require(\"./ConversationExpirationEventArgs.js\");\nObject.defineProperty(exports, \"ConversationExpirationEventArgs\", { enumerable: true, get: function () { return ConversationExpirationEventArgs_js_1.ConversationExpirationEventArgs; } });\nvar ConversationParticipantsChangedEventArgs_js_1 = require(\"./ConversationParticipantsChangedEventArgs.js\");\nObject.defineProperty(exports, \"ConversationParticipantsChangedEventArgs\", { enumerable: true, get: function () { return ConversationParticipantsChangedEventArgs_js_1.ConversationParticipantsChangedEventArgs; } });\nvar ConversationTranslationCanceledEventArgs_js_1 = require(\"./ConversationTranslationCanceledEventArgs.js\");\nObject.defineProperty(exports, \"ConversationTranslationCanceledEventArgs\", { enumerable: true, get: function () { return ConversationTranslationCanceledEventArgs_js_1.ConversationTranslationCanceledEventArgs; } });\nvar ConversationTranslationEventArgs_js_1 = require(\"./ConversationTranslationEventArgs.js\");\nObject.defineProperty(exports, \"ConversationTranslationEventArgs\", { enumerable: true, get: function () { return ConversationTranslationEventArgs_js_1.ConversationTranslationEventArgs; } });\nvar ConversationTranslationResult_js_1 = require(\"./ConversationTranslationResult.js\");\nObject.defineProperty(exports, \"ConversationTranslationResult\", { enumerable: true, get: function () { return ConversationTranslationResult_js_1.ConversationTranslationResult; } });\nvar ConversationTranslator_js_1 = require(\"./ConversationTranslator.js\");\nObject.defineProperty(exports, \"ConversationTranslator\", { enumerable: true, get: function () { return ConversationTranslator_js_1.ConversationTranslator; } });\nvar ConversationTranscriber_js_1 = require(\"./ConversationTranscriber.js\");\nObject.defineProperty(exports, \"ConversationTranscriber\", { enumerable: true, get: function () { return ConversationTranscriber_js_1.ConversationTranscriber; } });\nvar IParticipant_js_1 = require(\"./IParticipant.js\");\nObject.defineProperty(exports, \"Participant\", { enumerable: true, get: function () { return IParticipant_js_1.Participant; } });\nObject.defineProperty(exports, \"User\", { enumerable: true, get: function () { return IParticipant_js_1.User; } });\nvar ParticipantChangedReason_js_1 = require(\"./ParticipantChangedReason.js\");\nObject.defineProperty(exports, \"ParticipantChangedReason\", { enumerable: true, get: function () { return ParticipantChangedReason_js_1.ParticipantChangedReason; } });\nvar Meeting_js_1 = require(\"./Meeting.js\");\nObject.defineProperty(exports, \"Meeting\", { enumerable: true, get: function () { return Meeting_js_1.Meeting; } });\nObject.defineProperty(exports, \"MeetingImpl\", { enumerable: true, get: function () { return Meeting_js_1.MeetingImpl; } });\nvar MeetingTranscriptionCanceledEventArgs_js_1 = require(\"./MeetingTranscriptionCanceledEventArgs.js\");\nObject.defineProperty(exports, \"MeetingTranscriptionCanceledEventArgs\", { enumerable: true, get: function () { return MeetingTranscriptionCanceledEventArgs_js_1.MeetingTranscriptionCanceledEventArgs; } });\nvar MeetingTranscriber_js_1 = require(\"./MeetingTranscriber.js\");\nObject.defineProperty(exports, \"MeetingTranscriber\", { enumerable: true, get: function () { return MeetingTranscriber_js_1.MeetingTranscriber; } });\nvar ConversationTranscriptionResult_js_1 = require(\"./ConversationTranscriptionResult.js\");\nObject.defineProperty(exports, \"ConversationTranscriptionResult\", { enumerable: true, get: function () { return ConversationTranscriptionResult_js_1.ConversationTranscriptionResult; } });\n\n//# sourceMappingURL=Exports.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SynthesisRequest = exports.Synthesizer = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\nclass Synthesizer {\n    /**\n     * Creates and initializes an instance of a Recognizer\n     * @constructor\n     * @param {SpeechConfig} speechConfig - The speech config to initialize the synthesizer.\n     */\n    constructor(speechConfig) {\n        const speechConfigImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\n        this.privProperties = speechConfigImpl.properties.clone();\n        this.privDisposed = false;\n        this.privSynthesizing = false;\n        this.synthesisRequestQueue = new Exports_js_2.Queue();\n        this.tokenCredential = speechConfig.tokenCredential;\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member Synthesizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member Synthesizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * The collection of properties and their values defined for this Synthesizer.\n     * @member Synthesizer.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechSynthesizer.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Indicates if auto detect source language is enabled\n     * @member Synthesizer.prototype.autoDetectSourceLanguage\n     * @function\n     * @public\n     * @returns {boolean} if auto detect source language is enabled\n     */\n    get autoDetectSourceLanguage() {\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages) === Exports_js_1.AutoDetectSourceLanguagesOpenRangeOptionName;\n    }\n    buildSsml(text) {\n        const languageToDefaultVoice = {\n            [\"af-ZA\"]: \"af-ZA-AdriNeural\",\n            [\"am-ET\"]: \"am-ET-AmehaNeural\",\n            [\"ar-AE\"]: \"ar-AE-FatimaNeural\",\n            [\"ar-BH\"]: \"ar-BH-AliNeural\",\n            [\"ar-DZ\"]: \"ar-DZ-AminaNeural\",\n            [\"ar-EG\"]: \"ar-EG-SalmaNeural\",\n            [\"ar-IQ\"]: \"ar-IQ-BasselNeural\",\n            [\"ar-JO\"]: \"ar-JO-SanaNeural\",\n            [\"ar-KW\"]: \"ar-KW-FahedNeural\",\n            [\"ar-LY\"]: \"ar-LY-ImanNeural\",\n            [\"ar-MA\"]: \"ar-MA-JamalNeural\",\n            [\"ar-QA\"]: \"ar-QA-AmalNeural\",\n            [\"ar-SA\"]: \"ar-SA-HamedNeural\",\n            [\"ar-SY\"]: \"ar-SY-AmanyNeural\",\n            [\"ar-TN\"]: \"ar-TN-HediNeural\",\n            [\"ar-YE\"]: \"ar-YE-MaryamNeural\",\n            [\"bg-BG\"]: \"bg-BG-BorislavNeural\",\n            [\"bn-BD\"]: \"bn-BD-NabanitaNeural\",\n            [\"bn-IN\"]: \"bn-IN-BashkarNeural\",\n            [\"ca-ES\"]: \"ca-ES-JoanaNeural\",\n            [\"cs-CZ\"]: \"cs-CZ-AntoninNeural\",\n            [\"cy-GB\"]: \"cy-GB-AledNeural\",\n            [\"da-DK\"]: \"da-DK-ChristelNeural\",\n            [\"de-AT\"]: \"de-AT-IngridNeural\",\n            [\"de-CH\"]: \"de-CH-JanNeural\",\n            [\"de-DE\"]: \"de-DE-KatjaNeural\",\n            [\"el-GR\"]: \"el-GR-AthinaNeural\",\n            [\"en-AU\"]: \"en-AU-NatashaNeural\",\n            [\"en-CA\"]: \"en-CA-ClaraNeural\",\n            [\"en-GB\"]: \"en-GB-LibbyNeural\",\n            [\"en-HK\"]: \"en-HK-SamNeural\",\n            [\"en-IE\"]: \"en-IE-ConnorNeural\",\n            [\"en-IN\"]: \"en-IN-NeerjaNeural\",\n            [\"en-KE\"]: \"en-KE-AsiliaNeural\",\n            [\"en-NG\"]: \"en-NG-AbeoNeural\",\n            [\"en-NZ\"]: \"en-NZ-MitchellNeural\",\n            [\"en-PH\"]: \"en-PH-JamesNeural\",\n            [\"en-SG\"]: \"en-SG-LunaNeural\",\n            [\"en-TZ\"]: \"en-TZ-ElimuNeural\",\n            [\"en-US\"]: \"en-US-AvaMultilingualNeural\",\n            [\"en-ZA\"]: \"en-ZA-LeahNeural\",\n            [\"es-AR\"]: \"es-AR-ElenaNeural\",\n            [\"es-BO\"]: \"es-BO-MarceloNeural\",\n            [\"es-CL\"]: \"es-CL-CatalinaNeural\",\n            [\"es-CO\"]: \"es-CO-GonzaloNeural\",\n            [\"es-CR\"]: \"es-CR-JuanNeural\",\n            [\"es-CU\"]: \"es-CU-BelkysNeural\",\n            [\"es-DO\"]: \"es-DO-EmilioNeural\",\n            [\"es-EC\"]: \"es-EC-AndreaNeural\",\n            [\"es-ES\"]: \"es-ES-AlvaroNeural\",\n            [\"es-GQ\"]: \"es-GQ-JavierNeural\",\n            [\"es-GT\"]: \"es-GT-AndresNeural\",\n            [\"es-HN\"]: \"es-HN-CarlosNeural\",\n            [\"es-MX\"]: \"es-MX-DaliaNeural\",\n            [\"es-NI\"]: \"es-NI-FedericoNeural\",\n            [\"es-PA\"]: \"es-PA-MargaritaNeural\",\n            [\"es-PE\"]: \"es-PE-AlexNeural\",\n            [\"es-PR\"]: \"es-PR-KarinaNeural\",\n            [\"es-PY\"]: \"es-PY-MarioNeural\",\n            [\"es-SV\"]: \"es-SV-LorenaNeural\",\n            [\"es-US\"]: \"es-US-AlonsoNeural\",\n            [\"es-UY\"]: \"es-UY-MateoNeural\",\n            [\"es-VE\"]: \"es-VE-PaolaNeural\",\n            [\"et-EE\"]: \"et-EE-AnuNeural\",\n            [\"fa-IR\"]: \"fa-IR-DilaraNeural\",\n            [\"fi-FI\"]: \"fi-FI-SelmaNeural\",\n            [\"fil-PH\"]: \"fil-PH-AngeloNeural\",\n            [\"fr-BE\"]: \"fr-BE-CharlineNeural\",\n            [\"fr-CA\"]: \"fr-CA-SylvieNeural\",\n            [\"fr-CH\"]: \"fr-CH-ArianeNeural\",\n            [\"fr-FR\"]: \"fr-FR-DeniseNeural\",\n            [\"ga-IE\"]: \"ga-IE-ColmNeural\",\n            [\"gl-ES\"]: \"gl-ES-RoiNeural\",\n            [\"gu-IN\"]: \"gu-IN-DhwaniNeural\",\n            [\"he-IL\"]: \"he-IL-AvriNeural\",\n            [\"hi-IN\"]: \"hi-IN-MadhurNeural\",\n            [\"hr-HR\"]: \"hr-HR-GabrijelaNeural\",\n            [\"hu-HU\"]: \"hu-HU-NoemiNeural\",\n            [\"id-ID\"]: \"id-ID-ArdiNeural\",\n            [\"is-IS\"]: \"is-IS-GudrunNeural\",\n            [\"it-IT\"]: \"it-IT-IsabellaNeural\",\n            [\"ja-JP\"]: \"ja-JP-NanamiNeural\",\n            [\"jv-ID\"]: \"jv-ID-DimasNeural\",\n            [\"kk-KZ\"]: \"kk-KZ-AigulNeural\",\n            [\"km-KH\"]: \"km-KH-PisethNeural\",\n            [\"kn-IN\"]: \"kn-IN-GaganNeural\",\n            [\"ko-KR\"]: \"ko-KR-SunHiNeural\",\n            [\"lo-LA\"]: \"lo-LA-ChanthavongNeural\",\n            [\"lt-LT\"]: \"lt-LT-LeonasNeural\",\n            [\"lv-LV\"]: \"lv-LV-EveritaNeural\",\n            [\"mk-MK\"]: \"mk-MK-AleksandarNeural\",\n            [\"ml-IN\"]: \"ml-IN-MidhunNeural\",\n            [\"mr-IN\"]: \"mr-IN-AarohiNeural\",\n            [\"ms-MY\"]: \"ms-MY-OsmanNeural\",\n            [\"mt-MT\"]: \"mt-MT-GraceNeural\",\n            [\"my-MM\"]: \"my-MM-NilarNeural\",\n            [\"nb-NO\"]: \"nb-NO-PernilleNeural\",\n            [\"nl-BE\"]: \"nl-BE-ArnaudNeural\",\n            [\"nl-NL\"]: \"nl-NL-ColetteNeural\",\n            [\"pl-PL\"]: \"pl-PL-AgnieszkaNeural\",\n            [\"ps-AF\"]: \"ps-AF-GulNawazNeural\",\n            [\"pt-BR\"]: \"pt-BR-FranciscaNeural\",\n            [\"pt-PT\"]: \"pt-PT-DuarteNeural\",\n            [\"ro-RO\"]: \"ro-RO-AlinaNeural\",\n            [\"ru-RU\"]: \"ru-RU-SvetlanaNeural\",\n            [\"si-LK\"]: \"si-LK-SameeraNeural\",\n            [\"sk-SK\"]: \"sk-SK-LukasNeural\",\n            [\"sl-SI\"]: \"sl-SI-PetraNeural\",\n            [\"so-SO\"]: \"so-SO-MuuseNeural\",\n            [\"sr-RS\"]: \"sr-RS-NicholasNeural\",\n            [\"su-ID\"]: \"su-ID-JajangNeural\",\n            [\"sv-SE\"]: \"sv-SE-SofieNeural\",\n            [\"sw-KE\"]: \"sw-KE-RafikiNeural\",\n            [\"sw-TZ\"]: \"sw-TZ-DaudiNeural\",\n            [\"ta-IN\"]: \"ta-IN-PallaviNeural\",\n            [\"ta-LK\"]: \"ta-LK-KumarNeural\",\n            [\"ta-SG\"]: \"ta-SG-AnbuNeural\",\n            [\"te-IN\"]: \"te-IN-MohanNeural\",\n            [\"th-TH\"]: \"th-TH-PremwadeeNeural\",\n            [\"tr-TR\"]: \"tr-TR-AhmetNeural\",\n            [\"uk-UA\"]: \"uk-UA-OstapNeural\",\n            [\"ur-IN\"]: \"ur-IN-GulNeural\",\n            [\"ur-PK\"]: \"ur-PK-AsadNeural\",\n            [\"uz-UZ\"]: \"uz-UZ-MadinaNeural\",\n            [\"vi-VN\"]: \"vi-VN-HoaiMyNeural\",\n            [\"zh-CN\"]: \"zh-CN-XiaoxiaoNeural\",\n            [\"zh-HK\"]: \"zh-HK-HiuMaanNeural\",\n            [\"zh-TW\"]: \"zh-TW-HsiaoChenNeural\",\n            [\"zu-ZA\"]: \"zu-ZA-ThandoNeural\",\n        };\n        let language = this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_SynthLanguage, \"en-US\");\n        let voice = this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_SynthVoice, \"\");\n        let ssml = Synthesizer.XMLEncode(text);\n        if (this.autoDetectSourceLanguage) {\n            language = \"en-US\";\n        }\n        else {\n            voice = voice || languageToDefaultVoice[language];\n        }\n        if (voice) {\n            ssml = `<voice name='${voice}'>${ssml}</voice>`;\n        }\n        ssml = `<speak version='1.0' xmlns='http://www.w3.org/2001/10/synthesis' xmlns:mstts='http://www.w3.org/2001/mstts' xmlns:emo='http://www.w3.org/2009/10/emotionml' xml:lang='${language}'>${ssml}</speak>`;\n        return ssml;\n    }\n    /**\n     * This method performs cleanup of resources.\n     * The Boolean parameter disposing indicates whether the method is called\n     * from Dispose (if disposing is true) or from the finalizer (if disposing is false).\n     * Derived classes should override this method to dispose resource if needed.\n     * @member Synthesizer.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - Flag to request disposal.\n     */\n    async dispose(disposing) {\n        if (this.privDisposed) {\n            return;\n        }\n        if (disposing) {\n            if (this.privAdapter) {\n                await this.privAdapter.dispose();\n            }\n        }\n        this.privDisposed = true;\n    }\n    async adapterSpeak() {\n        if (!this.privDisposed && !this.privSynthesizing) {\n            this.privSynthesizing = true;\n            const request = await this.synthesisRequestQueue.dequeue();\n            return this.privAdapter.Speak(request.text, request.isSSML, request.requestId, request.cb, request.err, request.dataStream);\n        }\n    }\n    createSynthesizerConfig(speechConfig) {\n        return new Exports_js_1.SynthesizerConfig(speechConfig, this.privProperties);\n    }\n    // Does the generic synthesizer setup that is common across all synthesizer types.\n    implCommonSynthesizeSetup() {\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\n        let osName = \"unknown\";\n        let osVersion = \"unknown\";\n        if (typeof navigator !== \"undefined\") {\n            osPlatform = osPlatform + \"/\" + navigator.platform;\n            osName = navigator.userAgent;\n            osVersion = navigator.appVersion;\n        }\n        const synthesizerConfig = this.createSynthesizerConfig(new Exports_js_1.SpeechServiceConfig(new Exports_js_1.Context(new Exports_js_1.OS(osPlatform, osName, osVersion))));\n        const subscriptionKey = this.privProperties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Key, undefined);\n        const authentication = (subscriptionKey && subscriptionKey !== \"\")\n            ? new Exports_js_1.CognitiveSubscriptionKeyAuthentication(subscriptionKey)\n            : (this.tokenCredential)\n                ? new Exports_js_1.CognitiveTokenAuthentication(async () => {\n                    try {\n                        const tokenResponse = await this.tokenCredential.getToken(\"https://cognitiveservices.azure.com/.default\");\n                        return tokenResponse?.token ?? \"\";\n                    }\n                    catch (err) {\n                        throw err;\n                    }\n                }, async () => {\n                    try {\n                        const tokenResponse = await this.tokenCredential.getToken(\"https://cognitiveservices.azure.com/.default\");\n                        return tokenResponse?.token ?? \"\";\n                    }\n                    catch (err) {\n                        throw err;\n                    }\n                })\n                : new Exports_js_1.CognitiveTokenAuthentication(() => {\n                    const authorizationToken = this.privProperties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, undefined);\n                    return Promise.resolve(authorizationToken);\n                }, () => {\n                    const authorizationToken = this.privProperties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, undefined);\n                    return Promise.resolve(authorizationToken);\n                });\n        this.privAdapter = this.createSynthesisAdapter(authentication, this.privConnectionFactory, synthesizerConfig);\n        this.privRestAdapter = this.createRestSynthesisAdapter(authentication, synthesizerConfig);\n    }\n    static XMLEncode(text) {\n        return text.replace(/&/g, \"&amp;\")\n            .replace(/</g, \"&lt;\")\n            .replace(/>/g, \"&gt;\")\n            .replace(/\"/g, \"&quot;\")\n            .replace(/'/g, \"&apos;\");\n    }\n}\nexports.Synthesizer = Synthesizer;\nclass SynthesisRequest {\n    constructor(requestId, text, isSSML, cb, err, dataStream) {\n        this.requestId = requestId;\n        this.text = text;\n        this.isSSML = isSSML;\n        this.cb = cb;\n        this.err = err;\n        this.dataStream = dataStream;\n    }\n}\nexports.SynthesisRequest = SynthesisRequest;\n\n//# sourceMappingURL=Synthesizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechSynthesizer = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst AudioFileWriter_js_1 = require(\"./Audio/AudioFileWriter.js\");\nconst AudioOutputFormat_js_1 = require(\"./Audio/AudioOutputFormat.js\");\nconst AudioOutputStream_js_1 = require(\"./Audio/AudioOutputStream.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\nconst Synthesizer_js_1 = require(\"./Synthesizer.js\");\n/**\n * Defines the class SpeechSynthesizer for text to speech.\n * Updated in version 1.16.0\n * @class SpeechSynthesizer\n */\nclass SpeechSynthesizer extends Exports_js_3.Synthesizer {\n    /**\n     * SpeechSynthesizer constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - An set of initial properties for this synthesizer.\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the synthesizer.\n     */\n    constructor(speechConfig, audioConfig) {\n        super(speechConfig);\n        if (audioConfig !== null) {\n            if (audioConfig === undefined) {\n                this.audioConfig = (typeof window === \"undefined\") ? undefined : Exports_js_3.AudioConfig.fromDefaultSpeakerOutput();\n            }\n            else {\n                this.audioConfig = audioConfig;\n            }\n        }\n        this.privConnectionFactory = new Exports_js_1.SpeechSynthesisConnectionFactory();\n        this.implCommonSynthesizeSetup();\n    }\n    /**\n     * SpeechSynthesizer constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this synthesizer\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the synthesizer\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the synthesizer\n     */\n    static FromConfig(speechConfig, autoDetectSourceLanguageConfig, audioConfig) {\n        const speechConfigImpl = speechConfig;\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechConfigImpl.properties);\n        return new SpeechSynthesizer(speechConfig, audioConfig);\n    }\n    /**\n     * Executes speech synthesis on plain text.\n     * The task returns the synthesis result.\n     * @member SpeechSynthesizer.prototype.speakTextAsync\n     * @function\n     * @public\n     * @param text - Text to be synthesized.\n     * @param cb - Callback that received the SpeechSynthesisResult.\n     * @param err - Callback invoked in case of an error.\n     * @param stream - AudioOutputStream to receive the synthesized audio.\n     */\n    speakTextAsync(text, cb, err, stream) {\n        this.speakImpl(text, false, cb, err, stream);\n    }\n    /**\n     * Executes speech synthesis on SSML.\n     * The task returns the synthesis result.\n     * @member SpeechSynthesizer.prototype.speakSsmlAsync\n     * @function\n     * @public\n     * @param ssml - SSML to be synthesized.\n     * @param cb - Callback that received the SpeechSynthesisResult.\n     * @param err - Callback invoked in case of an error.\n     * @param stream - AudioOutputStream to receive the synthesized audio.\n     */\n    speakSsmlAsync(ssml, cb, err, stream) {\n        this.speakImpl(ssml, true, cb, err, stream);\n    }\n    /**\n     * Get list of synthesis voices available.\n     * The task returns the synthesis voice result.\n     * @member SpeechSynthesizer.prototype.getVoicesAsync\n     * @function\n     * @async\n     * @public\n     * @param locale - Locale of voices in BCP-47 format; if left empty, get all available voices.\n     * @return {Promise<SynthesisVoicesResult>} - Promise of a SynthesisVoicesResult.\n     */\n    async getVoicesAsync(locale = \"\") {\n        return this.getVoices(locale);\n    }\n    /**\n     * Dispose of associated resources.\n     * @member SpeechSynthesizer.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, err) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposed);\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.dispose(true), cb, err);\n    }\n    /**\n     * @Internal\n     * Do not use externally, object returned will change without warning or notice.\n     */\n    get internalData() {\n        return this.privAdapter;\n    }\n    //\n    // ################################################################################################################\n    // IMPLEMENTATION.\n    // ################################################################################################################\n    //\n    // Creates the synthesis adapter\n    createSynthesisAdapter(authentication, connectionFactory, synthesizerConfig) {\n        return new Exports_js_1.SpeechSynthesisAdapter(authentication, connectionFactory, synthesizerConfig, this, this.audioConfig);\n    }\n    createRestSynthesisAdapter(authentication, synthesizerConfig) {\n        return new Exports_js_1.SynthesisRestAdapter(synthesizerConfig, authentication);\n    }\n    implCommonSynthesizeSetup() {\n        super.implCommonSynthesizeSetup();\n        this.privAdapter.audioOutputFormat = AudioOutputFormat_js_1.AudioOutputFormatImpl.fromSpeechSynthesisOutputFormat(Exports_js_3.SpeechSynthesisOutputFormat[this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)]);\n    }\n    speakImpl(text, IsSsml, cb, err, dataStream) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privDisposed);\n            const requestId = (0, Exports_js_2.createNoDashGuid)();\n            let audioDestination;\n            if (dataStream instanceof Exports_js_3.PushAudioOutputStreamCallback) {\n                audioDestination = new AudioOutputStream_js_1.PushAudioOutputStreamImpl(dataStream);\n            }\n            else if (dataStream instanceof Exports_js_3.PullAudioOutputStream) {\n                audioDestination = dataStream;\n            }\n            else if (dataStream !== undefined) {\n                audioDestination = new AudioFileWriter_js_1.AudioFileWriter(dataStream);\n            }\n            else {\n                audioDestination = undefined;\n            }\n            this.synthesisRequestQueue.enqueue(new Synthesizer_js_1.SynthesisRequest(requestId, text, IsSsml, (e) => {\n                this.privSynthesizing = false;\n                if (!!cb) {\n                    try {\n                        cb(e);\n                    }\n                    catch (e) {\n                        if (!!err) {\n                            err(e);\n                        }\n                    }\n                }\n                cb = undefined;\n                /* eslint-disable no-empty */\n                this.adapterSpeak().catch(() => { });\n            }, (e) => {\n                if (!!err) {\n                    err(e);\n                }\n            }, audioDestination));\n            /* eslint-disable no-empty-function */\n            this.adapterSpeak().catch(() => { });\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n            // Destroy the synthesizer.\n            /* eslint-disable no-empty */\n            this.dispose(true).catch(() => { });\n        }\n    }\n    async getVoices(locale) {\n        const requestId = (0, Exports_js_2.createNoDashGuid)();\n        const response = await this.privRestAdapter.getVoicesList(requestId);\n        if (response.ok && Array.isArray(response.json)) {\n            let json = response.json;\n            if (!!locale && locale.length > 0) {\n                json = json.filter((item) => !!item.Locale && item.Locale.toLowerCase() === locale.toLowerCase());\n            }\n            return new Exports_js_3.SynthesisVoicesResult(requestId, json, undefined);\n        }\n        else {\n            return new Exports_js_3.SynthesisVoicesResult(requestId, undefined, `Error: ${response.status}: ${response.statusText}`);\n        }\n    }\n}\nexports.SpeechSynthesizer = SpeechSynthesizer;\n\n//# sourceMappingURL=SpeechSynthesizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SynthesisResult = void 0;\n/**\n * Base class for synthesis results\n * @class SynthesisResult\n * Added in version 1.20.0\n */\nclass SynthesisResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    constructor(resultId, reason, errorDetails, properties) {\n        this.privResultId = resultId;\n        this.privReason = reason;\n        this.privErrorDetails = errorDetails;\n        this.privProperties = properties;\n    }\n    /**\n     * Specifies the result identifier.\n     * @member SynthesisResult.prototype.resultId\n     * @function\n     * @public\n     * @returns {string} Specifies the result identifier.\n     */\n    get resultId() {\n        return this.privResultId;\n    }\n    /**\n     * Specifies status of the result.\n     * @member SynthesisResult.prototype.reason\n     * @function\n     * @public\n     * @returns {ResultReason} Specifies status of the result.\n     */\n    get reason() {\n        return this.privReason;\n    }\n    /**\n     * In case of an unsuccessful synthesis, provides details of the occurred error.\n     * @member SynthesisResult.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} a brief description of an error.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n    /**\n     * The set of properties exposed in the result.\n     * @member SynthesisResult.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The set of properties exposed in the result.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n}\nexports.SynthesisResult = SynthesisResult;\n\n//# sourceMappingURL=SynthesisResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechSynthesisResult = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines result of speech synthesis.\n * @class SpeechSynthesisResult\n * Added in version 1.11.0\n */\nclass SpeechSynthesisResult extends Exports_js_1.SynthesisResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {ArrayBuffer} audioData - The synthesized audio binary.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     * @param {number} audioDuration - The audio duration.\n     */\n    constructor(resultId, reason, audioData, errorDetails, properties, audioDuration) {\n        super(resultId, reason, errorDetails, properties);\n        this.privAudioData = audioData;\n        this.privAudioDuration = audioDuration;\n    }\n    /**\n     * The synthesized audio data\n     * @member SpeechSynthesisResult.prototype.audioData\n     * @function\n     * @public\n     * @returns {ArrayBuffer} The synthesized audio data.\n     */\n    get audioData() {\n        return this.privAudioData;\n    }\n    /**\n     * The time duration of synthesized audio, in ticks (100 nanoseconds).\n     * @member SpeechSynthesisResult.prototype.audioDuration\n     * @function\n     * @public\n     * @returns {number} The time duration of synthesized audio.\n     */\n    get audioDuration() {\n        return this.privAudioDuration;\n    }\n}\nexports.SpeechSynthesisResult = SpeechSynthesisResult;\n\n//# sourceMappingURL=SpeechSynthesisResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechSynthesisEventArgs = void 0;\n/**\n * Defines contents of speech synthesis events.\n * @class SpeechSynthesisEventArgs\n * Added in version 1.11.0\n */\nclass SpeechSynthesisEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {SpeechSynthesisResult} result - The speech synthesis result.\n     */\n    constructor(result) {\n        this.privResult = result;\n    }\n    /**\n     * Specifies the synthesis result.\n     * @member SpeechSynthesisEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {SpeechSynthesisResult} the synthesis result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\nexports.SpeechSynthesisEventArgs = SpeechSynthesisEventArgs;\n\n//# sourceMappingURL=SpeechSynthesisEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechSynthesisWordBoundaryEventArgs = void 0;\n/**\n * Defines contents of speech synthesis word boundary event.\n * @class SpeechSynthesisWordBoundaryEventArgs\n * Added in version 1.11.0\n */\nclass SpeechSynthesisWordBoundaryEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {number} audioOffset - The audio offset.\n     * @param {number} duration - The audio duration.\n     * @param {string} text - The text.\n     * @param {number} wordLength - The length of the word.\n     * @param {number} textOffset - The text offset.\n     * @param {SpeechSynthesisBoundaryType} boundaryType - The boundary type\n     */\n    constructor(audioOffset, duration, text, wordLength, textOffset, boundaryType) {\n        this.privAudioOffset = audioOffset;\n        this.privDuration = duration;\n        this.privText = text;\n        this.privWordLength = wordLength;\n        this.privTextOffset = textOffset;\n        this.privBoundaryType = boundaryType;\n    }\n    /**\n     * Specifies the audio offset.\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.audioOffset\n     * @function\n     * @public\n     * @returns {number} the audio offset.\n     */\n    get audioOffset() {\n        return this.privAudioOffset;\n    }\n    /**\n     * Specifies the duration, in ticks (100 nanoseconds).\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.duration\n     * @function\n     * @public\n     * @returns {number} Duration in 100 nanosecond increments.\n     */\n    get duration() {\n        return this.privDuration;\n    }\n    /**\n     * Specifies the text of the word boundary event.\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.text\n     * @function\n     * @public\n     * @returns {string} the text.\n     */\n    get text() {\n        return this.privText;\n    }\n    /**\n     * Specifies the word length\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.wordLength\n     * @function\n     * @public\n     * @returns {number} the word length\n     */\n    get wordLength() {\n        return this.privWordLength;\n    }\n    /**\n     * Specifies the text offset.\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.textOffset\n     * @function\n     * @public\n     * @returns {number} the text offset.\n     */\n    get textOffset() {\n        return this.privTextOffset;\n    }\n    /**\n     * Specifies the boundary type.\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.boundaryType\n     * @function\n     * @public\n     * @returns {SpeechSynthesisBoundaryType} the boundary type.\n     */\n    get boundaryType() {\n        return this.privBoundaryType;\n    }\n}\nexports.SpeechSynthesisWordBoundaryEventArgs = SpeechSynthesisWordBoundaryEventArgs;\n\n//# sourceMappingURL=SpeechSynthesisWordBoundaryEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechSynthesisBookmarkEventArgs = void 0;\n/**\n * Defines contents of speech synthesis bookmark event.\n * @class SpeechSynthesisBookmarkEventArgs\n * Added in version 1.16.0\n */\nclass SpeechSynthesisBookmarkEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {number} audioOffset - The audio offset.\n     * @param {string} text - The bookmark text.\n     */\n    constructor(audioOffset, text) {\n        this.privAudioOffset = audioOffset;\n        this.privText = text;\n    }\n    /**\n     * Specifies the audio offset.\n     * @member SpeechSynthesisBookmarkEventArgs.prototype.audioOffset\n     * @function\n     * @public\n     * @returns {number} the audio offset.\n     */\n    get audioOffset() {\n        return this.privAudioOffset;\n    }\n    /**\n     * Specifies the bookmark.\n     * @member SpeechSynthesisBookmarkEventArgs.prototype.text\n     * @function\n     * @public\n     * @returns {string} the bookmark text.\n     */\n    get text() {\n        return this.privText;\n    }\n}\nexports.SpeechSynthesisBookmarkEventArgs = SpeechSynthesisBookmarkEventArgs;\n\n//# sourceMappingURL=SpeechSynthesisBookmarkEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechSynthesisVisemeEventArgs = void 0;\n/**\n * Defines contents of speech synthesis viseme event.\n * @class SpeechSynthesisVisemeEventArgs\n * Added in version 1.16.0\n */\nclass SpeechSynthesisVisemeEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {number} audioOffset - The audio offset.\n     * @param {number} visemeId - The viseme ID.\n     * @param {string} animation - The animation, could be in svg or other format.\n     */\n    constructor(audioOffset, visemeId, animation) {\n        this.privAudioOffset = audioOffset;\n        this.privVisemeId = visemeId;\n        this.privAnimation = animation;\n    }\n    /**\n     * Specifies the audio offset.\n     * @member SpeechSynthesisVisemeEventArgs.prototype.audioOffset\n     * @function\n     * @public\n     * @returns {number} the audio offset.\n     */\n    get audioOffset() {\n        return this.privAudioOffset;\n    }\n    /**\n     * Specifies the viseme ID.\n     * @member SpeechSynthesisVisemeEventArgs.prototype.visemeId\n     * @function\n     * @public\n     * @returns {number} the viseme ID.\n     */\n    get visemeId() {\n        return this.privVisemeId;\n    }\n    /**\n     * Specifies the animation.\n     * @member SpeechSynthesisVisemeEventArgs.prototype.animation\n     * @function\n     * @public\n     * @returns {string} the animation, could be in svg or other format.\n     */\n    get animation() {\n        return this.privAnimation;\n    }\n}\nexports.SpeechSynthesisVisemeEventArgs = SpeechSynthesisVisemeEventArgs;\n\n//# sourceMappingURL=SpeechSynthesisVisemeEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechSynthesisBoundaryType = void 0;\n/**\n * Defines the boundary type of speech synthesis boundary event.\n * @class SpeechSynthesisBoundaryType\n * Added in version 1.21.0\n */\nvar SpeechSynthesisBoundaryType;\n(function (SpeechSynthesisBoundaryType) {\n    /**\n     * Indicates the boundary text is a word.\n     * @member SpeechSynthesisBoundaryType.Word\n     */\n    SpeechSynthesisBoundaryType[\"Word\"] = \"WordBoundary\";\n    /**\n     * Indicates the boundary text is a punctuation.\n     * @member SpeechSynthesisBoundaryType.Punctuation\n     */\n    SpeechSynthesisBoundaryType[\"Punctuation\"] = \"PunctuationBoundary\";\n    /**\n     * Indicates the boundary text is a sentence.\n     * @member SpeechSynthesisBoundaryType.Sentence\n     */\n    SpeechSynthesisBoundaryType[\"Sentence\"] = \"SentenceBoundary\";\n})(SpeechSynthesisBoundaryType = exports.SpeechSynthesisBoundaryType || (exports.SpeechSynthesisBoundaryType = {}));\n\n//# sourceMappingURL=SpeechSynthesisBoundaryType.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SynthesisVoicesResult = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines result of speech synthesis.\n * @class SynthesisVoicesResult\n * Added in version 1.20.0\n */\nclass SynthesisVoicesResult extends Exports_js_1.SynthesisResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param requestId - result id for request.\n     * @param json - json payload from endpoint.\n     */\n    constructor(requestId, json, errorDetails) {\n        if (Array.isArray(json)) {\n            super(requestId, Exports_js_1.ResultReason.VoicesListRetrieved, undefined, new Exports_js_1.PropertyCollection());\n            this.privVoices = [];\n            for (const item of json) {\n                this.privVoices.push(new Exports_js_1.VoiceInfo(item));\n            }\n        }\n        else {\n            super(requestId, Exports_js_1.ResultReason.Canceled, errorDetails ? errorDetails : \"Error information unavailable\", new Exports_js_1.PropertyCollection());\n        }\n    }\n    /**\n     * The list of voices\n     * @member SynthesisVoicesResult.prototype.voices\n     * @function\n     * @public\n     * @returns {VoiceInfo[]} List of synthesized voices.\n     */\n    get voices() {\n        return this.privVoices;\n    }\n}\nexports.SynthesisVoicesResult = SynthesisVoicesResult;\n\n//# sourceMappingURL=SynthesisVoicesResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VoiceInfo = exports.SynthesisVoiceType = exports.SynthesisVoiceGender = void 0;\n/**\n * Defines the gender of synthesis voices.\n * Added in version 1.20.0.\n */\nvar SynthesisVoiceGender;\n(function (SynthesisVoiceGender) {\n    /** Gender unknown */\n    SynthesisVoiceGender[SynthesisVoiceGender[\"Unknown\"] = 0] = \"Unknown\";\n    /** Female voice */\n    SynthesisVoiceGender[SynthesisVoiceGender[\"Female\"] = 1] = \"Female\";\n    /** Male voice */\n    SynthesisVoiceGender[SynthesisVoiceGender[\"Male\"] = 2] = \"Male\";\n    /** Neutral voice */\n    SynthesisVoiceGender[SynthesisVoiceGender[\"Neutral\"] = 3] = \"Neutral\";\n})(SynthesisVoiceGender = exports.SynthesisVoiceGender || (exports.SynthesisVoiceGender = {}));\nvar SynthesisVoiceType;\n(function (SynthesisVoiceType) {\n    /**\n     * Voice type is not known.\n     */\n    SynthesisVoiceType[SynthesisVoiceType[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Online neural voices.\n     */\n    SynthesisVoiceType[SynthesisVoiceType[\"OnlineNeural\"] = 1] = \"OnlineNeural\";\n    /**\n     * Online standard voices. These voices are deprecated.\n     */\n    SynthesisVoiceType[SynthesisVoiceType[\"OnlineStandard\"] = 2] = \"OnlineStandard\";\n    /**\n     * Offline neural voices.\n     */\n    SynthesisVoiceType[SynthesisVoiceType[\"OfflineNeural\"] = 3] = \"OfflineNeural\";\n    /**\n     * Offline standard voices.\n     */\n    SynthesisVoiceType[SynthesisVoiceType[\"OfflineStandard\"] = 4] = \"OfflineStandard\";\n    /**\n     * High definition (HD) voices. Refer to https://learn.microsoft.com/azure/ai-services/speech-service/high-definition-voices\n     */\n    SynthesisVoiceType[SynthesisVoiceType[\"OnlineNeuralHD\"] = 5] = \"OnlineNeuralHD\";\n})(SynthesisVoiceType = exports.SynthesisVoiceType || (exports.SynthesisVoiceType = {}));\nconst GENDER_LOOKUP = {\n    [SynthesisVoiceGender[SynthesisVoiceGender.Neutral]]: SynthesisVoiceGender.Neutral,\n    [SynthesisVoiceGender[SynthesisVoiceGender.Male]]: SynthesisVoiceGender.Male,\n    [SynthesisVoiceGender[SynthesisVoiceGender.Female]]: SynthesisVoiceGender.Female,\n};\nconst VOICE_TYPE_LOOKUP = {\n    Neural: SynthesisVoiceType.OnlineNeural,\n    NeuralHD: SynthesisVoiceType.OnlineNeuralHD,\n};\n/**\n * Information about Speech Synthesis voice\n * Added in version 1.20.0.\n * @class VoiceInfo\n */\nclass VoiceInfo {\n    constructor(json) {\n        this.privStyleList = [];\n        if (!!json) {\n            this.privName = json.Name;\n            this.privLocale = json.Locale;\n            this.privShortName = json.ShortName;\n            this.privLocaleName = json.LocaleName;\n            this.privDisplayName = json.DisplayName;\n            this.privLocalName = json.LocalName;\n            this.privVoiceType = VOICE_TYPE_LOOKUP[json.VoiceType] || SynthesisVoiceType.Unknown;\n            this.privGender = GENDER_LOOKUP[json.Gender] || SynthesisVoiceGender.Unknown;\n            if (!!json.StyleList && Array.isArray(json.StyleList)) {\n                for (const style of json.StyleList) {\n                    this.privStyleList.push(style);\n                }\n            }\n            this.privSampleRateHertz = json.SampleRateHertz;\n            this.privStatus = json.Status;\n            if (json.ExtendedPropertyMap) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                this.privExtendedPropertyMap = json.ExtendedPropertyMap;\n            }\n            this.privWordsPerMinute = json.WordsPerMinute;\n            if (Array.isArray(json.SecondaryLocaleList)) {\n                this.privSecondaryLocaleList = [...json.SecondaryLocaleList];\n            }\n            if (Array.isArray(json.RolePlayList)) {\n                this.privRolePlayList = [...json.RolePlayList];\n            }\n            if (json.VoiceTag) {\n                this.privVoiceTag = json.VoiceTag;\n            }\n        }\n    }\n    get name() {\n        return this.privName;\n    }\n    get locale() {\n        return this.privLocale;\n    }\n    get shortName() {\n        return this.privShortName;\n    }\n    get displayName() {\n        return this.privDisplayName;\n    }\n    get localName() {\n        return this.privLocalName;\n    }\n    get localeName() {\n        return this.privLocaleName;\n    }\n    get gender() {\n        return this.privGender;\n    }\n    get voiceType() {\n        return this.privVoiceType;\n    }\n    get styleList() {\n        return this.privStyleList;\n    }\n    get sampleRateHertz() {\n        return this.privSampleRateHertz;\n    }\n    get status() {\n        return this.privStatus;\n    }\n    get extendedPropertyMap() {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return this.privExtendedPropertyMap;\n    }\n    get wordsPerMinute() {\n        return this.privWordsPerMinute;\n    }\n    get secondaryLocaleList() {\n        return this.privSecondaryLocaleList;\n    }\n    get rolePlayList() {\n        return this.privRolePlayList;\n    }\n    get voiceTag() {\n        return this.privVoiceTag;\n    }\n}\nexports.VoiceInfo = VoiceInfo;\n\n//# sourceMappingURL=VoiceInfo.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeakerAudioDestination = void 0;\nconst Exports_js_1 = require(\"../../common/Exports.js\");\nconst AudioOutputStream_js_1 = require(\"./AudioOutputStream.js\");\nconst AudioStreamFormat_js_1 = require(\"./AudioStreamFormat.js\");\nconst MediaDurationPlaceholderSeconds = 60 * 30;\nconst AudioFormatToMimeType = {\n    [AudioStreamFormat_js_1.AudioFormatTag.PCM]: \"audio/wav\",\n    [AudioStreamFormat_js_1.AudioFormatTag.MuLaw]: \"audio/x-wav\",\n    [AudioStreamFormat_js_1.AudioFormatTag.MP3]: \"audio/mpeg\",\n    [AudioStreamFormat_js_1.AudioFormatTag.OGG_OPUS]: \"audio/ogg\",\n    [AudioStreamFormat_js_1.AudioFormatTag.WEBM_OPUS]: \"audio/webm; codecs=opus\",\n    [AudioStreamFormat_js_1.AudioFormatTag.ALaw]: \"audio/x-wav\",\n    [AudioStreamFormat_js_1.AudioFormatTag.FLAC]: \"audio/flac\",\n    [AudioStreamFormat_js_1.AudioFormatTag.AMR_WB]: \"audio/amr-wb\",\n    [AudioStreamFormat_js_1.AudioFormatTag.G722]: \"audio/G722\",\n};\n/**\n * Represents the speaker playback audio destination, which only works in browser.\n * Note: the SDK will try to use <a href=\"https://www.w3.org/TR/media-source/\">Media Source Extensions</a> to play audio.\n * Mp3 format has better supports on Microsoft Edge, Chrome and Safari (desktop), so, it's better to specify mp3 format for playback.\n * @class SpeakerAudioDestination\n * Updated in version 1.17.0\n */\nclass SpeakerAudioDestination {\n    constructor(audioDestinationId) {\n        this.privPlaybackStarted = false;\n        this.privAppendingToBuffer = false;\n        this.privMediaSourceOpened = false;\n        this.privBytesReceived = 0;\n        this.privId = audioDestinationId ? audioDestinationId : (0, Exports_js_1.createNoDashGuid)();\n        this.privIsPaused = false;\n        this.privIsClosed = false;\n    }\n    id() {\n        return this.privId;\n    }\n    write(buffer, cb, err) {\n        if (this.privAudioBuffer !== undefined) {\n            this.privAudioBuffer.push(buffer);\n            this.updateSourceBuffer().then(() => {\n                if (!!cb) {\n                    cb();\n                }\n            }, (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n        }\n        else if (this.privAudioOutputStream !== undefined) {\n            this.privAudioOutputStream.write(buffer);\n            this.privBytesReceived += buffer.byteLength;\n        }\n    }\n    close(cb, err) {\n        this.privIsClosed = true;\n        if (this.privSourceBuffer !== undefined) {\n            this.handleSourceBufferUpdateEnd().then(() => {\n                if (!!cb) {\n                    cb();\n                }\n            }, (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n        }\n        else if (this.privAudioOutputStream !== undefined && typeof window !== \"undefined\") {\n            if ((this.privFormat.formatTag === AudioStreamFormat_js_1.AudioFormatTag.PCM || this.privFormat.formatTag === AudioStreamFormat_js_1.AudioFormatTag.MuLaw\n                || this.privFormat.formatTag === AudioStreamFormat_js_1.AudioFormatTag.ALaw) && this.privFormat.hasHeader === false) {\n                // eslint-disable-next-line no-console\n                console.warn(\"Play back is not supported for raw PCM, mulaw or alaw format without header.\");\n                if (!!this.onAudioEnd) {\n                    this.onAudioEnd(this);\n                }\n            }\n            else {\n                let receivedAudio = new ArrayBuffer(this.privBytesReceived);\n                this.privAudioOutputStream.read(receivedAudio).then(() => {\n                    receivedAudio = this.privFormat.addHeader(receivedAudio);\n                    const audioBlob = new Blob([receivedAudio], { type: AudioFormatToMimeType[this.privFormat.formatTag] });\n                    this.privAudio.src = window.URL.createObjectURL(audioBlob);\n                    this.notifyPlayback().then(() => {\n                        if (!!cb) {\n                            cb();\n                        }\n                    }, (error) => {\n                        if (!!err) {\n                            err(error);\n                        }\n                    });\n                }, (error) => {\n                    if (!!err) {\n                        err(error);\n                    }\n                });\n            }\n        }\n        else {\n            // unsupported format, call onAudioEnd directly.\n            if (!!this.onAudioEnd) {\n                this.onAudioEnd(this);\n            }\n        }\n    }\n    set format(format) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (typeof (AudioContext) !== \"undefined\" || (typeof (window) !== \"undefined\" && typeof (window.webkitAudioContext) !== \"undefined\")) {\n            this.privFormat = format;\n            const mimeType = AudioFormatToMimeType[this.privFormat.formatTag];\n            if (mimeType === undefined) {\n                // eslint-disable-next-line no-console\n                console.warn(`Unknown mimeType for format ${AudioStreamFormat_js_1.AudioFormatTag[this.privFormat.formatTag]}; playback is not supported.`);\n            }\n            else if (typeof (MediaSource) !== \"undefined\" && MediaSource.isTypeSupported(mimeType)) {\n                this.privAudio = new Audio();\n                this.privAudioBuffer = [];\n                this.privMediaSource = new MediaSource();\n                this.privAudio.src = URL.createObjectURL(this.privMediaSource);\n                this.privAudio.load();\n                this.privMediaSource.onsourceopen = () => {\n                    this.privMediaSourceOpened = true;\n                    this.privMediaSource.duration = MediaDurationPlaceholderSeconds;\n                    this.privSourceBuffer = this.privMediaSource.addSourceBuffer(mimeType);\n                    this.privSourceBuffer.onupdate = () => {\n                        this.updateSourceBuffer().catch((reason) => {\n                            Exports_js_1.Events.instance.onEvent(new Exports_js_1.BackgroundEvent(reason));\n                        });\n                    };\n                    this.privSourceBuffer.onupdateend = () => {\n                        this.handleSourceBufferUpdateEnd().catch((reason) => {\n                            Exports_js_1.Events.instance.onEvent(new Exports_js_1.BackgroundEvent(reason));\n                        });\n                    };\n                    this.privSourceBuffer.onupdatestart = () => {\n                        this.privAppendingToBuffer = false;\n                    };\n                };\n                this.updateSourceBuffer().catch((reason) => {\n                    Exports_js_1.Events.instance.onEvent(new Exports_js_1.BackgroundEvent(reason));\n                });\n            }\n            else {\n                // eslint-disable-next-line no-console\n                console.warn(`Format ${AudioStreamFormat_js_1.AudioFormatTag[this.privFormat.formatTag]} could not be played by MSE, streaming playback is not enabled.`);\n                this.privAudioOutputStream = new AudioOutputStream_js_1.PullAudioOutputStreamImpl();\n                this.privAudioOutputStream.format = this.privFormat;\n                this.privAudio = new Audio();\n            }\n        }\n    }\n    get volume() {\n        return this.privAudio?.volume ?? -1;\n    }\n    set volume(volume) {\n        if (!!this.privAudio) {\n            this.privAudio.volume = volume;\n        }\n    }\n    mute() {\n        if (!!this.privAudio) {\n            this.privAudio.muted = true;\n        }\n    }\n    unmute() {\n        if (!!this.privAudio) {\n            this.privAudio.muted = false;\n        }\n    }\n    get isClosed() {\n        return this.privIsClosed;\n    }\n    get currentTime() {\n        if (this.privAudio !== undefined) {\n            return this.privAudio.currentTime;\n        }\n        return -1;\n    }\n    pause() {\n        if (!this.privIsPaused && this.privAudio !== undefined) {\n            this.privAudio.pause();\n            this.privIsPaused = true;\n        }\n    }\n    resume(cb, err) {\n        if (this.privIsPaused && this.privAudio !== undefined) {\n            this.privAudio.play().then(() => {\n                if (!!cb) {\n                    cb();\n                }\n            }, (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n            this.privIsPaused = false;\n        }\n    }\n    get internalAudio() {\n        return this.privAudio;\n    }\n    async updateSourceBuffer() {\n        if (this.privAudioBuffer !== undefined && (this.privAudioBuffer.length > 0) && this.sourceBufferAvailable()) {\n            this.privAppendingToBuffer = true;\n            const binary = this.privAudioBuffer.shift();\n            try {\n                this.privSourceBuffer.appendBuffer(binary);\n            }\n            catch (error) {\n                this.privAudioBuffer.unshift(binary);\n                // eslint-disable-next-line no-console\n                console.log(\"buffer filled, pausing addition of binaries until space is made\");\n                return;\n            }\n            await this.notifyPlayback();\n        }\n        else if (this.canEndStream()) {\n            await this.handleSourceBufferUpdateEnd();\n        }\n    }\n    async handleSourceBufferUpdateEnd() {\n        if (this.canEndStream() && this.sourceBufferAvailable()) {\n            this.privMediaSource.endOfStream();\n            await this.notifyPlayback();\n        }\n    }\n    async notifyPlayback() {\n        if (!this.privPlaybackStarted && this.privAudio !== undefined) {\n            this.privPlaybackStarted = true;\n            if (!!this.onAudioStart) {\n                this.onAudioStart(this);\n            }\n            this.privAudio.onended = () => {\n                if (!!this.onAudioEnd) {\n                    this.onAudioEnd(this);\n                }\n            };\n            if (!this.privIsPaused) {\n                await this.privAudio.play();\n            }\n        }\n    }\n    canEndStream() {\n        return (this.isClosed && this.privSourceBuffer !== undefined && (this.privAudioBuffer.length === 0)\n            && this.privMediaSourceOpened && !this.privAppendingToBuffer && this.privMediaSource.readyState === \"open\");\n    }\n    sourceBufferAvailable() {\n        return (this.privSourceBuffer !== undefined && !this.privSourceBuffer.updating);\n    }\n}\nexports.SpeakerAudioDestination = SpeakerAudioDestination;\n\n//# sourceMappingURL=SpeakerAudioDestination.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranscriptionCanceledEventArgs = void 0;\nconst CancellationEventArgsBase_js_1 = require(\"./CancellationEventArgsBase.js\");\n/**\n * Defines content of a RecognitionErrorEvent.\n * @class ConversationTranscriptionCanceledEventArgs\n */\nclass ConversationTranscriptionCanceledEventArgs extends CancellationEventArgsBase_js_1.CancellationEventArgsBase {\n}\nexports.ConversationTranscriptionCanceledEventArgs = ConversationTranscriptionCanceledEventArgs;\n\n//# sourceMappingURL=ConversationTranscriptionCanceledEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MeetingTranscriptionCanceledEventArgs = void 0;\nconst CancellationEventArgsBase_js_1 = require(\"./CancellationEventArgsBase.js\");\n/**\n * Defines content of a MeetingTranscriptionCanceledEvent.\n * @class MeetingTranscriptionCanceledEventArgs\n */\nclass MeetingTranscriptionCanceledEventArgs extends CancellationEventArgsBase_js_1.CancellationEventArgsBase {\n}\nexports.MeetingTranscriptionCanceledEventArgs = MeetingTranscriptionCanceledEventArgs;\n\n//# sourceMappingURL=MeetingTranscriptionCanceledEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PronunciationAssessmentGradingSystem = void 0;\n/**\n * Defines the point system for pronunciation score calibration; default value is FivePoint.\n * Added in version 1.15.0\n * @class PronunciationAssessmentGradingSystem\n */\nvar PronunciationAssessmentGradingSystem;\n(function (PronunciationAssessmentGradingSystem) {\n    /**\n     * Five point calibration\n     * @member PronunciationAssessmentGradingSystem.FivePoint\n     */\n    PronunciationAssessmentGradingSystem[PronunciationAssessmentGradingSystem[\"FivePoint\"] = 1] = \"FivePoint\";\n    /**\n     * Hundred mark\n     * @member PronunciationAssessmentGradingSystem.HundredMark\n     */\n    PronunciationAssessmentGradingSystem[PronunciationAssessmentGradingSystem[\"HundredMark\"] = 2] = \"HundredMark\";\n})(PronunciationAssessmentGradingSystem = exports.PronunciationAssessmentGradingSystem || (exports.PronunciationAssessmentGradingSystem = {}));\n\n//# sourceMappingURL=PronunciationAssessmentGradingSystem.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PronunciationAssessmentGranularity = void 0;\n/**\n * Defines the pronunciation evaluation granularity; default value is Phoneme.\n * Added in version 1.15.0\n * @class PronunciationAssessmentGranularity\n */\nvar PronunciationAssessmentGranularity;\n(function (PronunciationAssessmentGranularity) {\n    /**\n     * Shows the score on the full text, word and phoneme level\n     * @member PronunciationAssessmentGranularity.Phoneme\n     */\n    PronunciationAssessmentGranularity[PronunciationAssessmentGranularity[\"Phoneme\"] = 1] = \"Phoneme\";\n    /**\n     * Shows the score on the full text and word level\n     * @member PronunciationAssessmentGranularity.Word\n     */\n    PronunciationAssessmentGranularity[PronunciationAssessmentGranularity[\"Word\"] = 2] = \"Word\";\n    /**\n     * Shows the score on the full text level only\n     * @member PronunciationAssessmentGranularity.FullText\n     */\n    PronunciationAssessmentGranularity[PronunciationAssessmentGranularity[\"FullText\"] = 3] = \"FullText\";\n})(PronunciationAssessmentGranularity = exports.PronunciationAssessmentGranularity || (exports.PronunciationAssessmentGranularity = {}));\n\n//# sourceMappingURL=PronunciationAssessmentGranularity.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PronunciationAssessmentConfig = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Pronunciation assessment configuration.\n * @class PronunciationAssessmentConfig\n * Added in version 1.15.0.\n */\nclass PronunciationAssessmentConfig {\n    /**\n     * PronunciationAssessmentConfig constructor.\n     * @constructor\n     * @param {string} referenceText\n     * @param gradingSystem\n     * @param granularity\n     * @param enableMiscue\n     */\n    constructor(referenceText, gradingSystem = Exports_js_1.PronunciationAssessmentGradingSystem.FivePoint, granularity = Exports_js_1.PronunciationAssessmentGranularity.Phoneme, enableMiscue = false) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(referenceText, \"referenceText\");\n        this.privProperties = new Exports_js_1.PropertyCollection();\n        this.privProperties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_ReferenceText, referenceText);\n        this.privProperties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_GradingSystem, Exports_js_1.PronunciationAssessmentGradingSystem[gradingSystem]);\n        this.privProperties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_Granularity, Exports_js_1.PronunciationAssessmentGranularity[granularity]);\n        this.privProperties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_EnableMiscue, String(enableMiscue));\n    }\n    /**\n     * @member PronunciationAssessmentConfig.fromJSON\n     * @function\n     * @public\n     * @param {string} json The json string containing the pronunciation assessment parameters.\n     * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\n     * @summary Creates an instance of the PronunciationAssessmentConfig from json.\n     * This method is designed to support the pronunciation assessment parameters still in preview.\n     * Under normal circumstances, use the constructor instead.\n     */\n    static fromJSON(json) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(json, \"json\");\n        const config = new PronunciationAssessmentConfig(\"\");\n        config.privProperties = new Exports_js_1.PropertyCollection();\n        config.properties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_Json, json);\n        return config;\n    }\n    toJSON() {\n        this.updateJson();\n        return this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_Params);\n    }\n    applyTo(recognizer) {\n        this.updateJson();\n        const recoBase = recognizer.internalData;\n        recoBase.expectContentAssessmentResponse = !!this.privContentAssessmentTopic;\n        recoBase.speechContext.setPronunciationAssessmentParams(this.properties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_Params), this.privContentAssessmentTopic, recoBase.isSpeakerDiarizationEnabled);\n    }\n    /**\n     * Gets the reference text.\n     * @member PronunciationAssessmentConfig.prototype.referenceText\n     * @function\n     * @public\n     * @returns {string} Reference text.\n     */\n    get referenceText() {\n        return this.properties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_ReferenceText);\n    }\n    /**\n     * Gets/Sets the reference text.\n     * @member PronunciationAssessmentConfig.prototype.referenceText\n     * @function\n     * @public\n     * @param {string} referenceText - Reference text.\n     */\n    set referenceText(referenceText) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(referenceText, \"referenceText\");\n        this.properties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_ReferenceText, referenceText);\n    }\n    /**\n     * Sets the phoneme alphabet.\n     * The valid values are \"SAPI\" (default) and \"IPA\".\n     * Added in version 1.20.0\n     * @member PronunciationAssessmentConfig.prototype.phonemeAlphabet\n     * @function\n     * @public\n     * @param {string} phonemeAlphabet - Phoneme alphabet.\n     */\n    set phonemeAlphabet(phonemeAlphabet) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(phonemeAlphabet, \"phonemeAlphabet\");\n        this.privPhonemeAlphabet = phonemeAlphabet;\n    }\n    /**\n     * Sets the boolean enableMiscue property.\n     * Added in version 1.26.0\n     * @member PronunciationAssessmentConfig.prototype.enableMiscue\n     * @function\n     * @public\n     * @param {boolean} enableMiscue - enable miscue.\n     */\n    set enableMiscue(enableMiscue) {\n        const enableMiscueString = enableMiscue ? \"true\" : \"false\";\n        this.properties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_EnableMiscue, enableMiscueString);\n    }\n    /**\n     * Gets the boolean enableMiscue property.\n     * Added in version 1.26.0\n     * @member PronunciationAssessmentConfig.prototype.enableMiscue\n     * @function\n     * @public\n     * @return {boolean} enableMiscue - enable miscue.\n     */\n    get enableMiscue() {\n        const enableMiscueString = this.properties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_EnableMiscue, \"false\");\n        return (enableMiscueString.toLowerCase() === \"true\");\n    }\n    /**\n     * Sets the nbest phoneme count\n     * Added in version 1.20.0\n     * @member PronunciationAssessmentConfig.prototype.nbestPhonemeCount\n     * @function\n     * @public\n     * @param {number} nbestPhonemeCount - NBest phoneme count.\n     */\n    set nbestPhonemeCount(nbestPhonemeCount) {\n        this.privNBestPhonemeCount = nbestPhonemeCount;\n    }\n    /**\n     * Enables the prosody assessment.\n     * Added in version 1.34.0\n     * @member PronunciationAssessmentConfig.prototype.enableProsodyAssessment\n     * @function\n     * @public\n     * @param {boolean} enableProsodyAssessment - enable prosody assessment.\n     */\n    set enableProsodyAssessment(enableProsodyAssessment) {\n        this.privEnableProsodyAssessment = enableProsodyAssessment;\n    }\n    /**\n     * Enables content assessment and sets the topic.\n     * Added in version 1.34.0\n     * @member PronunciationAssessmentConfig.prototype.enableContentAssessmentWithTopic\n     * @function\n     * @public\n     * @param {string} topic - Topic for content assessment.\n     */\n    enableContentAssessmentWithTopic(topic) {\n        this.privContentAssessmentTopic = topic;\n    }\n    /**\n     * @member PronunciationAssessmentConfig.prototype.properties\n     * @function\n     * @public\n     * @return {PropertyCollection} Properties of the config.\n     * @summary Gets a pronunciation assessment config properties\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    updateJson() {\n        const jsonString = this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_Json, \"{}\");\n        const paramsJson = JSON.parse(jsonString);\n        const referenceText = this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_ReferenceText);\n        if (referenceText) {\n            paramsJson.referenceText = referenceText;\n        }\n        const gradingSystem = this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_GradingSystem);\n        if (gradingSystem) {\n            paramsJson.gradingSystem = gradingSystem;\n        }\n        const granularity = this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_Granularity);\n        if (granularity) {\n            paramsJson.granularity = granularity;\n        }\n        if (this.privPhonemeAlphabet) {\n            paramsJson.phonemeAlphabet = this.privPhonemeAlphabet;\n        }\n        if (this.privNBestPhonemeCount) {\n            paramsJson.nbestPhonemeCount = this.privNBestPhonemeCount;\n        }\n        paramsJson.enableProsodyAssessment = this.privEnableProsodyAssessment;\n        // always set dimension to Comprehensive\n        paramsJson.dimension = \"Comprehensive\";\n        const enableMiscueString = this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_EnableMiscue);\n        if (enableMiscueString) {\n            paramsJson.enableMiscue = this.enableMiscue;\n        }\n        this.privProperties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_Params, JSON.stringify(paramsJson));\n    }\n}\nexports.PronunciationAssessmentConfig = PronunciationAssessmentConfig;\n\n//# sourceMappingURL=PronunciationAssessmentConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PronunciationAssessmentResult = exports.ContentAssessmentResult = void 0;\n/* eslint-disable max-classes-per-file */\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_1 = require(\"./Exports.js\");\nclass ContentAssessmentResult {\n    /**\n     * @Internal\n     * Do not use externally.\n     */\n    constructor(detailResult) {\n        this.privPronJson = detailResult;\n    }\n    /**\n     * Correctness in using grammar and variety of sentence patterns.\n     * Grammatical errors are jointly evaluated by lexical accuracy,\n     * grammatical accuracy and diversity of sentence structures.\n     * @member ContentAssessmentResult.prototype.grammarScore\n     * @function\n     * @public\n     * @returns {number} Grammar score.\n     */\n    get grammarScore() {\n        return this.privPronJson.ContentAssessment.GrammarScore;\n    }\n    /**\n     * Proficiency in lexical usage. It evaluates the speaker's effective usage\n     * of words and their appropriateness within the given context to express\n     * ideas accurately, as well as level of lexical complexity.\n     * @member ContentAssessmentResult.prototype.vocabularyScore\n     * @function\n     * @public\n     * @returns {number} Vocabulary score.\n     */\n    get vocabularyScore() {\n        return this.privPronJson.ContentAssessment.VocabularyScore;\n    }\n    /**\n     * Level of understanding and engagement with the topic, which provides\n     * insights into the speaker’s ability to express their thoughts and ideas\n     * effectively and the ability to engage with the topic.\n     * @member ContentAssessmentResult.prototype.topicScore\n     * @function\n     * @public\n     * @returns {number} Topic score.\n     */\n    get topicScore() {\n        return this.privPronJson.ContentAssessment.TopicScore;\n    }\n}\nexports.ContentAssessmentResult = ContentAssessmentResult;\n/**\n * Pronunciation assessment results.\n * @class PronunciationAssessmentResult\n * Added in version 1.15.0.\n */\nclass PronunciationAssessmentResult {\n    constructor(jsonString) {\n        const j = JSON.parse(jsonString);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(j.NBest[0], \"NBest\");\n        this.privPronJson = j.NBest[0];\n    }\n    /**\n     * @member PronunciationAssessmentResult.fromResult\n     * @function\n     * @public\n     * @param {RecognitionResult} result The recognition result.\n     * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\n     * @summary Creates an instance of the PronunciationAssessmentResult from recognition result.\n     */\n    static fromResult(result) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(result, \"result\");\n        const json = result.properties.getProperty(Exports_js_1.PropertyId.SpeechServiceResponse_JsonResult);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(json, \"json\");\n        return new PronunciationAssessmentResult(json);\n    }\n    /**\n     * Gets the detail result of pronunciation assessment.\n     * @member PronunciationAssessmentConfig.prototype.detailResult\n     * @function\n     * @public\n     * @returns {DetailResult} detail result.\n     */\n    get detailResult() {\n        return this.privPronJson;\n    }\n    /**\n     * The score indicating the pronunciation accuracy of the given speech, which indicates\n     * how closely the phonemes match a native speaker's pronunciation.\n     * @member PronunciationAssessmentResult.prototype.accuracyScore\n     * @function\n     * @public\n     * @returns {number} Accuracy score.\n     */\n    get accuracyScore() {\n        return this.detailResult.PronunciationAssessment?.AccuracyScore;\n    }\n    /**\n     * The overall score indicating the pronunciation quality of the given speech.\n     * This is calculated from AccuracyScore, FluencyScore and CompletenessScore with weight.\n     * @member PronunciationAssessmentResult.prototype.pronunciationScore\n     * @function\n     * @public\n     * @returns {number} Pronunciation score.\n     */\n    get pronunciationScore() {\n        return this.detailResult.PronunciationAssessment?.PronScore;\n    }\n    /**\n     * The score indicating the completeness of the given speech by calculating the ratio of pronounced words towards entire input.\n     * @member PronunciationAssessmentResult.prototype.completenessScore\n     * @function\n     * @public\n     * @returns {number} Completeness score.\n     */\n    get completenessScore() {\n        return this.detailResult.PronunciationAssessment?.CompletenessScore;\n    }\n    /**\n     * The score indicating the fluency of the given speech.\n     * @member PronunciationAssessmentResult.prototype.fluencyScore\n     * @function\n     * @public\n     * @returns {number} Fluency score.\n     */\n    get fluencyScore() {\n        return this.detailResult.PronunciationAssessment?.FluencyScore;\n    }\n    /**\n     * The prosody score, which indicates how nature of the given speech, including stress, intonation, speaking speed and rhythm.\n     * @member PronunciationAssessmentResult.prototype.prosodyScore\n     * @function\n     * @public\n     * @returns {number} Prosody score.\n     */\n    get prosodyScore() {\n        return this.detailResult.PronunciationAssessment?.ProsodyScore;\n    }\n    /**\n     * The concent assessment result.\n     * Only available when content assessment is enabled.\n     * @member PronunciationAssessmentResult.prototype.contentAssessmentResult\n     * @function\n     * @public\n     * @returns {ContentAssessmentResult} Content assessment result.\n     */\n    get contentAssessmentResult() {\n        if (this.detailResult.ContentAssessment === undefined) {\n            return undefined;\n        }\n        return new ContentAssessmentResult(this.detailResult);\n    }\n}\nexports.PronunciationAssessmentResult = PronunciationAssessmentResult;\n\n//# sourceMappingURL=PronunciationAssessmentResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AvatarConfig = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines the talking avatar configuration.\n * @class AvatarConfig\n * Added in version 1.33.0\n *\n * @experimental This feature is experimental and might change or have limited support.\n */\nclass AvatarConfig {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} character - The avatar character.\n     * @param {string} style - The avatar style.\n     * @param {AvatarVideoFormat} videoFormat - The talking avatar output video format.\n     */\n    constructor(character, style, videoFormat) {\n        this.privCustomized = false;\n        this.privUseBuiltInVoice = false;\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(character, \"character\");\n        this.character = character;\n        this.style = style;\n        if (videoFormat === undefined) {\n            videoFormat = new Exports_js_1.AvatarVideoFormat();\n        }\n        this.videoFormat = videoFormat;\n    }\n    /**\n     * Indicates if the talking avatar is customized.\n     */\n    get customized() {\n        return this.privCustomized;\n    }\n    /**\n     * Sets if the talking avatar is customized.\n     */\n    set customized(value) {\n        this.privCustomized = value;\n    }\n    /**\n     * Indicates whether to use built-in voice for custom avatar.\n     */\n    get useBuiltInVoice() {\n        return this.privUseBuiltInVoice;\n    }\n    /**\n     * Sets whether to use built-in voice for custom avatar.\n     */\n    set useBuiltInVoice(value) {\n        this.privUseBuiltInVoice = value;\n    }\n    /**\n     * Gets the background color.\n     */\n    get backgroundColor() {\n        return this.privBackgroundColor;\n    }\n    /**\n     * Sets the background color.\n     */\n    set backgroundColor(value) {\n        this.privBackgroundColor = value;\n    }\n    /**\n     * Gets the background image.\n     */\n    get backgroundImage() {\n        return this.privBackgroundImage;\n    }\n    /**\n     * Sets the background image.\n     * @param {URL} value - The background image.\n     */\n    set backgroundImage(value) {\n        this.privBackgroundImage = value;\n    }\n    /**\n     * Gets the remote ICE servers.\n     * @remarks This method is designed to be used internally in the SDK.\n     * @returns {RTCIceServer[]} The remote ICE servers.\n     */\n    get remoteIceServers() {\n        return this.privRemoteIceServers;\n    }\n    /**\n     * Sets the remote ICE servers.\n     * @remarks Normally, the ICE servers are gathered from the PeerConnection,\n     * set this property to override the ICE servers. E.g., the ICE servers are\n     * different in client and server side.\n     * @param {RTCIceServer[]} value - The remote ICE servers.\n     */\n    set remoteIceServers(value) {\n        this.privRemoteIceServers = value;\n    }\n}\nexports.AvatarConfig = AvatarConfig;\n\n//# sourceMappingURL=AvatarConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AvatarEventArgs = exports.AvatarEventTypes = void 0;\nvar AvatarEventTypes;\n(function (AvatarEventTypes) {\n    AvatarEventTypes[\"SwitchedToSpeaking\"] = \"SwitchedToSpeaking\";\n    AvatarEventTypes[\"SwitchedToIdle\"] = \"SwitchedToIdle\";\n    AvatarEventTypes[\"SessionClosed\"] = \"SessionClosed\";\n})(AvatarEventTypes = exports.AvatarEventTypes || (exports.AvatarEventTypes = {}));\n/**\n * Defines content for talking avatar events.\n * @class AvatarEventArgs\n * Added in version 1.33.0\n *\n * @experimental This feature is experimental and might change or have limited support.\n */\nclass AvatarEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {number} audioOffset - The audio offset.\n     * @param {string} description - The description of the event.\n     */\n    constructor(audioOffset, description) {\n        this.privOffset = audioOffset;\n        this.privDescription = description;\n    }\n    /**\n     * The type of the event.\n     * @public\n     * @returns {AvatarEventTypes} The type of the event.\n     */\n    get type() {\n        return this.privType;\n    }\n    /**\n     * The time offset associated with this event.\n     * @public\n     * @returns {number} The time offset associated with this event.\n     */\n    get offset() {\n        return this.privOffset;\n    }\n    /**\n     * The description of the event.\n     * @public\n     * @returns {string} The description of the event.\n     */\n    get description() {\n        return this.privDescription;\n    }\n}\nexports.AvatarEventArgs = AvatarEventArgs;\n\n//# sourceMappingURL=AvatarEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechSynthesisConnectionFactory = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = require(\"./ConnectionFactoryBase.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\nconst QueryParameterNames_js_1 = require(\"./QueryParameterNames.js\");\nclass SpeechSynthesisConnectionFactory {\n    constructor() {\n        this.synthesisUri = \"/tts/cognitiveservices/websocket/v1\";\n    }\n    async create(config, authInfo, connectionId) {\n        let endpoint = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint, undefined);\n        const region = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, undefined);\n        const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n        const endpointId = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId, undefined);\n        const hostPrefix = (endpointId === undefined) ? \"tts\" : \"voice\";\n        const host = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".\" + hostPrefix + \".speech\" + hostSuffix);\n        const queryParams = {};\n        const headers = {};\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        if (endpointId !== undefined && endpointId !== \"\") {\n            if (!endpoint || endpoint.search(QueryParameterNames_js_1.QueryParameterNames.CustomVoiceDeploymentId) === -1) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.CustomVoiceDeploymentId] = endpointId;\n            }\n        }\n        if (config.avatarEnabled) {\n            if (!endpoint || endpoint.search(QueryParameterNames_js_1.QueryParameterNames.EnableAvatar) === -1) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.EnableAvatar] = \"true\";\n            }\n        }\n        if (!!endpoint) {\n            const endpointUrl = new URL(endpoint);\n            const pathName = endpointUrl.pathname;\n            if (pathName === \"\" || pathName === \"/\") {\n                // We need to generate the path, and we need to check for a redirect.\n                endpointUrl.pathname = this.synthesisUri;\n                endpoint = await ConnectionFactoryBase_js_1.ConnectionFactoryBase.getRedirectUrlFromEndpoint(endpointUrl.toString());\n            }\n        }\n        if (!endpoint) {\n            endpoint = host + this.synthesisUri;\n        }\n        config.parameters.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Url, endpoint);\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        return new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_3.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromParameters(config.parameters), enableCompression, connectionId);\n    }\n}\nexports.SpeechSynthesisConnectionFactory = SpeechSynthesisConnectionFactory;\n\n//# sourceMappingURL=SpeechSynthesisConnectionFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AvatarSynthesizer = void 0;\nconst SpeechSynthesisConnectionFactory_js_1 = require(\"../common.speech/SpeechSynthesisConnectionFactory.js\");\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst AudioOutputFormat_js_1 = require(\"./Audio/AudioOutputFormat.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Synthesizer_js_1 = require(\"./Synthesizer.js\");\n/**\n * Defines the avatar synthesizer.\n * @class AvatarSynthesizer\n * Added in version 1.33.0\n *\n * @experimental This feature is experimental and might change or have limited support.\n */\nclass AvatarSynthesizer extends Exports_js_3.Synthesizer {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - The speech config.\n     * @param {AvatarConfig} avatarConfig - The talking avatar config.\n     */\n    constructor(speechConfig, avatarConfig) {\n        super(speechConfig);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(avatarConfig, \"avatarConfig\");\n        this.privConnectionFactory = new SpeechSynthesisConnectionFactory_js_1.SpeechSynthesisConnectionFactory();\n        this.privAvatarConfig = avatarConfig;\n        this.implCommonSynthesizeSetup();\n    }\n    implCommonSynthesizeSetup() {\n        super.implCommonSynthesizeSetup();\n        // The service checks the audio format setting while it ignores it in avatar synthesis.\n        this.privAdapter.audioOutputFormat = AudioOutputFormat_js_1.AudioOutputFormatImpl.fromSpeechSynthesisOutputFormat(Exports_js_3.SpeechSynthesisOutputFormat.Riff24Khz16BitMonoPcm);\n    }\n    /**\n     * Starts the talking avatar session and establishes the WebRTC connection.\n     * @member AvatarSynthesizer.prototype.startAvatarAsync\n     * @function\n     * @public\n     * @param {AvatarWebRTCConnectionInfo} peerConnection - The peer connection.\n     * @returns {Promise<SynthesisResult>} The promise of the connection result.\n     */\n    async startAvatarAsync(peerConnection) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(peerConnection, \"peerConnection\");\n        this.privIceServers = peerConnection.getConfiguration().iceServers;\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privIceServers, \"Ice servers must be set.\");\n        const iceGatheringDone = new Exports_js_2.Deferred();\n        // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/icegatheringstatechange_event\n        peerConnection.onicegatheringstatechange = () => {\n            Exports_js_2.Events.instance.onEvent(new Exports_js_2.PlatformEvent(\"peer connection: ice gathering state: \" + peerConnection.iceGatheringState, Exports_js_2.EventType.Debug));\n            if (peerConnection.iceGatheringState === \"complete\") {\n                Exports_js_2.Events.instance.onEvent(new Exports_js_2.PlatformEvent(\"peer connection: ice gathering complete.\", Exports_js_2.EventType.Info));\n                iceGatheringDone.resolve();\n            }\n        };\n        peerConnection.onicecandidate = (event) => {\n            if (event.candidate) {\n                Exports_js_2.Events.instance.onEvent(new Exports_js_2.PlatformEvent(\"peer connection: ice candidate: \" + event.candidate.candidate, Exports_js_2.EventType.Debug));\n            }\n            else {\n                Exports_js_2.Events.instance.onEvent(new Exports_js_2.PlatformEvent(\"peer connection: ice candidate: complete\", Exports_js_2.EventType.Debug));\n                iceGatheringDone.resolve();\n            }\n        };\n        // Set a timeout for ice gathering, currently 2 seconds.\n        setTimeout(() => {\n            if (peerConnection.iceGatheringState !== \"complete\") {\n                Exports_js_2.Events.instance.onEvent(new Exports_js_2.PlatformEvent(\"peer connection: ice gathering timeout.\", Exports_js_2.EventType.Warning));\n                iceGatheringDone.resolve();\n            }\n        }, 2000);\n        const sdp = await peerConnection.createOffer();\n        await peerConnection.setLocalDescription(sdp);\n        await iceGatheringDone.promise;\n        Exports_js_2.Events.instance.onEvent(new Exports_js_2.PlatformEvent(\"peer connection: got local SDP.\", Exports_js_2.EventType.Info));\n        this.privProperties.setProperty(Exports_js_3.PropertyId.TalkingAvatarService_WebRTC_SDP, JSON.stringify(peerConnection.localDescription));\n        const result = await this.speak(\"\", false);\n        if (result.reason !== Exports_js_3.ResultReason.SynthesizingAudioCompleted) {\n            return new Exports_js_3.SynthesisResult(result.resultId, result.reason, result.errorDetails, result.properties);\n        }\n        const sdpAnswerString = atob(result.properties.getProperty(Exports_js_3.PropertyId.TalkingAvatarService_WebRTC_SDP));\n        const sdpAnswer = new RTCSessionDescription(JSON.parse(sdpAnswerString));\n        await peerConnection.setRemoteDescription(sdpAnswer);\n        return new Exports_js_3.SynthesisResult(result.resultId, result.reason, undefined, result.properties);\n    }\n    /**\n     * Speaks plain text asynchronously. The rendered audio and video will be sent via the WebRTC connection.\n     * @member AvatarSynthesizer.prototype.speakTextAsync\n     * @function\n     * @public\n     * @param {string} text - The plain text to speak.\n     * @returns {Promise<SynthesisResult>} The promise of the synthesis result.\n     */\n    async speakTextAsync(text) {\n        const r = await this.speak(text, false);\n        return new Exports_js_3.SynthesisResult(r.resultId, r.reason, r.errorDetails, r.properties);\n    }\n    /**\n     * Speaks SSML asynchronously. The rendered audio and video will be sent via the WebRTC connection.\n     * @member AvatarSynthesizer.prototype.speakSsmlAsync\n     * @function\n     * @public\n     * @param {string} ssml - The SSML text to speak.\n     * @returns {Promise<SynthesisResult>} The promise of the synthesis result.\n     */\n    async speakSsmlAsync(ssml) {\n        const r = await this.speak(ssml, true);\n        return new Exports_js_3.SynthesisResult(r.resultId, r.reason, r.errorDetails, r.properties);\n    }\n    /**\n     * Speaks text asynchronously. The avatar will switch to idle state.\n     * @member AvatarSynthesizer.prototype.stopSpeakingAsync\n     * @function\n     * @public\n     * @returns {Promise<void>} The promise of the void result.\n     */\n    async stopSpeakingAsync() {\n        while (this.synthesisRequestQueue.length() > 0) {\n            const request = await this.synthesisRequestQueue.dequeue();\n            request.err(\"Synthesis is canceled by user.\");\n        }\n        return this.privAdapter.stopSpeaking();\n    }\n    /**\n     * Stops the talking avatar session and closes the WebRTC connection.\n     * For now, this is the same as close().\n     * You need to create a new AvatarSynthesizer instance to start a new session.\n     * @member AvatarSynthesizer.prototype.stopAvatarAsync\n     * @function\n     * @public\n     * @returns {Promise<void>} The promise of the void result.\n     */\n    async stopAvatarAsync() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposed);\n        return this.dispose(true);\n    }\n    /**\n     * Dispose of associated resources.\n     * @member AvatarSynthesizer.prototype.close\n     * @function\n     * @public\n     */\n    async close() {\n        if (this.privDisposed) {\n            return;\n        }\n        return this.dispose(true);\n    }\n    /**\n     * Gets the ICE servers. Internal use only.\n     */\n    get iceServers() {\n        return this.privIceServers;\n    }\n    // Creates the synthesis adapter\n    createSynthesisAdapter(authentication, connectionFactory, synthesizerConfig) {\n        return new Exports_js_1.AvatarSynthesisAdapter(authentication, connectionFactory, synthesizerConfig, this, this.privAvatarConfig);\n    }\n    createRestSynthesisAdapter(_authentication, _synthesizerConfig) {\n        return undefined;\n    }\n    createSynthesizerConfig(speechConfig) {\n        const config = super.createSynthesizerConfig(speechConfig);\n        config.avatarEnabled = true;\n        return config;\n    }\n    async speak(text, isSSML) {\n        const requestId = (0, Exports_js_2.createNoDashGuid)();\n        const deferredResult = new Exports_js_2.Deferred();\n        this.synthesisRequestQueue.enqueue(new Synthesizer_js_1.SynthesisRequest(requestId, text, isSSML, (e) => {\n            deferredResult.resolve(e);\n            this.privSynthesizing = false;\n            void this.adapterSpeak();\n        }, (e) => {\n            deferredResult.reject(e);\n            this.privSynthesizing = false;\n        }));\n        void this.adapterSpeak();\n        return deferredResult.promise;\n    }\n}\nexports.AvatarSynthesizer = AvatarSynthesizer;\n\n//# sourceMappingURL=AvatarSynthesizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AvatarVideoFormat = exports.Coordinate = void 0;\n/* eslint-disable max-classes-per-file */\n/**\n * Defines a coordinate in 2D space.\n * @class Coordinate\n * Added in version 1.33.0\n */\nclass Coordinate {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n}\nexports.Coordinate = Coordinate;\n/**\n * Defines the avatar output video format.\n * @class AvatarVideoFormat\n * Added in version 1.33.0\n *\n * @experimental This feature is experimental and might change in the future.\n */\nclass AvatarVideoFormat {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} codec - The video codec.\n     * @param {number} bitrate - The video bitrate.\n     * @param {number} width - The video width.\n     * @param {number} height - The video height.\n     */\n    constructor(codec = \"H264\", bitrate = 2000000, width = 1920, height = 1080) {\n        this.codec = codec;\n        this.bitrate = bitrate;\n        this.width = width;\n        this.height = height;\n    }\n    /**\n     * Sets the video crop range.\n     */\n    setCropRange(topLeft, bottomRight) {\n        this.cropRange = {\n            bottomRight,\n            topLeft,\n        };\n    }\n}\nexports.AvatarVideoFormat = AvatarVideoFormat;\n\n//# sourceMappingURL=AvatarVideoFormat.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AvatarWebRTCConnectionResult = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines the avatar WebRTC connection result.\n * @class AvatarWebRTCConnectionResult\n * Added in version 1.33.0\n *\n * @experimental This feature is experimental and might change in the future.\n */\nclass AvatarWebRTCConnectionResult extends Exports_js_1.SynthesisResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {RTCSessionDescriptionInit} SDPAnswer - The SDP answer of WebRTC connection.\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    constructor(SDPAnswer, resultId, reason, errorDetails, properties) {\n        super(resultId, reason, errorDetails, properties);\n        this.privSDPAnswer = SDPAnswer;\n    }\n    /**\n     * Specifies SDP (Session Description Protocol) answer of WebRTC connection.\n     * @member AvatarWebRTCConnectionResult.prototype.SDPAnswer\n     * @function\n     * @public\n     * @returns {RTCSessionDescriptionInit} Specifies the SDP answer of WebRTC connection.\n     */\n    get SDPAnswer() {\n        return this.privSDPAnswer;\n    }\n}\nexports.AvatarWebRTCConnectionResult = AvatarWebRTCConnectionResult;\n\n//# sourceMappingURL=AvatarWebRTCConnectionResult.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Diagnostics = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\n/**\n * Defines diagnostics API for managing console output\n * Added in version 1.21.0\n */\nclass Diagnostics {\n    static SetLoggingLevel(logLevel) {\n        this.privListener = new Exports_js_1.ConsoleLoggingListener(logLevel);\n        Exports_js_2.Events.instance.attachConsoleListener(this.privListener);\n    }\n    static StartConsoleOutput() {\n        if (!!this.privListener) {\n            this.privListener.enableConsoleOutput = true;\n        }\n    }\n    static StopConsoleOutput() {\n        if (!!this.privListener) {\n            this.privListener.enableConsoleOutput = false;\n        }\n    }\n    static SetLogOutputPath(path) {\n        if (typeof window === \"undefined\") {\n            if (!!this.privListener) {\n                this.privListener.logPath = path;\n            }\n        }\n        else {\n            throw new Error(\"File system logging not available in browser.\");\n        }\n    }\n    static set onLogOutput(callback) {\n        if (!!this.privListener) {\n            this.privListener.logCallback = callback;\n        }\n    }\n}\nexports.Diagnostics = Diagnostics;\nDiagnostics.privListener = undefined;\n\n//# sourceMappingURL=Diagnostics.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionEventArgs = exports.CancellationErrorCode = exports.CancellationDetails = exports.CancellationDetailsBase = exports.IntentRecognitionCanceledEventArgs = exports.TranslationRecognitionCanceledEventArgs = exports.NoMatchDetails = exports.NoMatchReason = exports.Translations = exports.TranslationRecognizer = exports.VoiceProfileType = exports.IntentRecognizer = exports.SpeechRecognizer = exports.Recognizer = exports.PropertyId = exports.PropertyCollection = exports.SpeechTranslationConfigImpl = exports.SpeechTranslationConfig = exports.SpeechConfigImpl = exports.SpeechConfig = exports.ResultReason = exports.TranslationSynthesisResult = exports.TranslationRecognitionResult = exports.TranslationSynthesisEventArgs = exports.TranslationRecognitionEventArgs = exports.SpeechRecognitionCanceledEventArgs = exports.MeetingTranscriptionEventArgs = exports.ConversationTranscriptionEventArgs = exports.SpeechRecognitionEventArgs = exports.LanguageUnderstandingModel = exports.IntentRecognitionResult = exports.SpeechRecognitionResult = exports.RecognitionResult = exports.IntentRecognitionEventArgs = exports.OutputFormat = exports.RecognitionEventArgs = exports.SessionEventArgs = exports.KeywordRecognitionModel = exports.PushAudioOutputStreamCallback = exports.PullAudioInputStreamCallback = exports.CancellationReason = exports.PushAudioOutputStream = exports.PullAudioOutputStream = exports.AudioOutputStream = exports.PushAudioInputStream = exports.PullAudioInputStream = exports.AudioInputStream = exports.AudioFormatTag = exports.AudioStreamFormat = exports.AudioConfig = void 0;\nexports.SpeechSynthesisEventArgs = exports.SpeechSynthesisResult = exports.SynthesisResult = exports.SpeechSynthesizer = exports.SpeechSynthesisOutputFormat = exports.Synthesizer = exports.User = exports.ParticipantChangedReason = exports.Participant = exports.MeetingTranscriber = exports.Meeting = exports.ConversationTranscriptionResult = exports.ConversationTranscriber = exports.ConversationTranslator = exports.ConversationTranslationResult = exports.ConversationTranslationEventArgs = exports.ConversationTranslationCanceledEventArgs = exports.ConversationParticipantsChangedEventArgs = exports.ConversationExpirationEventArgs = exports.Conversation = exports.SpeakerRecognitionCancellationDetails = exports.SpeakerRecognitionResultType = exports.SpeakerRecognitionResult = exports.SourceLanguageConfig = exports.AutoDetectSourceLanguageResult = exports.AutoDetectSourceLanguageConfig = exports.SpeakerVerificationModel = exports.SpeakerIdentificationModel = exports.SpeakerRecognizer = exports.VoiceProfileClient = exports.VoiceProfilePhraseResult = exports.VoiceProfileCancellationDetails = exports.VoiceProfileResult = exports.VoiceProfileEnrollmentCancellationDetails = exports.VoiceProfileEnrollmentResult = exports.VoiceProfile = exports.ConnectionMessage = exports.ConnectionMessageEventArgs = exports.BaseAudioPlayer = exports.ProfanityOption = exports.ServicePropertyChannel = exports.TurnStatusReceivedEventArgs = exports.ActivityReceivedEventArgs = exports.DialogServiceConnector = exports.CustomCommandsConfig = exports.BotFrameworkConfig = exports.DialogServiceConfig = exports.PhraseListGrammar = exports.Connection = exports.ServiceEventArgs = void 0;\nexports.LogLevel = exports.Diagnostics = exports.AvatarWebRTCConnectionResult = exports.Coordinate = exports.AvatarVideoFormat = exports.AvatarSynthesizer = exports.AvatarEventArgs = exports.AvatarConfig = exports.LanguageIdMode = exports.PronunciationAssessmentResult = exports.PronunciationAssessmentConfig = exports.PronunciationAssessmentGranularity = exports.PronunciationAssessmentGradingSystem = exports.MeetingTranscriptionCanceledEventArgs = exports.ConversationTranscriptionCanceledEventArgs = exports.SpeakerAudioDestination = exports.VoiceInfo = exports.SynthesisVoiceType = exports.SynthesisVoiceGender = exports.SynthesisVoicesResult = exports.SpeechSynthesisBoundaryType = exports.SpeechSynthesisVisemeEventArgs = exports.SpeechSynthesisBookmarkEventArgs = exports.SpeechSynthesisWordBoundaryEventArgs = void 0;\nvar AudioConfig_js_1 = require(\"./Audio/AudioConfig.js\");\nObject.defineProperty(exports, \"AudioConfig\", { enumerable: true, get: function () { return AudioConfig_js_1.AudioConfig; } });\nvar AudioStreamFormat_js_1 = require(\"./Audio/AudioStreamFormat.js\");\nObject.defineProperty(exports, \"AudioStreamFormat\", { enumerable: true, get: function () { return AudioStreamFormat_js_1.AudioStreamFormat; } });\nObject.defineProperty(exports, \"AudioFormatTag\", { enumerable: true, get: function () { return AudioStreamFormat_js_1.AudioFormatTag; } });\nvar AudioInputStream_js_1 = require(\"./Audio/AudioInputStream.js\");\nObject.defineProperty(exports, \"AudioInputStream\", { enumerable: true, get: function () { return AudioInputStream_js_1.AudioInputStream; } });\nObject.defineProperty(exports, \"PullAudioInputStream\", { enumerable: true, get: function () { return AudioInputStream_js_1.PullAudioInputStream; } });\nObject.defineProperty(exports, \"PushAudioInputStream\", { enumerable: true, get: function () { return AudioInputStream_js_1.PushAudioInputStream; } });\nvar AudioOutputStream_js_1 = require(\"./Audio/AudioOutputStream.js\");\nObject.defineProperty(exports, \"AudioOutputStream\", { enumerable: true, get: function () { return AudioOutputStream_js_1.AudioOutputStream; } });\nObject.defineProperty(exports, \"PullAudioOutputStream\", { enumerable: true, get: function () { return AudioOutputStream_js_1.PullAudioOutputStream; } });\nObject.defineProperty(exports, \"PushAudioOutputStream\", { enumerable: true, get: function () { return AudioOutputStream_js_1.PushAudioOutputStream; } });\nvar CancellationReason_js_1 = require(\"./CancellationReason.js\");\nObject.defineProperty(exports, \"CancellationReason\", { enumerable: true, get: function () { return CancellationReason_js_1.CancellationReason; } });\nvar PullAudioInputStreamCallback_js_1 = require(\"./Audio/PullAudioInputStreamCallback.js\");\nObject.defineProperty(exports, \"PullAudioInputStreamCallback\", { enumerable: true, get: function () { return PullAudioInputStreamCallback_js_1.PullAudioInputStreamCallback; } });\nvar PushAudioOutputStreamCallback_js_1 = require(\"./Audio/PushAudioOutputStreamCallback.js\");\nObject.defineProperty(exports, \"PushAudioOutputStreamCallback\", { enumerable: true, get: function () { return PushAudioOutputStreamCallback_js_1.PushAudioOutputStreamCallback; } });\nvar KeywordRecognitionModel_js_1 = require(\"./KeywordRecognitionModel.js\");\nObject.defineProperty(exports, \"KeywordRecognitionModel\", { enumerable: true, get: function () { return KeywordRecognitionModel_js_1.KeywordRecognitionModel; } });\nvar SessionEventArgs_js_1 = require(\"./SessionEventArgs.js\");\nObject.defineProperty(exports, \"SessionEventArgs\", { enumerable: true, get: function () { return SessionEventArgs_js_1.SessionEventArgs; } });\nvar RecognitionEventArgs_js_1 = require(\"./RecognitionEventArgs.js\");\nObject.defineProperty(exports, \"RecognitionEventArgs\", { enumerable: true, get: function () { return RecognitionEventArgs_js_1.RecognitionEventArgs; } });\nvar OutputFormat_js_1 = require(\"./OutputFormat.js\");\nObject.defineProperty(exports, \"OutputFormat\", { enumerable: true, get: function () { return OutputFormat_js_1.OutputFormat; } });\nvar IntentRecognitionEventArgs_js_1 = require(\"./IntentRecognitionEventArgs.js\");\nObject.defineProperty(exports, \"IntentRecognitionEventArgs\", { enumerable: true, get: function () { return IntentRecognitionEventArgs_js_1.IntentRecognitionEventArgs; } });\nvar RecognitionResult_js_1 = require(\"./RecognitionResult.js\");\nObject.defineProperty(exports, \"RecognitionResult\", { enumerable: true, get: function () { return RecognitionResult_js_1.RecognitionResult; } });\nvar SpeechRecognitionResult_js_1 = require(\"./SpeechRecognitionResult.js\");\nObject.defineProperty(exports, \"SpeechRecognitionResult\", { enumerable: true, get: function () { return SpeechRecognitionResult_js_1.SpeechRecognitionResult; } });\nvar IntentRecognitionResult_js_1 = require(\"./IntentRecognitionResult.js\");\nObject.defineProperty(exports, \"IntentRecognitionResult\", { enumerable: true, get: function () { return IntentRecognitionResult_js_1.IntentRecognitionResult; } });\nvar LanguageUnderstandingModel_js_1 = require(\"./LanguageUnderstandingModel.js\");\nObject.defineProperty(exports, \"LanguageUnderstandingModel\", { enumerable: true, get: function () { return LanguageUnderstandingModel_js_1.LanguageUnderstandingModel; } });\nvar SpeechRecognitionEventArgs_js_1 = require(\"./SpeechRecognitionEventArgs.js\");\nObject.defineProperty(exports, \"SpeechRecognitionEventArgs\", { enumerable: true, get: function () { return SpeechRecognitionEventArgs_js_1.SpeechRecognitionEventArgs; } });\nObject.defineProperty(exports, \"ConversationTranscriptionEventArgs\", { enumerable: true, get: function () { return SpeechRecognitionEventArgs_js_1.ConversationTranscriptionEventArgs; } });\nObject.defineProperty(exports, \"MeetingTranscriptionEventArgs\", { enumerable: true, get: function () { return SpeechRecognitionEventArgs_js_1.MeetingTranscriptionEventArgs; } });\nvar SpeechRecognitionCanceledEventArgs_js_1 = require(\"./SpeechRecognitionCanceledEventArgs.js\");\nObject.defineProperty(exports, \"SpeechRecognitionCanceledEventArgs\", { enumerable: true, get: function () { return SpeechRecognitionCanceledEventArgs_js_1.SpeechRecognitionCanceledEventArgs; } });\nvar TranslationRecognitionEventArgs_js_1 = require(\"./TranslationRecognitionEventArgs.js\");\nObject.defineProperty(exports, \"TranslationRecognitionEventArgs\", { enumerable: true, get: function () { return TranslationRecognitionEventArgs_js_1.TranslationRecognitionEventArgs; } });\nvar TranslationSynthesisEventArgs_js_1 = require(\"./TranslationSynthesisEventArgs.js\");\nObject.defineProperty(exports, \"TranslationSynthesisEventArgs\", { enumerable: true, get: function () { return TranslationSynthesisEventArgs_js_1.TranslationSynthesisEventArgs; } });\nvar TranslationRecognitionResult_js_1 = require(\"./TranslationRecognitionResult.js\");\nObject.defineProperty(exports, \"TranslationRecognitionResult\", { enumerable: true, get: function () { return TranslationRecognitionResult_js_1.TranslationRecognitionResult; } });\nvar TranslationSynthesisResult_js_1 = require(\"./TranslationSynthesisResult.js\");\nObject.defineProperty(exports, \"TranslationSynthesisResult\", { enumerable: true, get: function () { return TranslationSynthesisResult_js_1.TranslationSynthesisResult; } });\nvar ResultReason_js_1 = require(\"./ResultReason.js\");\nObject.defineProperty(exports, \"ResultReason\", { enumerable: true, get: function () { return ResultReason_js_1.ResultReason; } });\nvar SpeechConfig_js_1 = require(\"./SpeechConfig.js\");\nObject.defineProperty(exports, \"SpeechConfig\", { enumerable: true, get: function () { return SpeechConfig_js_1.SpeechConfig; } });\nObject.defineProperty(exports, \"SpeechConfigImpl\", { enumerable: true, get: function () { return SpeechConfig_js_1.SpeechConfigImpl; } });\nvar SpeechTranslationConfig_js_1 = require(\"./SpeechTranslationConfig.js\");\nObject.defineProperty(exports, \"SpeechTranslationConfig\", { enumerable: true, get: function () { return SpeechTranslationConfig_js_1.SpeechTranslationConfig; } });\nObject.defineProperty(exports, \"SpeechTranslationConfigImpl\", { enumerable: true, get: function () { return SpeechTranslationConfig_js_1.SpeechTranslationConfigImpl; } });\nvar PropertyCollection_js_1 = require(\"./PropertyCollection.js\");\nObject.defineProperty(exports, \"PropertyCollection\", { enumerable: true, get: function () { return PropertyCollection_js_1.PropertyCollection; } });\nvar PropertyId_js_1 = require(\"./PropertyId.js\");\nObject.defineProperty(exports, \"PropertyId\", { enumerable: true, get: function () { return PropertyId_js_1.PropertyId; } });\nvar Recognizer_js_1 = require(\"./Recognizer.js\");\nObject.defineProperty(exports, \"Recognizer\", { enumerable: true, get: function () { return Recognizer_js_1.Recognizer; } });\nvar SpeechRecognizer_js_1 = require(\"./SpeechRecognizer.js\");\nObject.defineProperty(exports, \"SpeechRecognizer\", { enumerable: true, get: function () { return SpeechRecognizer_js_1.SpeechRecognizer; } });\nvar IntentRecognizer_js_1 = require(\"./IntentRecognizer.js\");\nObject.defineProperty(exports, \"IntentRecognizer\", { enumerable: true, get: function () { return IntentRecognizer_js_1.IntentRecognizer; } });\nvar VoiceProfileType_js_1 = require(\"./VoiceProfileType.js\");\nObject.defineProperty(exports, \"VoiceProfileType\", { enumerable: true, get: function () { return VoiceProfileType_js_1.VoiceProfileType; } });\nvar TranslationRecognizer_js_1 = require(\"./TranslationRecognizer.js\");\nObject.defineProperty(exports, \"TranslationRecognizer\", { enumerable: true, get: function () { return TranslationRecognizer_js_1.TranslationRecognizer; } });\nvar Translations_js_1 = require(\"./Translations.js\");\nObject.defineProperty(exports, \"Translations\", { enumerable: true, get: function () { return Translations_js_1.Translations; } });\nvar NoMatchReason_js_1 = require(\"./NoMatchReason.js\");\nObject.defineProperty(exports, \"NoMatchReason\", { enumerable: true, get: function () { return NoMatchReason_js_1.NoMatchReason; } });\nvar NoMatchDetails_js_1 = require(\"./NoMatchDetails.js\");\nObject.defineProperty(exports, \"NoMatchDetails\", { enumerable: true, get: function () { return NoMatchDetails_js_1.NoMatchDetails; } });\nvar TranslationRecognitionCanceledEventArgs_js_1 = require(\"./TranslationRecognitionCanceledEventArgs.js\");\nObject.defineProperty(exports, \"TranslationRecognitionCanceledEventArgs\", { enumerable: true, get: function () { return TranslationRecognitionCanceledEventArgs_js_1.TranslationRecognitionCanceledEventArgs; } });\nvar IntentRecognitionCanceledEventArgs_js_1 = require(\"./IntentRecognitionCanceledEventArgs.js\");\nObject.defineProperty(exports, \"IntentRecognitionCanceledEventArgs\", { enumerable: true, get: function () { return IntentRecognitionCanceledEventArgs_js_1.IntentRecognitionCanceledEventArgs; } });\nvar CancellationDetailsBase_js_1 = require(\"./CancellationDetailsBase.js\");\nObject.defineProperty(exports, \"CancellationDetailsBase\", { enumerable: true, get: function () { return CancellationDetailsBase_js_1.CancellationDetailsBase; } });\nvar CancellationDetails_js_1 = require(\"./CancellationDetails.js\");\nObject.defineProperty(exports, \"CancellationDetails\", { enumerable: true, get: function () { return CancellationDetails_js_1.CancellationDetails; } });\nvar CancellationErrorCodes_js_1 = require(\"./CancellationErrorCodes.js\");\nObject.defineProperty(exports, \"CancellationErrorCode\", { enumerable: true, get: function () { return CancellationErrorCodes_js_1.CancellationErrorCode; } });\nvar ConnectionEventArgs_js_1 = require(\"./ConnectionEventArgs.js\");\nObject.defineProperty(exports, \"ConnectionEventArgs\", { enumerable: true, get: function () { return ConnectionEventArgs_js_1.ConnectionEventArgs; } });\nvar ServiceEventArgs_js_1 = require(\"./ServiceEventArgs.js\");\nObject.defineProperty(exports, \"ServiceEventArgs\", { enumerable: true, get: function () { return ServiceEventArgs_js_1.ServiceEventArgs; } });\nvar Connection_js_1 = require(\"./Connection.js\");\nObject.defineProperty(exports, \"Connection\", { enumerable: true, get: function () { return Connection_js_1.Connection; } });\nvar PhraseListGrammar_js_1 = require(\"./PhraseListGrammar.js\");\nObject.defineProperty(exports, \"PhraseListGrammar\", { enumerable: true, get: function () { return PhraseListGrammar_js_1.PhraseListGrammar; } });\nvar DialogServiceConfig_js_1 = require(\"./DialogServiceConfig.js\");\nObject.defineProperty(exports, \"DialogServiceConfig\", { enumerable: true, get: function () { return DialogServiceConfig_js_1.DialogServiceConfig; } });\nvar BotFrameworkConfig_js_1 = require(\"./BotFrameworkConfig.js\");\nObject.defineProperty(exports, \"BotFrameworkConfig\", { enumerable: true, get: function () { return BotFrameworkConfig_js_1.BotFrameworkConfig; } });\nvar CustomCommandsConfig_js_1 = require(\"./CustomCommandsConfig.js\");\nObject.defineProperty(exports, \"CustomCommandsConfig\", { enumerable: true, get: function () { return CustomCommandsConfig_js_1.CustomCommandsConfig; } });\nvar DialogServiceConnector_js_1 = require(\"./DialogServiceConnector.js\");\nObject.defineProperty(exports, \"DialogServiceConnector\", { enumerable: true, get: function () { return DialogServiceConnector_js_1.DialogServiceConnector; } });\nvar ActivityReceivedEventArgs_js_1 = require(\"./ActivityReceivedEventArgs.js\");\nObject.defineProperty(exports, \"ActivityReceivedEventArgs\", { enumerable: true, get: function () { return ActivityReceivedEventArgs_js_1.ActivityReceivedEventArgs; } });\nvar TurnStatusReceivedEventArgs_js_1 = require(\"./TurnStatusReceivedEventArgs.js\");\nObject.defineProperty(exports, \"TurnStatusReceivedEventArgs\", { enumerable: true, get: function () { return TurnStatusReceivedEventArgs_js_1.TurnStatusReceivedEventArgs; } });\nvar ServicePropertyChannel_js_1 = require(\"./ServicePropertyChannel.js\");\nObject.defineProperty(exports, \"ServicePropertyChannel\", { enumerable: true, get: function () { return ServicePropertyChannel_js_1.ServicePropertyChannel; } });\nvar ProfanityOption_js_1 = require(\"./ProfanityOption.js\");\nObject.defineProperty(exports, \"ProfanityOption\", { enumerable: true, get: function () { return ProfanityOption_js_1.ProfanityOption; } });\nvar BaseAudioPlayer_js_1 = require(\"./Audio/BaseAudioPlayer.js\");\nObject.defineProperty(exports, \"BaseAudioPlayer\", { enumerable: true, get: function () { return BaseAudioPlayer_js_1.BaseAudioPlayer; } });\nvar ConnectionMessageEventArgs_js_1 = require(\"./ConnectionMessageEventArgs.js\");\nObject.defineProperty(exports, \"ConnectionMessageEventArgs\", { enumerable: true, get: function () { return ConnectionMessageEventArgs_js_1.ConnectionMessageEventArgs; } });\nvar ConnectionMessage_js_1 = require(\"./ConnectionMessage.js\");\nObject.defineProperty(exports, \"ConnectionMessage\", { enumerable: true, get: function () { return ConnectionMessage_js_1.ConnectionMessage; } });\nvar VoiceProfile_js_1 = require(\"./VoiceProfile.js\");\nObject.defineProperty(exports, \"VoiceProfile\", { enumerable: true, get: function () { return VoiceProfile_js_1.VoiceProfile; } });\nvar VoiceProfileEnrollmentResult_js_1 = require(\"./VoiceProfileEnrollmentResult.js\");\nObject.defineProperty(exports, \"VoiceProfileEnrollmentResult\", { enumerable: true, get: function () { return VoiceProfileEnrollmentResult_js_1.VoiceProfileEnrollmentResult; } });\nObject.defineProperty(exports, \"VoiceProfileEnrollmentCancellationDetails\", { enumerable: true, get: function () { return VoiceProfileEnrollmentResult_js_1.VoiceProfileEnrollmentCancellationDetails; } });\nvar VoiceProfileResult_js_1 = require(\"./VoiceProfileResult.js\");\nObject.defineProperty(exports, \"VoiceProfileResult\", { enumerable: true, get: function () { return VoiceProfileResult_js_1.VoiceProfileResult; } });\nObject.defineProperty(exports, \"VoiceProfileCancellationDetails\", { enumerable: true, get: function () { return VoiceProfileResult_js_1.VoiceProfileCancellationDetails; } });\nvar VoiceProfilePhraseResult_js_1 = require(\"./VoiceProfilePhraseResult.js\");\nObject.defineProperty(exports, \"VoiceProfilePhraseResult\", { enumerable: true, get: function () { return VoiceProfilePhraseResult_js_1.VoiceProfilePhraseResult; } });\nvar VoiceProfileClient_js_1 = require(\"./VoiceProfileClient.js\");\nObject.defineProperty(exports, \"VoiceProfileClient\", { enumerable: true, get: function () { return VoiceProfileClient_js_1.VoiceProfileClient; } });\nvar SpeakerRecognizer_js_1 = require(\"./SpeakerRecognizer.js\");\nObject.defineProperty(exports, \"SpeakerRecognizer\", { enumerable: true, get: function () { return SpeakerRecognizer_js_1.SpeakerRecognizer; } });\nvar SpeakerIdentificationModel_js_1 = require(\"./SpeakerIdentificationModel.js\");\nObject.defineProperty(exports, \"SpeakerIdentificationModel\", { enumerable: true, get: function () { return SpeakerIdentificationModel_js_1.SpeakerIdentificationModel; } });\nvar SpeakerVerificationModel_js_1 = require(\"./SpeakerVerificationModel.js\");\nObject.defineProperty(exports, \"SpeakerVerificationModel\", { enumerable: true, get: function () { return SpeakerVerificationModel_js_1.SpeakerVerificationModel; } });\nvar AutoDetectSourceLanguageConfig_js_1 = require(\"./AutoDetectSourceLanguageConfig.js\");\nObject.defineProperty(exports, \"AutoDetectSourceLanguageConfig\", { enumerable: true, get: function () { return AutoDetectSourceLanguageConfig_js_1.AutoDetectSourceLanguageConfig; } });\nvar AutoDetectSourceLanguageResult_js_1 = require(\"./AutoDetectSourceLanguageResult.js\");\nObject.defineProperty(exports, \"AutoDetectSourceLanguageResult\", { enumerable: true, get: function () { return AutoDetectSourceLanguageResult_js_1.AutoDetectSourceLanguageResult; } });\nvar SourceLanguageConfig_js_1 = require(\"./SourceLanguageConfig.js\");\nObject.defineProperty(exports, \"SourceLanguageConfig\", { enumerable: true, get: function () { return SourceLanguageConfig_js_1.SourceLanguageConfig; } });\nvar SpeakerRecognitionResult_js_1 = require(\"./SpeakerRecognitionResult.js\");\nObject.defineProperty(exports, \"SpeakerRecognitionResult\", { enumerable: true, get: function () { return SpeakerRecognitionResult_js_1.SpeakerRecognitionResult; } });\nObject.defineProperty(exports, \"SpeakerRecognitionResultType\", { enumerable: true, get: function () { return SpeakerRecognitionResult_js_1.SpeakerRecognitionResultType; } });\nObject.defineProperty(exports, \"SpeakerRecognitionCancellationDetails\", { enumerable: true, get: function () { return SpeakerRecognitionResult_js_1.SpeakerRecognitionCancellationDetails; } });\nvar Exports_js_1 = require(\"./Transcription/Exports.js\");\nObject.defineProperty(exports, \"Conversation\", { enumerable: true, get: function () { return Exports_js_1.Conversation; } });\nObject.defineProperty(exports, \"ConversationExpirationEventArgs\", { enumerable: true, get: function () { return Exports_js_1.ConversationExpirationEventArgs; } });\nObject.defineProperty(exports, \"ConversationParticipantsChangedEventArgs\", { enumerable: true, get: function () { return Exports_js_1.ConversationParticipantsChangedEventArgs; } });\nObject.defineProperty(exports, \"ConversationTranslationCanceledEventArgs\", { enumerable: true, get: function () { return Exports_js_1.ConversationTranslationCanceledEventArgs; } });\nObject.defineProperty(exports, \"ConversationTranslationEventArgs\", { enumerable: true, get: function () { return Exports_js_1.ConversationTranslationEventArgs; } });\nObject.defineProperty(exports, \"ConversationTranslationResult\", { enumerable: true, get: function () { return Exports_js_1.ConversationTranslationResult; } });\nObject.defineProperty(exports, \"ConversationTranslator\", { enumerable: true, get: function () { return Exports_js_1.ConversationTranslator; } });\nObject.defineProperty(exports, \"ConversationTranscriber\", { enumerable: true, get: function () { return Exports_js_1.ConversationTranscriber; } });\nObject.defineProperty(exports, \"ConversationTranscriptionResult\", { enumerable: true, get: function () { return Exports_js_1.ConversationTranscriptionResult; } });\nObject.defineProperty(exports, \"Meeting\", { enumerable: true, get: function () { return Exports_js_1.Meeting; } });\nObject.defineProperty(exports, \"MeetingTranscriber\", { enumerable: true, get: function () { return Exports_js_1.MeetingTranscriber; } });\nObject.defineProperty(exports, \"Participant\", { enumerable: true, get: function () { return Exports_js_1.Participant; } });\nObject.defineProperty(exports, \"ParticipantChangedReason\", { enumerable: true, get: function () { return Exports_js_1.ParticipantChangedReason; } });\nObject.defineProperty(exports, \"User\", { enumerable: true, get: function () { return Exports_js_1.User; } });\nvar Synthesizer_js_1 = require(\"./Synthesizer.js\");\nObject.defineProperty(exports, \"Synthesizer\", { enumerable: true, get: function () { return Synthesizer_js_1.Synthesizer; } });\nvar SpeechSynthesisOutputFormat_js_1 = require(\"./SpeechSynthesisOutputFormat.js\");\nObject.defineProperty(exports, \"SpeechSynthesisOutputFormat\", { enumerable: true, get: function () { return SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat; } });\nvar SpeechSynthesizer_js_1 = require(\"./SpeechSynthesizer.js\");\nObject.defineProperty(exports, \"SpeechSynthesizer\", { enumerable: true, get: function () { return SpeechSynthesizer_js_1.SpeechSynthesizer; } });\nvar SynthesisResult_js_1 = require(\"./SynthesisResult.js\");\nObject.defineProperty(exports, \"SynthesisResult\", { enumerable: true, get: function () { return SynthesisResult_js_1.SynthesisResult; } });\nvar SpeechSynthesisResult_js_1 = require(\"./SpeechSynthesisResult.js\");\nObject.defineProperty(exports, \"SpeechSynthesisResult\", { enumerable: true, get: function () { return SpeechSynthesisResult_js_1.SpeechSynthesisResult; } });\nvar SpeechSynthesisEventArgs_js_1 = require(\"./SpeechSynthesisEventArgs.js\");\nObject.defineProperty(exports, \"SpeechSynthesisEventArgs\", { enumerable: true, get: function () { return SpeechSynthesisEventArgs_js_1.SpeechSynthesisEventArgs; } });\nvar SpeechSynthesisWordBoundaryEventArgs_js_1 = require(\"./SpeechSynthesisWordBoundaryEventArgs.js\");\nObject.defineProperty(exports, \"SpeechSynthesisWordBoundaryEventArgs\", { enumerable: true, get: function () { return SpeechSynthesisWordBoundaryEventArgs_js_1.SpeechSynthesisWordBoundaryEventArgs; } });\nvar SpeechSynthesisBookmarkEventArgs_js_1 = require(\"./SpeechSynthesisBookmarkEventArgs.js\");\nObject.defineProperty(exports, \"SpeechSynthesisBookmarkEventArgs\", { enumerable: true, get: function () { return SpeechSynthesisBookmarkEventArgs_js_1.SpeechSynthesisBookmarkEventArgs; } });\nvar SpeechSynthesisVisemeEventArgs_js_1 = require(\"./SpeechSynthesisVisemeEventArgs.js\");\nObject.defineProperty(exports, \"SpeechSynthesisVisemeEventArgs\", { enumerable: true, get: function () { return SpeechSynthesisVisemeEventArgs_js_1.SpeechSynthesisVisemeEventArgs; } });\nvar SpeechSynthesisBoundaryType_js_1 = require(\"./SpeechSynthesisBoundaryType.js\");\nObject.defineProperty(exports, \"SpeechSynthesisBoundaryType\", { enumerable: true, get: function () { return SpeechSynthesisBoundaryType_js_1.SpeechSynthesisBoundaryType; } });\nvar SynthesisVoicesResult_js_1 = require(\"./SynthesisVoicesResult.js\");\nObject.defineProperty(exports, \"SynthesisVoicesResult\", { enumerable: true, get: function () { return SynthesisVoicesResult_js_1.SynthesisVoicesResult; } });\nvar VoiceInfo_js_1 = require(\"./VoiceInfo.js\");\nObject.defineProperty(exports, \"SynthesisVoiceGender\", { enumerable: true, get: function () { return VoiceInfo_js_1.SynthesisVoiceGender; } });\nObject.defineProperty(exports, \"SynthesisVoiceType\", { enumerable: true, get: function () { return VoiceInfo_js_1.SynthesisVoiceType; } });\nObject.defineProperty(exports, \"VoiceInfo\", { enumerable: true, get: function () { return VoiceInfo_js_1.VoiceInfo; } });\nvar SpeakerAudioDestination_js_1 = require(\"./Audio/SpeakerAudioDestination.js\");\nObject.defineProperty(exports, \"SpeakerAudioDestination\", { enumerable: true, get: function () { return SpeakerAudioDestination_js_1.SpeakerAudioDestination; } });\nvar ConversationTranscriptionCanceledEventArgs_js_1 = require(\"./ConversationTranscriptionCanceledEventArgs.js\");\nObject.defineProperty(exports, \"ConversationTranscriptionCanceledEventArgs\", { enumerable: true, get: function () { return ConversationTranscriptionCanceledEventArgs_js_1.ConversationTranscriptionCanceledEventArgs; } });\nvar MeetingTranscriptionCanceledEventArgs_js_1 = require(\"./MeetingTranscriptionCanceledEventArgs.js\");\nObject.defineProperty(exports, \"MeetingTranscriptionCanceledEventArgs\", { enumerable: true, get: function () { return MeetingTranscriptionCanceledEventArgs_js_1.MeetingTranscriptionCanceledEventArgs; } });\nvar PronunciationAssessmentGradingSystem_js_1 = require(\"./PronunciationAssessmentGradingSystem.js\");\nObject.defineProperty(exports, \"PronunciationAssessmentGradingSystem\", { enumerable: true, get: function () { return PronunciationAssessmentGradingSystem_js_1.PronunciationAssessmentGradingSystem; } });\nvar PronunciationAssessmentGranularity_js_1 = require(\"./PronunciationAssessmentGranularity.js\");\nObject.defineProperty(exports, \"PronunciationAssessmentGranularity\", { enumerable: true, get: function () { return PronunciationAssessmentGranularity_js_1.PronunciationAssessmentGranularity; } });\nvar PronunciationAssessmentConfig_js_1 = require(\"./PronunciationAssessmentConfig.js\");\nObject.defineProperty(exports, \"PronunciationAssessmentConfig\", { enumerable: true, get: function () { return PronunciationAssessmentConfig_js_1.PronunciationAssessmentConfig; } });\nvar PronunciationAssessmentResult_js_1 = require(\"./PronunciationAssessmentResult.js\");\nObject.defineProperty(exports, \"PronunciationAssessmentResult\", { enumerable: true, get: function () { return PronunciationAssessmentResult_js_1.PronunciationAssessmentResult; } });\nvar LanguageIdMode_js_1 = require(\"./LanguageIdMode.js\");\nObject.defineProperty(exports, \"LanguageIdMode\", { enumerable: true, get: function () { return LanguageIdMode_js_1.LanguageIdMode; } });\nvar AvatarConfig_js_1 = require(\"./AvatarConfig.js\");\nObject.defineProperty(exports, \"AvatarConfig\", { enumerable: true, get: function () { return AvatarConfig_js_1.AvatarConfig; } });\nvar AvatarEventArgs_js_1 = require(\"./AvatarEventArgs.js\");\nObject.defineProperty(exports, \"AvatarEventArgs\", { enumerable: true, get: function () { return AvatarEventArgs_js_1.AvatarEventArgs; } });\nvar AvatarSynthesizer_js_1 = require(\"./AvatarSynthesizer.js\");\nObject.defineProperty(exports, \"AvatarSynthesizer\", { enumerable: true, get: function () { return AvatarSynthesizer_js_1.AvatarSynthesizer; } });\nvar AvatarVideoFormat_js_1 = require(\"./AvatarVideoFormat.js\");\nObject.defineProperty(exports, \"AvatarVideoFormat\", { enumerable: true, get: function () { return AvatarVideoFormat_js_1.AvatarVideoFormat; } });\nObject.defineProperty(exports, \"Coordinate\", { enumerable: true, get: function () { return AvatarVideoFormat_js_1.Coordinate; } });\nvar AvatarWebRTCConnectionResult_js_1 = require(\"./AvatarWebRTCConnectionResult.js\");\nObject.defineProperty(exports, \"AvatarWebRTCConnectionResult\", { enumerable: true, get: function () { return AvatarWebRTCConnectionResult_js_1.AvatarWebRTCConnectionResult; } });\nvar Diagnostics_js_1 = require(\"./Diagnostics.js\");\nObject.defineProperty(exports, \"Diagnostics\", { enumerable: true, get: function () { return Diagnostics_js_1.Diagnostics; } });\nvar LogLevel_js_1 = require(\"./LogLevel.js\");\nObject.defineProperty(exports, \"LogLevel\", { enumerable: true, get: function () { return LogLevel_js_1.LogLevel; } });\n\n//# sourceMappingURL=Exports.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProxyInfo = void 0;\nconst Exports_js_1 = require(\"../sdk/Exports.js\");\nclass ProxyInfo {\n    constructor(proxyHostName, proxyPort, proxyUserName, proxyPassword) {\n        this.privProxyHostName = proxyHostName;\n        this.privProxyPort = proxyPort;\n        this.privProxyUserName = proxyUserName;\n        this.privProxyPassword = proxyPassword;\n    }\n    static fromParameters(parameters) {\n        return new ProxyInfo(parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyHostName), parseInt(parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyPort), 10), parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyUserName), parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyPassword));\n    }\n    static fromRecognizerConfig(config) {\n        return this.fromParameters(config.parameters);\n    }\n    get HostName() {\n        return this.privProxyHostName;\n    }\n    get Port() {\n        return this.privProxyPort;\n    }\n    get UserName() {\n        return this.privProxyUserName;\n    }\n    get Password() {\n        return this.privProxyPassword;\n    }\n}\nexports.ProxyInfo = ProxyInfo;\n\n//# sourceMappingURL=ProxyInfo.js.map\n","'use strict'\nconst encodings = new Set(['json', 'buffer', 'string'])\n\nmodule.exports = mkrequest => (...args) => {\n  const statusCodes = new Set()\n  let method\n  let encoding\n  let headers\n  let baseurl = ''\n\n  args.forEach(arg => {\n    if (typeof arg === 'string') {\n      if (arg.toUpperCase() === arg) {\n        if (method) {\n          const msg = `Can't set method to ${arg}, already set to ${method}.`\n          throw new Error(msg)\n        } else {\n          method = arg\n        }\n      } else if (arg.startsWith('http:') || arg.startsWith('https:')) {\n        baseurl = arg\n      } else {\n        if (encodings.has(arg)) {\n          encoding = arg\n        } else {\n          throw new Error(`Unknown encoding, ${arg}`)\n        }\n      }\n    } else if (typeof arg === 'number') {\n      statusCodes.add(arg)\n    } else if (typeof arg === 'object') {\n      if (Array.isArray(arg) || arg instanceof Set) {\n        arg.forEach(code => statusCodes.add(code))\n      } else {\n        if (headers) {\n          throw new Error('Cannot set headers twice.')\n        }\n        headers = arg\n      }\n    } else {\n      throw new Error(`Unknown type: ${typeof arg}`)\n    }\n  })\n\n  if (!method) method = 'GET'\n  if (statusCodes.size === 0) {\n    statusCodes.add(200)\n  }\n\n  return mkrequest(statusCodes, method, encoding, headers, baseurl)\n}\n","'use strict'\n/* global fetch, btoa, Headers */\nconst core = require('./core')\n\nclass StatusError extends Error {\n  constructor (res, ...params) {\n    super(...params)\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, StatusError)\n    }\n\n    this.name = 'StatusError'\n    this.message = res.statusMessage\n    this.statusCode = res.status\n    this.res = res\n    this.json = res.json.bind(res)\n    this.text = res.text.bind(res)\n    this.arrayBuffer = res.arrayBuffer.bind(res)\n    let buffer\n    const get = () => {\n      if (!buffer) buffer = this.arrayBuffer()\n      return buffer\n    }\n    Object.defineProperty(this, 'responseBody', { get })\n    // match Node.js headers object\n    this.headers = {}\n    for (const [key, value] of res.headers.entries()) {\n      this.headers[key.toLowerCase()] = value\n    }\n  }\n}\n\nconst mkrequest = (statusCodes, method, encoding, headers, baseurl) => async (_url, body, _headers = {}) => {\n  _url = baseurl + (_url || '')\n  let parsed = new URL(_url)\n\n  if (!headers) headers = {}\n  if (parsed.username) {\n    headers.Authorization = 'Basic ' + btoa(parsed.username + ':' + parsed.password)\n    parsed = new URL(parsed.protocol + '//' + parsed.host + parsed.pathname + parsed.search)\n  }\n  if (parsed.protocol !== 'https:' && parsed.protocol !== 'http:') {\n    throw new Error(`Unknown protocol, ${parsed.protocol}`)\n  }\n\n  if (body) {\n    if (body instanceof ArrayBuffer ||\n      ArrayBuffer.isView(body) ||\n      typeof body === 'string'\n    ) {\n      // noop\n    } else if (typeof body === 'object') {\n      body = JSON.stringify(body)\n      headers['Content-Type'] = 'application/json'\n    } else {\n      throw new Error('Unknown body type.')\n    }\n  }\n\n  _headers = new Headers({ ...(headers || {}), ..._headers })\n\n  const resp = await fetch(parsed, { method, headers: _headers, body })\n  resp.statusCode = resp.status\n\n  if (!statusCodes.has(resp.status)) {\n    throw new StatusError(resp)\n  }\n\n  if (encoding === 'json') return resp.json()\n  else if (encoding === 'buffer') return resp.arrayBuffer()\n  else if (encoding === 'string') return resp.text()\n  else return resp\n}\n\nmodule.exports = core(mkrequest)\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RestMessageAdapter = exports.RestRequestType = void 0;\nconst bent_1 = __importDefault(require(\"bent\"));\nconst Exports_js_1 = require(\"../common/Exports.js\");\nvar RestRequestType;\n(function (RestRequestType) {\n    RestRequestType[\"Get\"] = \"GET\";\n    RestRequestType[\"Post\"] = \"POST\";\n    RestRequestType[\"Delete\"] = \"DELETE\";\n    RestRequestType[\"File\"] = \"file\";\n})(RestRequestType = exports.RestRequestType || (exports.RestRequestType = {}));\n// accept rest operations via request method and return abstracted objects from server response\nclass RestMessageAdapter {\n    constructor(configParams) {\n        if (!configParams) {\n            throw new Exports_js_1.ArgumentNullError(\"configParams\");\n        }\n        this.privHeaders = configParams.headers;\n        this.privIgnoreCache = configParams.ignoreCache;\n    }\n    static extractHeaderValue(headerKey, headers) {\n        let headerValue = \"\";\n        try {\n            const arr = headers.trim().split(/[\\r\\n]+/);\n            const headerMap = {};\n            arr.forEach((line) => {\n                const parts = line.split(\": \");\n                const header = parts.shift().toLowerCase();\n                const value = parts.join(\": \");\n                headerMap[header] = value;\n            });\n            headerValue = headerMap[headerKey.toLowerCase()];\n        }\n        catch (e) {\n            // ignore the error\n        }\n        return headerValue;\n    }\n    set options(configParams) {\n        this.privHeaders = configParams.headers;\n        this.privIgnoreCache = configParams.ignoreCache;\n    }\n    setHeaders(key, value) {\n        this.privHeaders[key] = value;\n    }\n    request(method, uri, queryParams = {}, body = null) {\n        const responseReceivedDeferral = new Exports_js_1.Deferred();\n        const requestCommand = method === RestRequestType.File ? \"POST\" : method;\n        const handleRestResponse = (data, j = {}) => {\n            const d = data;\n            return {\n                data: JSON.stringify(j),\n                headers: JSON.stringify(data.headers),\n                json: j,\n                ok: data.statusCode >= 200 && data.statusCode < 300,\n                status: data.statusCode,\n                statusText: j.error ? j.error.message : d.statusText ? d.statusText : d.statusMessage\n            };\n        };\n        const send = (postData) => {\n            const sendRequest = (0, bent_1.default)(uri, requestCommand, this.privHeaders, 200, 201, 202, 204, 400, 401, 402, 403, 404);\n            const params = this.queryParams(queryParams) === \"\" ? \"\" : `?${this.queryParams(queryParams)}`;\n            sendRequest(params, postData).then(async (data) => {\n                if (method === RestRequestType.Delete || data.statusCode === 204) {\n                    // No JSON from Delete and reset (204) operations\n                    responseReceivedDeferral.resolve(handleRestResponse(data));\n                }\n                else {\n                    try {\n                        const j = await data.json();\n                        responseReceivedDeferral.resolve(handleRestResponse(data, j));\n                    }\n                    catch {\n                        responseReceivedDeferral.resolve(handleRestResponse(data));\n                    }\n                }\n            }).catch((error) => {\n                responseReceivedDeferral.reject(error);\n            });\n        };\n        if (this.privIgnoreCache) {\n            this.privHeaders[\"Cache-Control\"] = \"no-cache\";\n        }\n        if (method === RestRequestType.Post && body) {\n            this.privHeaders[\"content-type\"] = \"application/json\";\n            this.privHeaders[\"Content-Type\"] = \"application/json\";\n        }\n        send(body);\n        return responseReceivedDeferral.promise;\n    }\n    queryParams(params = {}) {\n        return Object.keys(params)\n            .map((k) => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k]))\n            .join(\"&\");\n    }\n}\nexports.RestMessageAdapter = RestMessageAdapter;\n\n//# sourceMappingURL=RestMessageAdapter.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RestConfigBase = void 0;\nclass RestConfigBase {\n    static get requestOptions() {\n        return RestConfigBase.privDefaultRequestOptions;\n    }\n    static get configParams() {\n        return RestConfigBase.privDefaultParams;\n    }\n    static get restErrors() {\n        return RestConfigBase.privRestErrors;\n    }\n}\nexports.RestConfigBase = RestConfigBase;\nRestConfigBase.privDefaultRequestOptions = {\n    headers: {\n        Accept: \"application/json\",\n    },\n    ignoreCache: false,\n    timeout: 10000,\n};\nRestConfigBase.privRestErrors = {\n    authInvalidSubscriptionKey: \"You must specify either an authentication token to use, or a Cognitive Speech subscription key.\",\n    authInvalidSubscriptionRegion: \"You must specify the Cognitive Speech region to use.\",\n    invalidArgs: \"Required input not found: {arg}.\",\n    invalidCreateJoinConversationResponse: \"Creating/Joining conversation failed with HTTP {status}.\",\n    invalidParticipantRequest: \"The requested participant was not found.\",\n    permissionDeniedConnect: \"Required credentials not found.\",\n    permissionDeniedConversation: \"Invalid operation: only the host can {command} the conversation.\",\n    permissionDeniedParticipant: \"Invalid operation: only the host can {command} a participant.\",\n    permissionDeniedSend: \"Invalid operation: the conversation is not in a connected state.\",\n    permissionDeniedStart: \"Invalid operation: there is already an active conversation.\",\n};\nRestConfigBase.privDefaultParams = {\n    apiVersion: \"api-version\",\n    authorization: \"Authorization\",\n    clientAppId: \"X-ClientAppId\",\n    contentTypeKey: \"Content-Type\",\n    correlationId: \"X-CorrelationId\",\n    languageCode: \"language\",\n    nickname: \"nickname\",\n    profanity: \"profanity\",\n    requestId: \"X-RequestId\",\n    roomId: \"roomid\",\n    sessionToken: \"token\",\n    subscriptionKey: \"Ocp-Apim-Subscription-Key\",\n    subscriptionRegion: \"Ocp-Apim-Subscription-Region\",\n    token: \"X-CapitoToken\",\n};\n\n//# sourceMappingURL=RestConfigBase.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./ConsoleLoggingListener.js\"), exports);\n__exportStar(require(\"./IRecorder.js\"), exports);\n__exportStar(require(\"./MicAudioSource.js\"), exports);\n__exportStar(require(\"./FileAudioSource.js\"), exports);\n__exportStar(require(\"./PCMRecorder.js\"), exports);\n__exportStar(require(\"./WebsocketConnection.js\"), exports);\n__exportStar(require(\"./WebsocketMessageAdapter.js\"), exports);\n__exportStar(require(\"./ReplayableAudioNode.js\"), exports);\n__exportStar(require(\"./ProxyInfo.js\"), exports);\n__exportStar(require(\"./RestMessageAdapter.js\"), exports);\n__exportStar(require(\"./RestConfigBase.js\"), exports);\n\n//# sourceMappingURL=Exports.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IntentConnectionFactory = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = require(\"./ConnectionFactoryBase.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\nclass IntentConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    create(config, authInfo, connectionId) {\n        let endpoint = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint);\n        if (!endpoint) {\n            const region = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_IntentRegion);\n            const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n            const host = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".sr.speech\" + hostSuffix);\n            endpoint = host + \"/speech/recognition/interactive/cognitiveservices/v1\";\n        }\n        const queryParams = {\n            format: \"simple\",\n            language: config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage),\n        };\n        this.setCommonUrlParams(config, queryParams, endpoint);\n        const headers = {};\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        config.parameters.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Url, endpoint);\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        return Promise.resolve(new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_3.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId));\n    }\n    getSpeechRegionFromIntentRegion(intentRegion) {\n        switch (intentRegion) {\n            case \"West US\":\n            case \"US West\":\n            case \"westus\":\n                return \"uswest\";\n            case \"West US 2\":\n            case \"US West 2\":\n            case \"westus2\":\n                return \"uswest2\";\n            case \"South Central US\":\n            case \"US South Central\":\n            case \"southcentralus\":\n                return \"ussouthcentral\";\n            case \"West Central US\":\n            case \"US West Central\":\n            case \"westcentralus\":\n                return \"uswestcentral\";\n            case \"East US\":\n            case \"US East\":\n            case \"eastus\":\n                return \"useast\";\n            case \"East US 2\":\n            case \"US East 2\":\n            case \"eastus2\":\n                return \"useast2\";\n            case \"West Europe\":\n            case \"Europe West\":\n            case \"westeurope\":\n                return \"europewest\";\n            case \"North Europe\":\n            case \"Europe North\":\n            case \"northeurope\":\n                return \"europenorth\";\n            case \"Brazil South\":\n            case \"South Brazil\":\n            case \"southbrazil\":\n                return \"brazilsouth\";\n            case \"Australia East\":\n            case \"East Australia\":\n            case \"eastaustralia\":\n                return \"australiaeast\";\n            case \"Southeast Asia\":\n            case \"Asia Southeast\":\n            case \"southeastasia\":\n                return \"asiasoutheast\";\n            case \"East Asia\":\n            case \"Asia East\":\n            case \"eastasia\":\n                return \"asiaeast\";\n            default:\n                return intentRegion;\n        }\n    }\n}\nexports.IntentConnectionFactory = IntentConnectionFactory;\n\n//# sourceMappingURL=IntentConnectionFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VoiceProfileConnectionFactory = exports.SpeakerRecognitionConnectionFactory = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = require(\"./ConnectionFactoryBase.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\nclass SpeakerRecognitionConnectionFactoryBase extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    create(config, authInfo, endpointPath, connectionId) {\n        let endpoint = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint);\n        if (!endpoint) {\n            const region = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region);\n            const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n            const host = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, `wss://${region}.spr-frontend.speech${hostSuffix}`);\n            const scenario = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SpeakerIdMode, \"TextIndependentIdentification\");\n            endpoint = `${host}/speaker/ws/${this.scenarioToPath(scenario)}/${endpointPath}`;\n        }\n        const queryParams = {\n            format: \"simple\",\n            language: config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage),\n        };\n        this.setCommonUrlParams(config, queryParams, endpoint);\n        const headers = {};\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        headers[HeaderNames_js_1.HeaderNames.SpIDAuthKey] = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key);\n        config.parameters.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Url, endpoint);\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        return Promise.resolve(new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_3.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId));\n    }\n    scenarioToPath(mode) {\n        switch (mode) {\n            case \"TextIndependentVerification\":\n            case \"2\":\n                return \"verification/text-independent\";\n            case \"TextDependentVerification\":\n            case \"1\":\n                return \"verification/text-dependent\";\n            default:\n                return \"identification/text-independent\";\n        }\n    }\n}\nclass SpeakerRecognitionConnectionFactory extends SpeakerRecognitionConnectionFactoryBase {\n    create(config, authInfo, connectionId) {\n        return super.create(config, authInfo, \"recognition\", connectionId);\n    }\n}\nexports.SpeakerRecognitionConnectionFactory = SpeakerRecognitionConnectionFactory;\nclass VoiceProfileConnectionFactory extends SpeakerRecognitionConnectionFactoryBase {\n    create(config, authInfo, connectionId) {\n        return super.create(config, authInfo, \"profile\", connectionId);\n    }\n}\nexports.VoiceProfileConnectionFactory = VoiceProfileConnectionFactory;\n\n//# sourceMappingURL=SpeakerRecognitionConnectionFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/* eslint-disable max-classes-per-file */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RecognitionEndedEvent = exports.RecognitionCompletionStatus = exports.RecognitionStartedEvent = exports.ConnectingToServiceEvent = exports.ListeningStartedEvent = exports.RecognitionTriggeredEvent = exports.SpeechRecognitionEvent = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nclass SpeechRecognitionEvent extends Exports_js_1.PlatformEvent {\n    constructor(eventName, requestId, sessionId, eventType = Exports_js_1.EventType.Info) {\n        super(eventName, eventType);\n        this.privRequestId = requestId;\n        this.privSessionId = sessionId;\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n    get sessionId() {\n        return this.privSessionId;\n    }\n}\nexports.SpeechRecognitionEvent = SpeechRecognitionEvent;\nclass RecognitionTriggeredEvent extends SpeechRecognitionEvent {\n    constructor(requestId, sessionId, audioSourceId, audioNodeId) {\n        super(\"RecognitionTriggeredEvent\", requestId, sessionId);\n        this.privAudioSourceId = audioSourceId;\n        this.privAudioNodeId = audioNodeId;\n    }\n    get audioSourceId() {\n        return this.privAudioSourceId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n}\nexports.RecognitionTriggeredEvent = RecognitionTriggeredEvent;\nclass ListeningStartedEvent extends SpeechRecognitionEvent {\n    constructor(requestId, sessionId, audioSourceId, audioNodeId) {\n        super(\"ListeningStartedEvent\", requestId, sessionId);\n        this.privAudioSourceId = audioSourceId;\n        this.privAudioNodeId = audioNodeId;\n    }\n    get audioSourceId() {\n        return this.privAudioSourceId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n}\nexports.ListeningStartedEvent = ListeningStartedEvent;\nclass ConnectingToServiceEvent extends SpeechRecognitionEvent {\n    constructor(requestId, authFetchEventid, sessionId) {\n        super(\"ConnectingToServiceEvent\", requestId, sessionId);\n        this.privAuthFetchEventid = authFetchEventid;\n    }\n    get authFetchEventid() {\n        return this.privAuthFetchEventid;\n    }\n}\nexports.ConnectingToServiceEvent = ConnectingToServiceEvent;\nclass RecognitionStartedEvent extends SpeechRecognitionEvent {\n    constructor(requestId, audioSourceId, audioNodeId, authFetchEventId, sessionId) {\n        super(\"RecognitionStartedEvent\", requestId, sessionId);\n        this.privAudioSourceId = audioSourceId;\n        this.privAudioNodeId = audioNodeId;\n        this.privAuthFetchEventId = authFetchEventId;\n    }\n    get audioSourceId() {\n        return this.privAudioSourceId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n    get authFetchEventId() {\n        return this.privAuthFetchEventId;\n    }\n}\nexports.RecognitionStartedEvent = RecognitionStartedEvent;\nvar RecognitionCompletionStatus;\n(function (RecognitionCompletionStatus) {\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"Success\"] = 0] = \"Success\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AudioSourceError\"] = 1] = \"AudioSourceError\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AudioSourceTimeout\"] = 2] = \"AudioSourceTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AuthTokenFetchError\"] = 3] = \"AuthTokenFetchError\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AuthTokenFetchTimeout\"] = 4] = \"AuthTokenFetchTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"UnAuthorized\"] = 5] = \"UnAuthorized\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"ConnectTimeout\"] = 6] = \"ConnectTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"ConnectError\"] = 7] = \"ConnectError\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"ClientRecognitionActivityTimeout\"] = 8] = \"ClientRecognitionActivityTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"UnknownError\"] = 9] = \"UnknownError\";\n})(RecognitionCompletionStatus = exports.RecognitionCompletionStatus || (exports.RecognitionCompletionStatus = {}));\nclass RecognitionEndedEvent extends SpeechRecognitionEvent {\n    constructor(requestId, audioSourceId, audioNodeId, authFetchEventId, sessionId, serviceTag, status, error) {\n        super(\"RecognitionEndedEvent\", requestId, sessionId, status === RecognitionCompletionStatus.Success ? Exports_js_1.EventType.Info : Exports_js_1.EventType.Error);\n        this.privAudioSourceId = audioSourceId;\n        this.privAudioNodeId = audioNodeId;\n        this.privAuthFetchEventId = authFetchEventId;\n        this.privStatus = status;\n        this.privError = error;\n        this.privServiceTag = serviceTag;\n    }\n    get audioSourceId() {\n        return this.privAudioSourceId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n    get authFetchEventId() {\n        return this.privAuthFetchEventId;\n    }\n    get serviceTag() {\n        return this.privServiceTag;\n    }\n    get status() {\n        return this.privStatus;\n    }\n    get error() {\n        return this.privError;\n    }\n}\nexports.RecognitionEndedEvent = RecognitionEndedEvent;\n\n//# sourceMappingURL=RecognitionEvents.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechConnectionMessage = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\nclass SpeechConnectionMessage extends Exports_js_1.ConnectionMessage {\n    constructor(messageType, path, requestId, contentType, body, streamId, additionalHeaders, id) {\n        if (!path) {\n            throw new Exports_js_1.ArgumentNullError(\"path\");\n        }\n        if (!requestId) {\n            throw new Exports_js_1.ArgumentNullError(\"requestId\");\n        }\n        const headers = {};\n        headers[HeaderNames_js_1.HeaderNames.Path] = path;\n        headers[HeaderNames_js_1.HeaderNames.RequestId] = requestId;\n        headers[HeaderNames_js_1.HeaderNames.RequestTimestamp] = new Date().toISOString();\n        if (contentType) {\n            headers[HeaderNames_js_1.HeaderNames.ContentType] = contentType;\n        }\n        if (streamId) {\n            headers[HeaderNames_js_1.HeaderNames.RequestStreamId] = streamId;\n        }\n        if (additionalHeaders) {\n            for (const headerName in additionalHeaders) {\n                if (headerName) {\n                    headers[headerName] = additionalHeaders[headerName];\n                }\n            }\n        }\n        if (id) {\n            super(messageType, body, headers, id);\n        }\n        else {\n            super(messageType, body, headers);\n        }\n        this.privPath = path;\n        this.privRequestId = requestId;\n        this.privContentType = contentType;\n        this.privStreamId = streamId;\n        this.privAdditionalHeaders = additionalHeaders;\n    }\n    get path() {\n        return this.privPath;\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n    get contentType() {\n        return this.privContentType;\n    }\n    get streamId() {\n        return this.privStreamId;\n    }\n    get additionalHeaders() {\n        return this.privAdditionalHeaders;\n    }\n    static fromConnectionMessage(message) {\n        let path = null;\n        let requestId = null;\n        let contentType = null;\n        // let requestTimestamp = null;\n        let streamId = null;\n        const additionalHeaders = {};\n        if (message.headers) {\n            for (const headerName in message.headers) {\n                if (headerName) {\n                    if (headerName.toLowerCase() === HeaderNames_js_1.HeaderNames.Path.toLowerCase()) {\n                        path = message.headers[headerName];\n                    }\n                    else if (headerName.toLowerCase() === HeaderNames_js_1.HeaderNames.RequestId.toLowerCase()) {\n                        requestId = message.headers[headerName];\n                        // } else if (headerName.toLowerCase() === HeaderNames.RequestTimestamp.toLowerCase()) {\n                        //  requestTimestamp = message.headers[headerName];\n                    }\n                    else if (headerName.toLowerCase() === HeaderNames_js_1.HeaderNames.ContentType.toLowerCase()) {\n                        contentType = message.headers[headerName];\n                    }\n                    else if (headerName.toLowerCase() === HeaderNames_js_1.HeaderNames.RequestStreamId.toLowerCase()) {\n                        streamId = message.headers[headerName];\n                    }\n                    else {\n                        additionalHeaders[headerName] = message.headers[headerName];\n                    }\n                }\n            }\n        }\n        return new SpeechConnectionMessage(message.messageType, path, requestId, contentType, message.body, streamId, additionalHeaders, message.id);\n    }\n}\nexports.SpeechConnectionMessage = SpeechConnectionMessage;\n\n//# sourceMappingURL=SpeechConnectionMessage.Internal.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SegmentationMode = void 0;\n/**\n * The segmentation mode.\n */\nvar SegmentationMode;\n(function (SegmentationMode) {\n    SegmentationMode[\"Normal\"] = \"Normal\";\n    SegmentationMode[\"Disabled\"] = \"Disabled\";\n    SegmentationMode[\"Custom\"] = \"Custom\";\n    SegmentationMode[\"Semantic\"] = \"Semantic\";\n})(SegmentationMode = exports.SegmentationMode || (exports.SegmentationMode = {}));\n\n//# sourceMappingURL=Segmentation.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NextAction = void 0;\n/**\n * The action to take on success\n */\nvar NextAction;\n(function (NextAction) {\n    NextAction[\"None\"] = \"None\";\n    NextAction[\"Synthesize\"] = \"Synthesize\";\n})(NextAction = exports.NextAction || (exports.NextAction = {}));\n\n//# sourceMappingURL=OnSuccess.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Mode = void 0;\n/**\n * Result type\n */\nvar Mode;\n(function (Mode) {\n    Mode[\"None\"] = \"None\";\n    Mode[\"Always\"] = \"Always\";\n})(Mode = exports.Mode || (exports.Mode = {}));\n\n//# sourceMappingURL=InterimResults.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LanguageIdDetectionPriority = exports.LanguageIdDetectionMode = void 0;\n/**\n * The enum that represents which mode will language detection take place\n * There is only detectAtAudioStart mode for now as language detection models are not trained for different modes\n * This enum can be extended in future to support different modes\n */\nvar LanguageIdDetectionMode;\n(function (LanguageIdDetectionMode) {\n    LanguageIdDetectionMode[\"DetectAtAudioStart\"] = \"DetectAtAudioStart\";\n    LanguageIdDetectionMode[\"DetectContinuous\"] = \"DetectContinuous\";\n    LanguageIdDetectionMode[\"DetectSegments\"] = \"DetectSegments\";\n})(LanguageIdDetectionMode = exports.LanguageIdDetectionMode || (exports.LanguageIdDetectionMode = {}));\n/**\n * The language id detection mode, setting this will load the detection setting of MaxAudioDuration and MaxSpeechDuration\n * If the maxAudioDuration and maxSpeechDuration is set in the speech.context, then this detection mode will be ignored\n */\nvar LanguageIdDetectionPriority;\n(function (LanguageIdDetectionPriority) {\n    /**\n     * default, Service decides the best mode to use.\n     */\n    LanguageIdDetectionPriority[\"Auto\"] = \"Auto\";\n    /**\n     * Offers lower latency via a trade-off of accuracy.\n     */\n    LanguageIdDetectionPriority[\"PrioritizeLatency\"] = \"PrioritizeLatency\";\n    /**\n     * Offers higher accuracy via a trade-off of latency.\n     */\n    LanguageIdDetectionPriority[\"PrioritizeAccuracy\"] = \"PrioritizeAccuracy\";\n})(LanguageIdDetectionPriority = exports.LanguageIdDetectionPriority || (exports.LanguageIdDetectionPriority = {}));\n\n//# sourceMappingURL=LanguageIdContext.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NextAction = void 0;\n/**\n * The action to take on successful language detection\n */\nvar NextAction;\n(function (NextAction) {\n    NextAction[\"Recognize\"] = \"Recognize\";\n    NextAction[\"None\"] = \"None\";\n})(NextAction = exports.NextAction || (exports.NextAction = {}));\n\n//# sourceMappingURL=OnSuccess.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OnUnknownAction = void 0;\n/**\n * An enum that defines actions that can be taken on unknown language detection\n */\nvar OnUnknownAction;\n(function (OnUnknownAction) {\n    OnUnknownAction[\"RecognizeWithDefaultLanguage\"] = \"RecognizeWithDefaultLanguage\";\n    OnUnknownAction[\"None\"] = \"None\";\n})(OnUnknownAction = exports.OnUnknownAction || (exports.OnUnknownAction = {}));\n\n//# sourceMappingURL=OnUnknown.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResultType = void 0;\n/**\n * The result type enum\n */\nvar ResultType;\n(function (ResultType) {\n    ResultType[\"Auto\"] = \"Auto\";\n    ResultType[\"StableFragment\"] = \"StableFragment\";\n    ResultType[\"Hypothesis\"] = \"Hypothesis\";\n    ResultType[\"None\"] = \"None\";\n})(ResultType = exports.ResultType || (exports.ResultType = {}));\n\n//# sourceMappingURL=InterimResults.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PhraseResultOutputType = void 0;\n/**\n * The phrase result output type\n */\nvar PhraseResultOutputType;\n(function (PhraseResultOutputType) {\n    PhraseResultOutputType[\"Always\"] = \"Always\";\n    PhraseResultOutputType[\"None\"] = \"None\";\n})(PhraseResultOutputType = exports.PhraseResultOutputType || (exports.PhraseResultOutputType = {}));\n\n//# sourceMappingURL=PhraseResults.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NextAction = void 0;\n/**\n * The action enum when speech recognition return a final phrase result\n */\nvar NextAction;\n(function (NextAction) {\n    NextAction[\"None\"] = \"None\";\n    NextAction[\"Translate\"] = \"Translate\";\n})(NextAction = exports.NextAction || (exports.NextAction = {}));\n\n//# sourceMappingURL=OnSuccess.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServiceRecognizerBase = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst Exports_js_3 = require(\"../sdk/Exports.js\");\nconst Exports_js_4 = require(\"./Exports.js\");\nconst SpeechConnectionMessage_Internal_js_1 = require(\"./SpeechConnectionMessage.Internal.js\");\nconst Segmentation_js_1 = require(\"./ServiceMessages/PhraseDetection/Segmentation.js\");\nconst PhraseDetectionContext_js_1 = require(\"./ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\nconst OnSuccess_js_1 = require(\"./ServiceMessages/Translation/OnSuccess.js\");\nconst InterimResults_js_1 = require(\"./ServiceMessages/Translation/InterimResults.js\");\nconst LanguageIdContext_js_1 = require(\"./ServiceMessages/LanguageId/LanguageIdContext.js\");\nconst OnSuccess_js_2 = require(\"./ServiceMessages/LanguageId/OnSuccess.js\");\nconst OnUnknown_js_1 = require(\"./ServiceMessages/LanguageId/OnUnknown.js\");\nconst InterimResults_js_2 = require(\"./ServiceMessages/PhraseOutput/InterimResults.js\");\nconst PhraseResults_js_1 = require(\"./ServiceMessages/PhraseOutput/PhraseResults.js\");\nconst OnSuccess_js_3 = require(\"./ServiceMessages/PhraseDetection/OnSuccess.js\");\nclass ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, recognizer) {\n        // A promise for a configured connection.\n        // Do not consume directly, call fetchConnection instead.\n        this.privConnectionConfigurationPromise = undefined;\n        // A promise for a connection, but one that has not had the speech context sent yet.\n        // Do not consume directly, call fetchConnection instead.\n        this.privConnectionPromise = undefined;\n        this.privSetTimeout = setTimeout;\n        this.privIsLiveAudio = false;\n        this.privAverageBytesPerMs = 0;\n        this.privEnableSpeakerId = false;\n        this.privExpectContentAssessmentResponse = false;\n        this.recognizeOverride = undefined;\n        this.recognizeSpeaker = undefined;\n        this.disconnectOverride = undefined;\n        this.receiveMessageOverride = undefined;\n        this.sendPrePayloadJSONOverride = undefined;\n        this.postConnectImplOverride = undefined;\n        this.configConnectionOverride = undefined;\n        this.handleSpeechPhraseMessage = undefined;\n        this.handleSpeechHypothesisMessage = undefined;\n        if (!authentication) {\n            throw new Exports_js_2.ArgumentNullError(\"authentication\");\n        }\n        if (!connectionFactory) {\n            throw new Exports_js_2.ArgumentNullError(\"connectionFactory\");\n        }\n        if (!audioSource) {\n            throw new Exports_js_2.ArgumentNullError(\"audioSource\");\n        }\n        if (!recognizerConfig) {\n            throw new Exports_js_2.ArgumentNullError(\"recognizerConfig\");\n        }\n        this.privEnableSpeakerId = recognizerConfig.isSpeakerDiarizationEnabled;\n        this.privMustReportEndOfStream = false;\n        this.privAuthentication = authentication;\n        this.privConnectionFactory = connectionFactory;\n        this.privAudioSource = audioSource;\n        this.privRecognizerConfig = recognizerConfig;\n        this.privIsDisposed = false;\n        this.privRecognizer = recognizer;\n        this.privRequestSession = new Exports_js_4.RequestSession(this.privAudioSource.id());\n        this.privConnectionEvents = new Exports_js_2.EventSource();\n        this.privServiceEvents = new Exports_js_2.EventSource();\n        this.privDynamicGrammar = new Exports_js_4.DynamicGrammarBuilder();\n        this.privSpeechContext = new Exports_js_4.SpeechContext(this.privDynamicGrammar);\n        this.privAgentConfig = new Exports_js_4.AgentConfig();\n        const webWorkerLoadType = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.WebWorkerLoadType, \"on\").toLowerCase();\n        if (webWorkerLoadType === \"on\" && typeof (Blob) !== \"undefined\" && typeof (Worker) !== \"undefined\") {\n            this.privSetTimeout = Exports_js_2.Timeout.setTimeout;\n        }\n        else {\n            if (typeof window !== \"undefined\") {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                this.privSetTimeout = window.setTimeout.bind(window);\n            }\n            if (typeof globalThis !== \"undefined\") {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                this.privSetTimeout = globalThis.setTimeout.bind(globalThis);\n            }\n        }\n        this.connectionEvents.attach((connectionEvent) => {\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\n                const connectionClosedEvent = connectionEvent;\n                if (connectionClosedEvent.statusCode === 1003 ||\n                    connectionClosedEvent.statusCode === 1007 ||\n                    connectionClosedEvent.statusCode === 1002 ||\n                    connectionClosedEvent.statusCode === 4000 ||\n                    this.privRequestSession.numConnectionAttempts > this.privRecognizerConfig.maxRetryCount) {\n                    void this.cancelRecognitionLocal(Exports_js_3.CancellationReason.Error, connectionClosedEvent.statusCode === 1007 ? Exports_js_3.CancellationErrorCode.BadRequestParameters : Exports_js_3.CancellationErrorCode.ConnectionFailure, `${connectionClosedEvent.reason} websocket error code: ${connectionClosedEvent.statusCode}`);\n                }\n            }\n        });\n        if (this.privEnableSpeakerId) {\n            this.privDiarizationSessionId = (0, Exports_js_2.createNoDashGuid)();\n        }\n    }\n    setTranslationJson() {\n        const targetLanguages = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined);\n        if (targetLanguages !== undefined) {\n            const languages = targetLanguages.split(\",\");\n            const translationVoice = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationVoice, undefined);\n            const categoryId = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationCategoryId, undefined);\n            const action = (translationVoice !== undefined) ? OnSuccess_js_1.NextAction.Synthesize : OnSuccess_js_1.NextAction.None;\n            this.privSpeechContext.getContext().translation = {\n                onPassthrough: { action },\n                onSuccess: { action },\n                output: {\n                    includePassThroughResults: true,\n                    interimResults: { mode: InterimResults_js_1.Mode.Always }\n                },\n                targetLanguages: languages,\n            };\n            // Add category if specified\n            if (categoryId !== undefined) {\n                this.privSpeechContext.getContext().translation.category = categoryId;\n            }\n            if (translationVoice !== undefined) {\n                const languageToVoiceMap = {};\n                for (const lang of languages) {\n                    languageToVoiceMap[lang] = translationVoice;\n                }\n                this.privSpeechContext.getContext().synthesis = {\n                    defaultVoices: languageToVoiceMap\n                };\n            }\n            // Configure phrase detection for translation\n            const phraseDetection = this.privSpeechContext.getContext().phraseDetection || {};\n            phraseDetection.onSuccess = { action: OnSuccess_js_3.NextAction.Translate };\n            phraseDetection.onInterim = { action: OnSuccess_js_3.NextAction.Translate };\n            this.privSpeechContext.getContext().phraseDetection = phraseDetection;\n        }\n    }\n    setSpeechSegmentationTimeoutJson() {\n        const speechSegmentationSilenceTimeoutMs = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.Speech_SegmentationSilenceTimeoutMs, undefined);\n        const speechSegmentationMaximumTimeMs = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.Speech_SegmentationMaximumTimeMs, undefined);\n        const speechSegmentationStrategy = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.Speech_SegmentationStrategy, undefined);\n        const segmentation = {\n            mode: Segmentation_js_1.SegmentationMode.Normal,\n        };\n        let configuredSegment = false;\n        if (speechSegmentationStrategy !== undefined) {\n            configuredSegment = true;\n            let segMode = Segmentation_js_1.SegmentationMode.Normal;\n            switch (speechSegmentationStrategy.toLowerCase()) {\n                case \"default\":\n                    break;\n                case \"time\":\n                    segMode = Segmentation_js_1.SegmentationMode.Custom;\n                    break;\n                case \"semantic\":\n                    segMode = Segmentation_js_1.SegmentationMode.Semantic;\n                    break;\n            }\n            segmentation.mode = segMode;\n        }\n        if (speechSegmentationSilenceTimeoutMs !== undefined) {\n            configuredSegment = true;\n            const segmentationSilenceTimeoutMs = parseInt(speechSegmentationSilenceTimeoutMs, 10);\n            segmentation.mode = Segmentation_js_1.SegmentationMode.Custom;\n            segmentation.segmentationSilenceTimeoutMs = segmentationSilenceTimeoutMs;\n        }\n        if (speechSegmentationMaximumTimeMs !== undefined) {\n            configuredSegment = true;\n            const segmentationMaximumTimeMs = parseInt(speechSegmentationMaximumTimeMs, 10);\n            segmentation.mode = Segmentation_js_1.SegmentationMode.Custom;\n            segmentation.segmentationForcedTimeoutMs = segmentationMaximumTimeMs;\n        }\n        if (configuredSegment) {\n            const phraseDetection = this.privSpeechContext.getContext().phraseDetection || {};\n            phraseDetection.mode = this.recognitionMode;\n            switch (this.recognitionMode) {\n                case PhraseDetectionContext_js_1.RecognitionMode.Conversation:\n                    phraseDetection.conversation = phraseDetection.conversation ?? { segmentation: {} };\n                    phraseDetection.conversation.segmentation = segmentation;\n                    break;\n                case PhraseDetectionContext_js_1.RecognitionMode.Interactive:\n                    phraseDetection.interactive = phraseDetection.interactive ?? { segmentation: {} };\n                    phraseDetection.interactive.segmentation = segmentation;\n                    break;\n                case PhraseDetectionContext_js_1.RecognitionMode.Dictation:\n                    phraseDetection.dictation = phraseDetection.dictation ?? {};\n                    phraseDetection.dictation.segmentation = segmentation;\n                    break;\n            }\n            this.privSpeechContext.getContext().phraseDetection = phraseDetection;\n        }\n    }\n    setLanguageIdJson() {\n        const phraseDetection = this.privSpeechContext.getContext().phraseDetection || {};\n        if (this.privRecognizerConfig.autoDetectSourceLanguages !== undefined) {\n            const sourceLanguages = this.privRecognizerConfig.autoDetectSourceLanguages.split(\",\");\n            if (sourceLanguages.length === 1 && sourceLanguages[0] === Exports_js_4.AutoDetectSourceLanguagesOpenRangeOptionName) {\n                sourceLanguages[0] = \"UND\";\n            }\n            let speechContextLidMode;\n            if (this.privRecognizerConfig.languageIdMode === \"Continuous\") {\n                speechContextLidMode = LanguageIdContext_js_1.LanguageIdDetectionMode.DetectContinuous;\n            }\n            else { // recognizerConfig.languageIdMode === \"AtStart\"\n                speechContextLidMode = LanguageIdContext_js_1.LanguageIdDetectionMode.DetectAtAudioStart;\n            }\n            this.privSpeechContext.getContext().languageId = {\n                languages: sourceLanguages,\n                mode: speechContextLidMode,\n                onSuccess: { action: OnSuccess_js_2.NextAction.Recognize },\n                onUnknown: { action: OnUnknown_js_1.OnUnknownAction.None },\n                priority: LanguageIdContext_js_1.LanguageIdDetectionPriority.PrioritizeLatency\n            };\n            this.privSpeechContext.getContext().phraseOutput = {\n                interimResults: {\n                    resultType: InterimResults_js_2.ResultType.Auto\n                },\n                phraseResults: {\n                    resultType: PhraseResults_js_1.PhraseResultOutputType.Always\n                }\n            };\n            const customModels = this.privRecognizerConfig.sourceLanguageModels;\n            if (customModels !== undefined) {\n                phraseDetection.customModels = customModels;\n                phraseDetection.onInterim = { action: OnSuccess_js_3.NextAction.None };\n                phraseDetection.onSuccess = { action: OnSuccess_js_3.NextAction.None };\n            }\n        }\n        // No longer setting translation-specific configuration here\n        // This is now handled in setTranslationJson and setupTranslationWithLanguageId methods\n        this.privSpeechContext.getContext().phraseDetection = phraseDetection;\n    }\n    setOutputDetailLevelJson() {\n        if (this.privEnableSpeakerId) {\n            const requestWordLevelTimestamps = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"false\").toLowerCase();\n            if (requestWordLevelTimestamps === \"true\") {\n                this.privSpeechContext.setWordLevelTimings();\n            }\n            else {\n                const outputFormat = this.privRecognizerConfig.parameters.getProperty(Exports_js_4.OutputFormatPropertyName, Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Simple]).toLowerCase();\n                if (outputFormat === Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Detailed].toLocaleLowerCase()) {\n                    this.privSpeechContext.setDetailedOutputFormat();\n                }\n            }\n        }\n    }\n    get isSpeakerDiarizationEnabled() {\n        return this.privEnableSpeakerId;\n    }\n    get audioSource() {\n        return this.privAudioSource;\n    }\n    get speechContext() {\n        return this.privSpeechContext;\n    }\n    get dynamicGrammar() {\n        return this.privDynamicGrammar;\n    }\n    get agentConfig() {\n        return this.privAgentConfig;\n    }\n    set conversationTranslatorToken(token) {\n        this.privRecognizerConfig.parameters.setProperty(Exports_js_3.PropertyId.ConversationTranslator_Token, token);\n    }\n    set voiceProfileType(type) {\n        this.privRecognizerConfig.parameters.setProperty(Exports_js_3.PropertyId.SpeechServiceConnection_SpeakerIdMode, type);\n    }\n    set authentication(auth) {\n        this.privAuthentication = auth;\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    async dispose(reason) {\n        this.privIsDisposed = true;\n        if (this.privConnectionPromise !== undefined) {\n            try {\n                const connection = await this.privConnectionPromise;\n                await connection.dispose(reason);\n            }\n            catch (error) {\n                // The connection is in a bad state. But we're trying to kill it, so...\n                return;\n            }\n        }\n    }\n    get connectionEvents() {\n        return this.privConnectionEvents;\n    }\n    get serviceEvents() {\n        return this.privServiceEvents;\n    }\n    get recognitionMode() {\n        return this.privRecognizerConfig.recognitionMode;\n    }\n    async recognize(recoMode, successCallback, errorCallBack) {\n        if (this.recognizeOverride !== undefined) {\n            await this.recognizeOverride(recoMode, successCallback, errorCallBack);\n            return;\n        }\n        // Clear the existing configuration promise to force a re-transmission of config and context.\n        this.privConnectionConfigurationPromise = undefined;\n        this.privRecognizerConfig.recognitionMode = recoMode;\n        if (this.privRecognizerConfig.recognitionEndpointVersion === \"2\") {\n            const phraseDetection = this.privSpeechContext.getContext().phraseDetection || {};\n            phraseDetection.mode = recoMode;\n            this.privSpeechContext.getContext().phraseDetection = phraseDetection;\n        }\n        // Set language ID (if configured)\n        this.setLanguageIdJson();\n        // Then set translation (if configured)\n        this.setTranslationJson();\n        // Configure the integration between language ID and translation (if both are used)\n        if (this.privRecognizerConfig.autoDetectSourceLanguages !== undefined &&\n            this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\n            this.setupTranslationWithLanguageId();\n        }\n        this.setSpeechSegmentationTimeoutJson();\n        this.setOutputDetailLevelJson();\n        this.privSuccessCallback = successCallback;\n        this.privErrorCallback = errorCallBack;\n        this.privRequestSession.startNewRecognition();\n        this.privRequestSession.listenForServiceTelemetry(this.privAudioSource.events);\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\n        const conPromise = this.connectImpl();\n        let audioNode;\n        try {\n            const audioStreamNode = await this.audioSource.attach(this.privRequestSession.audioNodeId);\n            const format = await this.audioSource.format;\n            const deviceInfo = await this.audioSource.deviceInfo;\n            this.privIsLiveAudio = deviceInfo.type && deviceInfo.type === Exports_js_4.type.Microphones;\n            audioNode = new Exports_js_1.ReplayableAudioNode(audioStreamNode, format.avgBytesPerSec);\n            await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\n            this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\n        }\n        catch (error) {\n            await this.privRequestSession.onStopRecognizing();\n            throw error;\n        }\n        try {\n            await conPromise;\n        }\n        catch (error) {\n            await this.cancelRecognitionLocal(Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.ConnectionFailure, error);\n            return;\n        }\n        const sessionStartEventArgs = new Exports_js_3.SessionEventArgs(this.privRequestSession.sessionId);\n        if (!!this.privRecognizer.sessionStarted) {\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\n        }\n        void this.receiveMessage();\n        const audioSendPromise = this.sendAudio(audioNode);\n        audioSendPromise.catch(async (error) => {\n            await this.cancelRecognitionLocal(Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.RuntimeError, error);\n        });\n        return;\n    }\n    async stopRecognizing() {\n        if (this.privRequestSession.isRecognizing) {\n            try {\n                await this.audioSource.turnOff();\n                await this.sendFinalAudio();\n                await this.privRequestSession.onStopRecognizing();\n                await this.privRequestSession.turnCompletionPromise;\n            }\n            finally {\n                await this.privRequestSession.dispose();\n            }\n        }\n        return;\n    }\n    async connect() {\n        await this.connectImpl();\n        return Promise.resolve();\n    }\n    connectAsync(cb, err) {\n        this.connectImpl().then(() => {\n            try {\n                if (!!cb) {\n                    cb();\n                }\n            }\n            catch (e) {\n                if (!!err) {\n                    err(e);\n                }\n            }\n        }, (reason) => {\n            try {\n                if (!!err) {\n                    err(reason);\n                }\n                /* eslint-disable no-empty */\n            }\n            catch (error) {\n            }\n        });\n    }\n    async disconnect() {\n        await this.cancelRecognitionLocal(Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.NoError, \"Disconnecting\");\n        if (this.disconnectOverride !== undefined) {\n            await this.disconnectOverride();\n        }\n        if (this.privConnectionPromise !== undefined) {\n            try {\n                await (await this.privConnectionPromise).dispose();\n            }\n            catch (error) {\n            }\n        }\n        this.privConnectionPromise = undefined;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    sendMessage(message) {\n        return;\n    }\n    async sendNetworkMessage(path, payload) {\n        const type = typeof payload === \"string\" ? Exports_js_2.MessageType.Text : Exports_js_2.MessageType.Binary;\n        const contentType = typeof payload === \"string\" ? \"application/json\" : \"\";\n        const connection = await this.fetchConnection();\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(type, path, this.privRequestSession.requestId, contentType, payload));\n    }\n    set activityTemplate(messagePayload) {\n        this.privActivityTemplate = messagePayload;\n    }\n    get activityTemplate() {\n        return this.privActivityTemplate;\n    }\n    set expectContentAssessmentResponse(value) {\n        this.privExpectContentAssessmentResponse = value;\n    }\n    async sendTelemetryData() {\n        const telemetryData = this.privRequestSession.getTelemetry();\n        if (ServiceRecognizerBase.telemetryDataEnabled !== true ||\n            this.privIsDisposed ||\n            null === telemetryData) {\n            return;\n        }\n        if (!!ServiceRecognizerBase.telemetryData) {\n            try {\n                ServiceRecognizerBase.telemetryData(telemetryData);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n        const connection = await this.fetchConnection();\n        await connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"telemetry\", this.privRequestSession.requestId, \"application/json\", telemetryData));\n    }\n    // Cancels recognition.\n    async cancelRecognitionLocal(cancellationReason, errorCode, error) {\n        if (!!this.privRequestSession.isRecognizing) {\n            await this.privRequestSession.onStopRecognizing();\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, cancellationReason, errorCode, error);\n        }\n    }\n    async receiveMessage() {\n        try {\n            if (this.privIsDisposed) {\n                // We're done.\n                return;\n            }\n            let connection = await this.fetchConnection();\n            const message = await connection.read();\n            if (this.receiveMessageOverride !== undefined) {\n                return this.receiveMessageOverride();\n            }\n            // indicates we are draining the queue and it came with no message;\n            if (!message) {\n                return this.receiveMessage();\n            }\n            this.privServiceHasSentMessage = true;\n            const connectionMessage = SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage.fromConnectionMessage(message);\n            if (connectionMessage.requestId.toLowerCase() === this.privRequestSession.requestId.toLowerCase()) {\n                switch (connectionMessage.path.toLowerCase()) {\n                    case \"turn.start\":\n                        this.privMustReportEndOfStream = true;\n                        this.privRequestSession.onServiceTurnStartResponse();\n                        break;\n                    case \"speech.startdetected\":\n                        const speechStartDetected = Exports_js_4.SpeechDetected.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                        const speechStartEventArgs = new Exports_js_3.RecognitionEventArgs(speechStartDetected.Offset, this.privRequestSession.sessionId);\n                        if (!!this.privRecognizer.speechStartDetected) {\n                            this.privRecognizer.speechStartDetected(this.privRecognizer, speechStartEventArgs);\n                        }\n                        break;\n                    case \"speech.enddetected\":\n                        let json;\n                        if (connectionMessage.textBody.length > 0) {\n                            json = connectionMessage.textBody;\n                        }\n                        else {\n                            // If the request was empty, the JSON returned is empty.\n                            json = \"{ Offset: 0 }\";\n                        }\n                        const speechStopDetected = Exports_js_4.SpeechDetected.fromJSON(json, this.privRequestSession.currentTurnAudioOffset);\n                        const speechStopEventArgs = new Exports_js_3.RecognitionEventArgs(speechStopDetected.Offset + this.privRequestSession.currentTurnAudioOffset, this.privRequestSession.sessionId);\n                        if (!!this.privRecognizer.speechEndDetected) {\n                            this.privRecognizer.speechEndDetected(this.privRecognizer, speechStopEventArgs);\n                        }\n                        break;\n                    case \"turn.end\":\n                        await this.sendTelemetryData();\n                        if (this.privRequestSession.isSpeechEnded && this.privMustReportEndOfStream) {\n                            this.privMustReportEndOfStream = false;\n                            await this.cancelRecognitionLocal(Exports_js_3.CancellationReason.EndOfStream, Exports_js_3.CancellationErrorCode.NoError, undefined);\n                        }\n                        const sessionStopEventArgs = new Exports_js_3.SessionEventArgs(this.privRequestSession.sessionId);\n                        await this.privRequestSession.onServiceTurnEndResponse(this.privRecognizerConfig.isContinuousRecognition);\n                        if (!this.privRecognizerConfig.isContinuousRecognition || this.privRequestSession.isSpeechEnded || !this.privRequestSession.isRecognizing) {\n                            if (!!this.privRecognizer.sessionStopped) {\n                                this.privRecognizer.sessionStopped(this.privRecognizer, sessionStopEventArgs);\n                            }\n                            return;\n                        }\n                        else {\n                            connection = await this.fetchConnection();\n                            await this.sendPrePayloadJSON(connection);\n                        }\n                        break;\n                    default:\n                        if (!await this.processTypeSpecificMessages(connectionMessage)) {\n                            // here are some messages that the derived class has not processed, dispatch them to connect class\n                            if (!!this.privServiceEvents) {\n                                this.serviceEvents.onEvent(new Exports_js_2.ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\n                            }\n                        }\n                }\n            }\n            return this.receiveMessage();\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    updateSpeakerDiarizationAudioOffset() {\n        const bytesSent = this.privRequestSession.recognitionBytesSent;\n        const audioOffsetMs = this.privAverageBytesPerMs !== 0 ? bytesSent / this.privAverageBytesPerMs : 0;\n        this.privSpeechContext.setSpeakerDiarizationAudioOffsetMs(audioOffsetMs);\n    }\n    sendSpeechContext(connection, generateNewRequestId) {\n        if (this.privEnableSpeakerId) {\n            this.updateSpeakerDiarizationAudioOffset();\n        }\n        const speechContextJson = this.speechContext.toJSON();\n        if (generateNewRequestId) {\n            this.privRequestSession.onSpeechContext();\n        }\n        if (speechContextJson) {\n            return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"speech.context\", this.privRequestSession.requestId, \"application/json\", speechContextJson));\n        }\n        return;\n    }\n    setupTranslationWithLanguageId() {\n        const targetLanguages = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined);\n        const hasLanguageId = this.privRecognizerConfig.autoDetectSourceLanguages !== undefined;\n        if (targetLanguages !== undefined && hasLanguageId) {\n            // Configure phraseOutput for translation + language ID scenario\n            this.privSpeechContext.getContext().phraseOutput = {\n                interimResults: {\n                    resultType: InterimResults_js_2.ResultType.None\n                },\n                phraseResults: {\n                    resultType: PhraseResults_js_1.PhraseResultOutputType.None\n                }\n            };\n            // Handle custom language models and voice mapping\n            const translationContext = this.privSpeechContext.getContext().translation;\n            if (translationContext) {\n                const customModels = this.privRecognizerConfig.sourceLanguageModels;\n                if (customModels !== undefined && customModels.length > 0) {\n                    const phraseDetection = this.privSpeechContext.getContext().phraseDetection || {};\n                    phraseDetection.customModels = customModels;\n                    this.privSpeechContext.getContext().phraseDetection = phraseDetection;\n                }\n                const translationVoice = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationVoice, undefined);\n                if (translationVoice !== undefined) {\n                    // Update translation actions for synthesis\n                    translationContext.onSuccess = { action: OnSuccess_js_1.NextAction.Synthesize };\n                    translationContext.onPassthrough = { action: OnSuccess_js_1.NextAction.Synthesize };\n                }\n            }\n        }\n    }\n    noOp() {\n        // operation not supported\n        return;\n    }\n    // Encapsulated for derived service recognizers that need to send additional JSON\n    async sendPrePayloadJSON(connection, generateNewRequestId = true) {\n        if (this.sendPrePayloadJSONOverride !== undefined) {\n            return this.sendPrePayloadJSONOverride(connection);\n        }\n        await this.sendSpeechContext(connection, generateNewRequestId);\n        await this.sendWaveHeader(connection);\n        return;\n    }\n    async sendWaveHeader(connection) {\n        const format = await this.audioSource.format;\n        // this.writeBufferToConsole(format.header);\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Binary, \"audio\", this.privRequestSession.requestId, \"audio/x-wav\", format.header));\n    }\n    // Establishes a websocket connection to the end point.\n    connectImpl() {\n        if (this.privConnectionPromise !== undefined) {\n            return this.privConnectionPromise.then((connection) => {\n                if (connection.state() === Exports_js_2.ConnectionState.Disconnected) {\n                    this.privConnectionId = null;\n                    this.privConnectionPromise = undefined;\n                    this.privServiceHasSentMessage = false;\n                    return this.connectImpl();\n                }\n                return this.privConnectionPromise;\n            }, () => {\n                this.privConnectionId = null;\n                this.privConnectionPromise = undefined;\n                this.privServiceHasSentMessage = false;\n                return this.connectImpl();\n            });\n        }\n        this.privConnectionPromise = this.retryableConnect();\n        // Attach an empty handler to allow the promise to run in the background while\n        // other startup events happen. It'll eventually be awaited on.\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        this.privConnectionPromise.catch(() => { });\n        if (this.postConnectImplOverride !== undefined) {\n            return this.postConnectImplOverride(this.privConnectionPromise);\n        }\n        return this.privConnectionPromise;\n    }\n    sendSpeechServiceConfig(connection, requestSession, SpeechServiceConfigJson) {\n        requestSession.onSpeechContext();\n        // filter out anything that is not required for the service to work.\n        if (ServiceRecognizerBase.telemetryDataEnabled !== true) {\n            const withTelemetry = JSON.parse(SpeechServiceConfigJson);\n            const replacement = {\n                context: {\n                    system: withTelemetry.context.system,\n                },\n            };\n            SpeechServiceConfigJson = JSON.stringify(replacement);\n        }\n        if (this.privRecognizerConfig.parameters.getProperty(\"f0f5debc-f8c9-4892-ac4b-90a7ab359fd2\", \"false\").toLowerCase() === \"true\") {\n            const json = JSON.parse(SpeechServiceConfigJson);\n            json.context.DisableReferenceChannel = \"True\";\n            json.context.MicSpec = \"1_0_0\";\n            SpeechServiceConfigJson = JSON.stringify(json);\n        }\n        if (SpeechServiceConfigJson) {\n            return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"speech.config\", requestSession.requestId, \"application/json\", SpeechServiceConfigJson));\n        }\n        return;\n    }\n    async fetchConnection() {\n        if (this.privConnectionConfigurationPromise !== undefined) {\n            return this.privConnectionConfigurationPromise.then((connection) => {\n                if (connection.state() === Exports_js_2.ConnectionState.Disconnected) {\n                    this.privConnectionId = null;\n                    this.privConnectionConfigurationPromise = undefined;\n                    this.privServiceHasSentMessage = false;\n                    return this.fetchConnection();\n                }\n                return this.privConnectionConfigurationPromise;\n            }, () => {\n                this.privConnectionId = null;\n                this.privConnectionConfigurationPromise = undefined;\n                this.privServiceHasSentMessage = false;\n                return this.fetchConnection();\n            });\n        }\n        this.privConnectionConfigurationPromise = this.configureConnection();\n        return await this.privConnectionConfigurationPromise;\n    }\n    async sendAudio(audioStreamNode) {\n        const audioFormat = await this.audioSource.format;\n        this.privAverageBytesPerMs = audioFormat.avgBytesPerSec / 1000;\n        // The time we last sent data to the service.\n        let nextSendTime = Date.now();\n        // Max amount to send before we start to throttle\n        const fastLaneSizeMs = this.privRecognizerConfig.parameters.getProperty(\"SPEECH-TransmitLengthBeforThrottleMs\", \"5000\");\n        const maxSendUnthrottledBytes = audioFormat.avgBytesPerSec / 1000 * parseInt(fastLaneSizeMs, 10);\n        const startRecogNumber = this.privRequestSession.recogNumber;\n        const readAndUploadCycle = async () => {\n            // If speech is done, stop sending audio.\n            if (!this.privIsDisposed &&\n                !this.privRequestSession.isSpeechEnded &&\n                this.privRequestSession.isRecognizing &&\n                this.privRequestSession.recogNumber === startRecogNumber) {\n                const connection = await this.fetchConnection();\n                const audioStreamChunk = await audioStreamNode.read();\n                // we have a new audio chunk to upload.\n                if (this.privRequestSession.isSpeechEnded) {\n                    // If service already recognized audio end then don't send any more audio\n                    return;\n                }\n                let payload;\n                let sendDelay;\n                if (!audioStreamChunk || audioStreamChunk.isEnd) {\n                    payload = null;\n                    sendDelay = 0;\n                }\n                else {\n                    payload = audioStreamChunk.buffer;\n                    this.privRequestSession.onAudioSent(payload.byteLength);\n                    if (maxSendUnthrottledBytes >= this.privRequestSession.bytesSent) {\n                        sendDelay = 0;\n                    }\n                    else {\n                        sendDelay = Math.max(0, nextSendTime - Date.now());\n                    }\n                }\n                if (0 !== sendDelay) {\n                    await this.delay(sendDelay);\n                }\n                if (payload !== null) {\n                    nextSendTime = Date.now() + (payload.byteLength * 1000 / (audioFormat.avgBytesPerSec * 2));\n                }\n                // Are we still alive?\n                if (!this.privIsDisposed &&\n                    !this.privRequestSession.isSpeechEnded &&\n                    this.privRequestSession.isRecognizing &&\n                    this.privRequestSession.recogNumber === startRecogNumber) {\n                    connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Binary, \"audio\", this.privRequestSession.requestId, null, payload)).catch(() => {\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\n                        this.privRequestSession.onServiceTurnEndResponse(this.privRecognizerConfig.isContinuousRecognition).catch(() => { });\n                    });\n                    if (!audioStreamChunk?.isEnd) {\n                        // this.writeBufferToConsole(payload);\n                        // Regardless of success or failure, schedule the next upload.\n                        // If the underlying connection was broken, the next cycle will\n                        // get a new connection and re-transmit missing audio automatically.\n                        return readAndUploadCycle();\n                    }\n                    else {\n                        // the audio stream has been closed, no need to schedule next\n                        // read-upload cycle.\n                        if (!this.privIsLiveAudio) {\n                            this.privRequestSession.onSpeechEnded();\n                        }\n                    }\n                }\n            }\n        };\n        return readAndUploadCycle();\n    }\n    async retryableConnect() {\n        let isUnAuthorized = false;\n        this.privAuthFetchEventId = (0, Exports_js_2.createNoDashGuid)();\n        const sessionId = this.privRequestSession.sessionId;\n        this.privConnectionId = (sessionId !== undefined) ? sessionId : (0, Exports_js_2.createNoDashGuid)();\n        this.privRequestSession.onPreConnectionStart(this.privAuthFetchEventId, this.privConnectionId);\n        let lastStatusCode = 0;\n        let lastReason = \"\";\n        while (this.privRequestSession.numConnectionAttempts <= this.privRecognizerConfig.maxRetryCount) {\n            this.privRequestSession.onRetryConnection();\n            // Get the auth information for the connection. This is a bit of overkill for the current API surface, but leaving the plumbing in place to be able to raise a developer-customer\n            // facing event when a connection fails to let them try and provide new auth information.\n            const authPromise = isUnAuthorized ? this.privAuthentication.fetchOnExpiry(this.privAuthFetchEventId) : this.privAuthentication.fetch(this.privAuthFetchEventId);\n            const auth = await authPromise;\n            await this.privRequestSession.onAuthCompleted(false);\n            // Create the connection\n            const connection = await this.privConnectionFactory.create(this.privRecognizerConfig, auth, this.privConnectionId);\n            // Attach the telemetry handlers.\n            this.privRequestSession.listenForServiceTelemetry(connection.events);\n            // Attach to the underlying event. No need to hold onto the detach pointers as in the event the connection goes away,\n            // it'll stop sending events.\n            connection.events.attach((event) => {\n                this.connectionEvents.onEvent(event);\n            });\n            const response = await connection.open();\n            // 200 == everything is fine.\n            if (response.statusCode === 200) {\n                await this.privRequestSession.onConnectionEstablishCompleted(response.statusCode);\n                return Promise.resolve(connection);\n            }\n            else if (response.statusCode === 1006) {\n                isUnAuthorized = true;\n            }\n            lastStatusCode = response.statusCode;\n            lastReason = response.reason;\n        }\n        await this.privRequestSession.onConnectionEstablishCompleted(lastStatusCode, lastReason);\n        return Promise.reject(`Unable to contact server. StatusCode: ${lastStatusCode}, ${this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Endpoint)} Reason: ${lastReason}`);\n    }\n    delay(delayMs) {\n        return new Promise((resolve) => this.privSetTimeout(resolve, delayMs));\n    }\n    writeBufferToConsole(buffer) {\n        let out = \"Buffer Size: \";\n        if (null === buffer) {\n            out += \"null\";\n        }\n        else {\n            const readView = new Uint8Array(buffer);\n            out += `${buffer.byteLength}\\r\\n`;\n            for (let i = 0; i < buffer.byteLength; i++) {\n                out += readView[i].toString(16).padStart(2, \"0\") + \" \";\n                if (((i + 1) % 16) === 0) {\n                    // eslint-disable-next-line no-console\n                    console.info(out);\n                    out = \"\";\n                }\n            }\n        }\n        // eslint-disable-next-line no-console\n        console.info(out);\n    }\n    async sendFinalAudio() {\n        const connection = await this.fetchConnection();\n        await connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Binary, \"audio\", this.privRequestSession.requestId, null, null));\n        return;\n    }\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\n    async configureConnection() {\n        const connection = await this.connectImpl();\n        if (this.configConnectionOverride !== undefined) {\n            return this.configConnectionOverride(connection);\n        }\n        await this.sendSpeechServiceConfig(connection, this.privRequestSession, this.privRecognizerConfig.SpeechServiceConfig.serialize());\n        await this.sendPrePayloadJSON(connection, false);\n        return connection;\n    }\n}\nexports.ServiceRecognizerBase = ServiceRecognizerBase;\nServiceRecognizerBase.telemetryDataEnabled = true;\n\n//# sourceMappingURL=ServiceRecognizerBase.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationServiceRecognizer = void 0;\nconst Exports_js_1 = require(\"../sdk/Exports.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\nclass ConversationServiceRecognizer extends Exports_js_2.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, recognizer) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, recognizer);\n        this.handleSpeechPhraseMessage = async (textBody) => this.handleSpeechPhrase(textBody);\n        this.handleSpeechHypothesisMessage = (textBody) => this.handleSpeechHypothesis(textBody);\n    }\n    processTypeSpecificMessages(connectionMessage) {\n        void connectionMessage;\n        return;\n    }\n    handleRecognizedCallback(result, offset, sessionId) {\n        void result;\n        void offset;\n        void sessionId;\n        return;\n    }\n    handleRecognizingCallback(result, duration, sessionId) {\n        void result;\n        void duration;\n        void sessionId;\n        return;\n    }\n    async processSpeechMessages(connectionMessage) {\n        let processed = false;\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"speech.hypothesis\":\n            case \"speech.fragment\":\n                if (!!this.handleSpeechHypothesisMessage) {\n                    this.handleSpeechHypothesisMessage(connectionMessage.textBody);\n                }\n                processed = true;\n                break;\n            case \"speech.phrase\":\n                if (!!this.handleSpeechPhraseMessage) {\n                    await this.handleSpeechPhraseMessage(connectionMessage.textBody);\n                }\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        return processed;\n    }\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        // Implementing to allow inheritance\n        void sessionId;\n        void requestId;\n        void cancellationReason;\n        void errorCode;\n        void error;\n    }\n    async handleSpeechPhrase(textBody) {\n        const simple = Exports_js_2.SimpleSpeechPhrase.fromJSON(textBody, this.privRequestSession.currentTurnAudioOffset);\n        const resultReason = Exports_js_2.EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus);\n        let result;\n        const resultProps = new Exports_js_1.PropertyCollection();\n        resultProps.setProperty(Exports_js_1.PropertyId.SpeechServiceResponse_JsonResult, textBody);\n        this.privRequestSession.onPhraseRecognized(simple.Offset + simple.Duration);\n        if (Exports_js_1.ResultReason.Canceled === resultReason) {\n            const cancelReason = Exports_js_2.EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus);\n            const cancellationErrorCode = Exports_js_2.EnumTranslation.implTranslateCancelErrorCode(simple.RecognitionStatus);\n            await this.cancelRecognitionLocal(cancelReason, cancellationErrorCode, Exports_js_2.EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\n        }\n        else {\n            if (simple.RecognitionStatus !== Exports_js_2.RecognitionStatus.EndOfDictation) {\n                if (this.privRecognizerConfig.parameters.getProperty(Exports_js_2.OutputFormatPropertyName) === Exports_js_1.OutputFormat[Exports_js_1.OutputFormat.Simple]) {\n                    result = new Exports_js_1.SpeechRecognitionResult(this.privRequestSession.requestId, resultReason, simple.DisplayText, simple.Duration, simple.Offset, simple.Language, simple.LanguageDetectionConfidence, simple.SpeakerId, undefined, simple.asJson(), resultProps);\n                }\n                else {\n                    const detailed = Exports_js_2.DetailedSpeechPhrase.fromJSON(textBody, this.privRequestSession.currentTurnAudioOffset);\n                    result = new Exports_js_1.SpeechRecognitionResult(this.privRequestSession.requestId, resultReason, detailed.Text, detailed.Duration, detailed.Offset, detailed.Language, detailed.LanguageDetectionConfidence, detailed.SpeakerId, undefined, detailed.asJson(), resultProps);\n                }\n                this.handleRecognizedCallback(result, result.offset, this.privRequestSession.sessionId);\n            }\n        }\n    }\n    handleSpeechHypothesis(textBody) {\n        const hypothesis = Exports_js_2.SpeechHypothesis.fromJSON(textBody, this.privRequestSession.currentTurnAudioOffset);\n        const resultProps = new Exports_js_1.PropertyCollection();\n        resultProps.setProperty(Exports_js_1.PropertyId.SpeechServiceResponse_JsonResult, textBody);\n        const result = new Exports_js_1.SpeechRecognitionResult(this.privRequestSession.requestId, Exports_js_1.ResultReason.RecognizingSpeech, hypothesis.Text, hypothesis.Duration, hypothesis.Offset, hypothesis.Language, hypothesis.LanguageDetectionConfidence, hypothesis.SpeakerId, undefined, hypothesis.asJson(), resultProps);\n        this.privRequestSession.onHypothesis(hypothesis.Offset);\n        this.handleRecognizingCallback(result, hypothesis.Duration, this.privRequestSession.sessionId);\n    }\n}\nexports.ConversationServiceRecognizer = ConversationServiceRecognizer;\n\n//# sourceMappingURL=ConversationServiceRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RecognizerConfig = exports.SpeechResultFormat = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../sdk/Exports.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\nconst PhraseDetectionContext_js_1 = require(\"./ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\nvar SpeechResultFormat;\n(function (SpeechResultFormat) {\n    SpeechResultFormat[SpeechResultFormat[\"Simple\"] = 0] = \"Simple\";\n    SpeechResultFormat[SpeechResultFormat[\"Detailed\"] = 1] = \"Detailed\";\n})(SpeechResultFormat = exports.SpeechResultFormat || (exports.SpeechResultFormat = {}));\nclass RecognizerConfig {\n    constructor(speechServiceConfig, parameters) {\n        this.privSpeechServiceConfig = speechServiceConfig ? speechServiceConfig : new Exports_js_2.SpeechServiceConfig(new Exports_js_2.Context(null));\n        this.privParameters = parameters;\n        this.privMaxRetryCount = parseInt(parameters.getProperty(\"SPEECH-Error-MaxRetryCount\", \"4\"), 10);\n        this.privLanguageIdMode = parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceConnection_LanguageIdMode, undefined);\n        this.privEnableSpeakerId = false;\n    }\n    get parameters() {\n        return this.privParameters;\n    }\n    get recognitionMode() {\n        return this.privRecognitionMode;\n    }\n    set recognitionMode(value) {\n        this.privRecognitionMode = value;\n        this.privRecognitionActivityTimeout = value === PhraseDetectionContext_js_1.RecognitionMode.Interactive ? 8000 : 25000;\n        this.privSpeechServiceConfig.Recognition = PhraseDetectionContext_js_1.RecognitionMode[value];\n    }\n    get SpeechServiceConfig() {\n        return this.privSpeechServiceConfig;\n    }\n    get recognitionActivityTimeout() {\n        return this.privRecognitionActivityTimeout;\n    }\n    get isContinuousRecognition() {\n        return this.privRecognitionMode !== PhraseDetectionContext_js_1.RecognitionMode.Interactive;\n    }\n    get languageIdMode() {\n        return this.privLanguageIdMode;\n    }\n    get autoDetectSourceLanguages() {\n        return this.parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, undefined);\n    }\n    get recognitionEndpointVersion() {\n        return this.parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, \"2\");\n    }\n    set recognitionEndpointVersion(version) {\n        this.parameters.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, version);\n    }\n    get sourceLanguageModels() {\n        const models = [];\n        let modelsExist = false;\n        if (this.autoDetectSourceLanguages !== undefined) {\n            for (const language of this.autoDetectSourceLanguages.split(\",\")) {\n                const customProperty = language + Exports_js_1.PropertyId.SpeechServiceConnection_EndpointId.toString();\n                const modelId = this.parameters.getProperty(customProperty, undefined);\n                if (modelId !== undefined) {\n                    models.push({ language, endpoint: modelId });\n                    modelsExist = true;\n                }\n                else {\n                    models.push({ language, endpoint: \"\" });\n                }\n            }\n        }\n        return modelsExist ? models : undefined;\n    }\n    get maxRetryCount() {\n        return this.privMaxRetryCount;\n    }\n    get isSpeakerDiarizationEnabled() {\n        return this.privEnableSpeakerId;\n    }\n    set isSpeakerDiarizationEnabled(value) {\n        this.privEnableSpeakerId = value;\n    }\n}\nexports.RecognizerConfig = RecognizerConfig;\n\n//# sourceMappingURL=RecognizerConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=SpeechServiceInterfaces.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebsocketMessageFormatter = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst CRLF = \"\\r\\n\";\nclass WebsocketMessageFormatter {\n    toConnectionMessage(message) {\n        const deferral = new Exports_js_1.Deferred();\n        try {\n            if (message.messageType === Exports_js_1.MessageType.Text) {\n                const textMessage = message.textContent;\n                let headers = {};\n                let body = null;\n                if (textMessage) {\n                    const headerBodySplit = textMessage.split(\"\\r\\n\\r\\n\");\n                    if (headerBodySplit && headerBodySplit.length > 0) {\n                        headers = this.parseHeaders(headerBodySplit[0]);\n                        if (headerBodySplit.length > 1) {\n                            body = headerBodySplit[1];\n                        }\n                    }\n                }\n                deferral.resolve(new Exports_js_1.ConnectionMessage(message.messageType, body, headers, message.id));\n            }\n            else if (message.messageType === Exports_js_1.MessageType.Binary) {\n                const binaryMessage = message.binaryContent;\n                let headers = {};\n                let body = null;\n                if (!binaryMessage || binaryMessage.byteLength < 2) {\n                    throw new Error(\"Invalid binary message format. Header length missing.\");\n                }\n                const dataView = new DataView(binaryMessage);\n                const headerLength = dataView.getInt16(0);\n                if (binaryMessage.byteLength < headerLength + 2) {\n                    throw new Error(\"Invalid binary message format. Header content missing.\");\n                }\n                let headersString = \"\";\n                for (let i = 0; i < headerLength; i++) {\n                    headersString += String.fromCharCode((dataView).getInt8(i + 2));\n                }\n                headers = this.parseHeaders(headersString);\n                if (binaryMessage.byteLength > headerLength + 2) {\n                    body = binaryMessage.slice(2 + headerLength);\n                }\n                deferral.resolve(new Exports_js_1.ConnectionMessage(message.messageType, body, headers, message.id));\n            }\n        }\n        catch (e) {\n            deferral.reject(`Error formatting the message. Error: ${e}`);\n        }\n        return deferral.promise;\n    }\n    fromConnectionMessage(message) {\n        const deferral = new Exports_js_1.Deferred();\n        try {\n            if (message.messageType === Exports_js_1.MessageType.Text) {\n                const payload = `${this.makeHeaders(message)}${CRLF}${message.textBody ? message.textBody : \"\"}`;\n                deferral.resolve(new Exports_js_1.RawWebsocketMessage(Exports_js_1.MessageType.Text, payload, message.id));\n            }\n            else if (message.messageType === Exports_js_1.MessageType.Binary) {\n                const headersString = this.makeHeaders(message);\n                const content = message.binaryBody;\n                const headerBuffer = this.stringToArrayBuffer(headersString);\n                const headerInt8Array = new Int8Array(headerBuffer);\n                const headerLength = headerInt8Array.byteLength;\n                const payloadInt8Array = new Int8Array(2 + headerLength + (content ? content.byteLength : 0));\n                payloadInt8Array[0] = ((headerLength >> 8) & 0xff);\n                payloadInt8Array[1] = headerLength & 0xff;\n                payloadInt8Array.set(headerInt8Array, 2);\n                if (content) {\n                    const bodyInt8Array = new Int8Array(content);\n                    payloadInt8Array.set(bodyInt8Array, 2 + headerLength);\n                }\n                const payload = payloadInt8Array.buffer;\n                deferral.resolve(new Exports_js_1.RawWebsocketMessage(Exports_js_1.MessageType.Binary, payload, message.id));\n            }\n        }\n        catch (e) {\n            deferral.reject(`Error formatting the message. ${e}`);\n        }\n        return deferral.promise;\n    }\n    makeHeaders(message) {\n        let headersString = \"\";\n        if (message.headers) {\n            for (const header in message.headers) {\n                if (header) {\n                    headersString += `${header}: ${message.headers[header]}${CRLF}`;\n                }\n            }\n        }\n        return headersString;\n    }\n    parseHeaders(headersString) {\n        const headers = {};\n        if (headersString) {\n            const headerMatches = headersString.match(/[^\\r\\n]+/g);\n            if (headers) {\n                for (const header of headerMatches) {\n                    if (header) {\n                        const separatorIndex = header.indexOf(\":\");\n                        const headerName = separatorIndex > 0 ? header.substr(0, separatorIndex).trim().toLowerCase() : header;\n                        const headerValue = separatorIndex > 0 && header.length > (separatorIndex + 1) ?\n                            header.substr(separatorIndex + 1).trim() :\n                            \"\";\n                        headers[headerName] = headerValue;\n                    }\n                }\n            }\n        }\n        return headers;\n    }\n    stringToArrayBuffer(str) {\n        const buffer = new ArrayBuffer(str.length);\n        const view = new DataView(buffer);\n        for (let i = 0; i < str.length; i++) {\n            view.setUint8(i, str.charCodeAt(i));\n        }\n        return buffer;\n    }\n}\nexports.WebsocketMessageFormatter = WebsocketMessageFormatter;\n\n//# sourceMappingURL=WebsocketMessageFormatter.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechConnectionFactory = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../common.speech/Exports.js\");\nconst Exports_js_3 = require(\"../sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = require(\"./ConnectionFactoryBase.js\");\nconst Exports_js_4 = require(\"./Exports.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\nconst QueryParameterNames_js_1 = require(\"./QueryParameterNames.js\");\nconst PhraseDetectionContext_js_1 = require(\"./ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\nclass SpeechConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    constructor() {\n        super(...arguments);\n        this.interactiveRelativeUri = \"/speech/recognition/interactive/cognitiveservices/v1\";\n        this.conversationRelativeUri = \"/speech/recognition/conversation/cognitiveservices/v1\";\n        this.dictationRelativeUri = \"/speech/recognition/dictation/cognitiveservices/v1\";\n        this.universalUri = \"/stt/speech/universal/v\";\n    }\n    async create(config, authInfo, connectionId) {\n        let endpoint = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Endpoint, undefined);\n        const region = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Region, undefined);\n        const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n        const host = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".stt.speech\" + hostSuffix);\n        const queryParams = {};\n        const endpointId = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_EndpointId, undefined);\n        const language = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage, undefined);\n        if (endpointId) {\n            if (!endpoint || endpoint.search(QueryParameterNames_js_1.QueryParameterNames.CustomSpeechDeploymentId) === -1) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.CustomSpeechDeploymentId] = endpointId;\n            }\n        }\n        else if (language) {\n            if (!endpoint || endpoint.search(QueryParameterNames_js_1.QueryParameterNames.Language) === -1) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.Language] = language;\n            }\n        }\n        if (!endpoint || endpoint.search(QueryParameterNames_js_1.QueryParameterNames.Format) === -1) {\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.Format] = config.parameters.getProperty(Exports_js_2.OutputFormatPropertyName, Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Simple]).toLowerCase();\n        }\n        if (config.autoDetectSourceLanguages !== undefined) {\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.EnableLanguageId] = \"true\";\n        }\n        this.setCommonUrlParams(config, queryParams, endpoint);\n        if (!!endpoint) {\n            const endpointUrl = new URL(endpoint);\n            const pathName = endpointUrl.pathname;\n            if (pathName === \"\" || pathName === \"/\") {\n                // We need to generate the path, and we need to check for a redirect.\n                endpointUrl.pathname = this.universalUri + config.recognitionEndpointVersion;\n                endpoint = await ConnectionFactoryBase_js_1.ConnectionFactoryBase.getRedirectUrlFromEndpoint(endpointUrl.toString());\n            }\n        }\n        if (!endpoint) {\n            switch (config.recognitionMode) {\n                case PhraseDetectionContext_js_1.RecognitionMode.Conversation:\n                    if (config.parameters.getProperty(Exports_js_2.ForceDictationPropertyName, \"false\") === \"true\") {\n                        endpoint = host + this.dictationRelativeUri;\n                    }\n                    else {\n                        if (config.recognitionEndpointVersion !== undefined && parseInt(config.recognitionEndpointVersion, 10) > 1) {\n                            endpoint = `${host}${this.universalUri}${config.recognitionEndpointVersion}`;\n                        }\n                        else {\n                            endpoint = host + this.conversationRelativeUri;\n                        }\n                    }\n                    break;\n                case PhraseDetectionContext_js_1.RecognitionMode.Dictation:\n                    endpoint = host + this.dictationRelativeUri;\n                    break;\n                default:\n                    if (config.recognitionEndpointVersion !== undefined && parseInt(config.recognitionEndpointVersion, 10) > 1) {\n                        endpoint = `${host}${this.universalUri}${config.recognitionEndpointVersion}`;\n                    }\n                    else {\n                        endpoint = host + this.interactiveRelativeUri; // default is interactive\n                    }\n                    break;\n            }\n        }\n        const headers = {};\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        headers.connectionId = connectionId;\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        const webSocketConnection = new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_4.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\n        // Set the value of SpeechServiceConnection_Url to webSocketConnection.uri (and not to `endpoint`), since this value is the final\n        // URI that was used to make the connection (including query parameters).\n        const uri = webSocketConnection.uri;\n        config.parameters.setProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Url, uri);\n        return webSocketConnection;\n    }\n}\nexports.SpeechConnectionFactory = SpeechConnectionFactory;\n\n//# sourceMappingURL=SpeechConnectionFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranscriberConnectionFactory = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst Exports_js_3 = require(\"../common.speech/Exports.js\");\nconst ConnectionFactoryBase_js_1 = require(\"./ConnectionFactoryBase.js\");\nconst Exports_js_4 = require(\"./Exports.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\nconst QueryParameterNames_js_1 = require(\"./QueryParameterNames.js\");\nclass ConversationTranscriberConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    constructor() {\n        super(...arguments);\n        this.universalUri = \"/stt/speech/universal/v2\";\n    }\n    async create(config, authInfo, connectionId) {\n        let endpoint = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint, undefined);\n        const region = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, undefined);\n        const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n        const host = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".stt.speech\" + hostSuffix);\n        const queryParams = {};\n        const endpointId = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId, undefined);\n        const language = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage, undefined);\n        if (endpointId) {\n            if (!endpoint || endpoint.search(QueryParameterNames_js_1.QueryParameterNames.CustomSpeechDeploymentId) === -1) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.CustomSpeechDeploymentId] = endpointId;\n            }\n        }\n        else if (language) {\n            if (!endpoint || endpoint.search(QueryParameterNames_js_1.QueryParameterNames.Language) === -1) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.Language] = language;\n            }\n        }\n        if (config.autoDetectSourceLanguages !== undefined) {\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.EnableLanguageId] = \"true\";\n        }\n        this.setV2UrlParams(config, queryParams, endpoint);\n        if (!!endpoint) {\n            const endpointUrl = new URL(endpoint);\n            const pathName = endpointUrl.pathname;\n            if (pathName === \"\" || pathName === \"/\") {\n                // We need to generate the path, and we need to check for a redirect.\n                endpointUrl.pathname = this.universalUri;\n                endpoint = await ConnectionFactoryBase_js_1.ConnectionFactoryBase.getRedirectUrlFromEndpoint(endpointUrl.toString());\n            }\n        }\n        if (!endpoint) {\n            endpoint = `${host}${this.universalUri}`;\n        }\n        const headers = {};\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        const webSocketConnection = new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_4.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\n        // Set the value of SpeechServiceConnection_Url to webSocketConnection.uri (and not to `endpoint`), since this value is the final\n        // URI that was used to make the connection (including query parameters).\n        const uri = webSocketConnection.uri;\n        config.parameters.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Url, uri);\n        return webSocketConnection;\n    }\n    setV2UrlParams(config, queryParams, endpoint) {\n        const propertyIdToParameterMap = new Map([\n            [Exports_js_2.PropertyId.Speech_SegmentationSilenceTimeoutMs, QueryParameterNames_js_1.QueryParameterNames.SegmentationSilenceTimeoutMs],\n            [Exports_js_2.PropertyId.SpeechServiceConnection_EnableAudioLogging, QueryParameterNames_js_1.QueryParameterNames.EnableAudioLogging],\n            [Exports_js_2.PropertyId.SpeechServiceConnection_EndSilenceTimeoutMs, QueryParameterNames_js_1.QueryParameterNames.EndSilenceTimeoutMs],\n            [Exports_js_2.PropertyId.SpeechServiceConnection_InitialSilenceTimeoutMs, QueryParameterNames_js_1.QueryParameterNames.InitialSilenceTimeoutMs],\n            [Exports_js_2.PropertyId.SpeechServiceResponse_PostProcessingOption, QueryParameterNames_js_1.QueryParameterNames.Postprocessing],\n            [Exports_js_2.PropertyId.SpeechServiceResponse_ProfanityOption, QueryParameterNames_js_1.QueryParameterNames.Profanity],\n            [Exports_js_2.PropertyId.SpeechServiceResponse_StablePartialResultThreshold, QueryParameterNames_js_1.QueryParameterNames.StableIntermediateThreshold],\n        ]);\n        propertyIdToParameterMap.forEach((parameterName, propertyId) => {\n            this.setUrlParameter(propertyId, parameterName, config, queryParams, endpoint);\n        });\n        const serviceProperties = JSON.parse(config.parameters.getProperty(Exports_js_3.ServicePropertiesPropertyName, \"{}\"));\n        Object.keys(serviceProperties).forEach((value) => {\n            queryParams[value] = serviceProperties[value];\n        });\n    }\n}\nexports.ConversationTranscriberConnectionFactory = ConversationTranscriberConnectionFactory;\n\n//# sourceMappingURL=ConversationTranscriberConnectionFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranscriberConnectionFactory = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = require(\"./ConnectionFactoryBase.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\nconst QueryParameterNames_js_1 = require(\"./QueryParameterNames.js\");\nclass TranscriberConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    constructor() {\n        super(...arguments);\n        this.multiaudioRelativeUri = \"/speech/recognition/multiaudio\";\n    }\n    create(config, authInfo, connectionId) {\n        let endpoint = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint, undefined);\n        const region = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, \"centralus\");\n        const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n        const hostDefault = \"wss://transcribe.\" + region + \".cts.speech\" + hostSuffix + this.multiaudioRelativeUri;\n        const host = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, hostDefault);\n        const queryParams = {};\n        this.setQueryParams(queryParams, config, endpoint);\n        if (!endpoint) {\n            endpoint = host;\n        }\n        const headers = {};\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        config.parameters.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Url, endpoint);\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        return Promise.resolve(new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_3.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId));\n    }\n    setQueryParams(queryParams, config, endpointUrl) {\n        const endpointId = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId, undefined);\n        const language = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage, undefined);\n        if (endpointId && !(QueryParameterNames_js_1.QueryParameterNames.CustomSpeechDeploymentId in queryParams)) {\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.CustomSpeechDeploymentId] = endpointId;\n        }\n        if (language && !(QueryParameterNames_js_1.QueryParameterNames.Language in queryParams)) {\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.Language] = language;\n        }\n        const wordLevelTimings = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"false\").toLowerCase() === \"true\";\n        const detailed = config.parameters.getProperty(Exports_js_3.OutputFormatPropertyName, Exports_js_2.OutputFormat[Exports_js_2.OutputFormat.Simple]) !== Exports_js_2.OutputFormat[Exports_js_2.OutputFormat.Simple];\n        if (wordLevelTimings || detailed) {\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.Format] = Exports_js_2.OutputFormat[Exports_js_2.OutputFormat.Detailed].toLowerCase();\n        }\n        this.setCommonUrlParams(config, queryParams, endpointUrl);\n    }\n}\nexports.TranscriberConnectionFactory = TranscriberConnectionFactory;\n\n//# sourceMappingURL=TranscriberConnectionFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationConnectionFactory = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst StringUtils_js_1 = require(\"../common/StringUtils.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = require(\"./ConnectionFactoryBase.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\nconst QueryParameterNames_js_1 = require(\"./QueryParameterNames.js\");\nconst PhraseDetectionContext_js_1 = require(\"./ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\nclass TranslationConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    constructor() {\n        super(...arguments);\n        this.universalUri = \"/stt/speech/universal/v2\";\n        this.translationV1Uri = \"/speech/translation/cognitiveservices/v1\";\n    }\n    async create(config, authInfo, connectionId) {\n        let endpoint = this.getEndpointUrl(config);\n        const queryParams = {};\n        // Determine if we're using V1 or V2 endpoint\n        this.setQueryParams(queryParams, config, endpoint);\n        if (!!endpoint) {\n            const endpointUrl = new URL(endpoint);\n            const pathName = endpointUrl.pathname;\n            if (pathName === \"\" || pathName === \"/\") {\n                // We need to generate the path, and we need to check for a redirect.\n                endpointUrl.pathname = this.universalUri;\n                endpoint = await ConnectionFactoryBase_js_1.ConnectionFactoryBase.getRedirectUrlFromEndpoint(endpointUrl.toString());\n            }\n        }\n        const headers = {};\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        config.parameters.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Url, endpoint);\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        const webSocketConnection = new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_3.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\n        return webSocketConnection;\n    }\n    getEndpointUrl(config, returnRegionPlaceholder) {\n        const region = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region);\n        const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n        // First check for an explicitly specified endpoint\n        let endpointUrl = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint, undefined);\n        // If an explicit endpoint is provided, use it\n        if (endpointUrl) {\n            if (returnRegionPlaceholder === true) {\n                return endpointUrl;\n            }\n            return StringUtils_js_1.StringUtils.formatString(endpointUrl, { region });\n        }\n        // Check if V1 endpoint is explicitly requested\n        const forceV1Endpoint = config.parameters.getProperty(\"SPEECH-ForceV1Endpoint\", \"false\") === \"true\";\n        if (forceV1Endpoint) {\n            // Use V1 endpoint with s2s.speech host\n            const host = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, \"wss://{region}.s2s.speech\" + hostSuffix);\n            endpointUrl = host + this.translationV1Uri;\n        }\n        else {\n            // Default to V2 endpoint with stt.speech host\n            const host = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, \"wss://{region}.stt.speech\" + hostSuffix);\n            endpointUrl = host + this.universalUri;\n        }\n        if (returnRegionPlaceholder === true) {\n            return endpointUrl;\n        }\n        return StringUtils_js_1.StringUtils.formatString(endpointUrl, { region });\n    }\n    setQueryParams(queryParams, config, endpointUrl) {\n        // Common parameters for both V1 and V2 endpoints\n        queryParams.from = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage);\n        queryParams.to = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_TranslationToLanguages);\n        queryParams.scenario = config.recognitionMode === PhraseDetectionContext_js_1.RecognitionMode.Interactive ? \"interactive\" :\n            config.recognitionMode === PhraseDetectionContext_js_1.RecognitionMode.Conversation ? \"conversation\" : \"\";\n        // Set common parameters\n        this.setCommonUrlParams(config, queryParams, endpointUrl);\n        this.setUrlParameter(Exports_js_2.PropertyId.SpeechServiceResponse_TranslationRequestStablePartialResult, QueryParameterNames_js_1.QueryParameterNames.StableTranslation, config, queryParams, endpointUrl);\n        // Handle translation voice if specified\n        const translationVoice = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_TranslationVoice, undefined);\n        if (translationVoice !== undefined) {\n            queryParams.voice = translationVoice;\n            // Updated to match C++ implementation\n            queryParams.features = \"requireVoice\";\n        }\n    }\n}\nexports.TranslationConnectionFactory = TranslationConnectionFactory;\n\n//# sourceMappingURL=TranslationConnectionFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnumTranslation = void 0;\nconst Exports_js_1 = require(\"../sdk/Exports.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\nclass EnumTranslation {\n    static implTranslateRecognitionResult(recognitionStatus, expectEndOfDictation = false) {\n        let reason = Exports_js_1.ResultReason.Canceled;\n        switch (recognitionStatus) {\n            case Exports_js_2.RecognitionStatus.Success:\n                reason = Exports_js_1.ResultReason.RecognizedSpeech;\n                break;\n            case Exports_js_2.RecognitionStatus.EndOfDictation:\n                // If we need the result in EndOfDictation (typically some session level result),\n                // translate into RecognizedSpeech, otherwise NoMatch\n                reason = expectEndOfDictation ? Exports_js_1.ResultReason.RecognizedSpeech : Exports_js_1.ResultReason.NoMatch;\n                break;\n            case Exports_js_2.RecognitionStatus.NoMatch:\n            case Exports_js_2.RecognitionStatus.InitialSilenceTimeout:\n            case Exports_js_2.RecognitionStatus.BabbleTimeout:\n                reason = Exports_js_1.ResultReason.NoMatch;\n                break;\n            case Exports_js_2.RecognitionStatus.Error:\n            case Exports_js_2.RecognitionStatus.BadRequest:\n            case Exports_js_2.RecognitionStatus.Forbidden:\n            default:\n                reason = Exports_js_1.ResultReason.Canceled;\n                break;\n        }\n        return reason;\n    }\n    static implTranslateCancelResult(recognitionStatus) {\n        let reason = Exports_js_1.CancellationReason.EndOfStream;\n        switch (recognitionStatus) {\n            case Exports_js_2.RecognitionStatus.Success:\n            case Exports_js_2.RecognitionStatus.EndOfDictation:\n            case Exports_js_2.RecognitionStatus.NoMatch:\n                reason = Exports_js_1.CancellationReason.EndOfStream;\n                break;\n            case Exports_js_2.RecognitionStatus.InitialSilenceTimeout:\n            case Exports_js_2.RecognitionStatus.BabbleTimeout:\n            case Exports_js_2.RecognitionStatus.Error:\n            case Exports_js_2.RecognitionStatus.BadRequest:\n            case Exports_js_2.RecognitionStatus.Forbidden:\n            default:\n                reason = Exports_js_1.CancellationReason.Error;\n                break;\n        }\n        return reason;\n    }\n    static implTranslateCancelErrorCode(recognitionStatus) {\n        let reason = Exports_js_1.CancellationErrorCode.NoError;\n        switch (recognitionStatus) {\n            case Exports_js_2.RecognitionStatus.Error:\n                reason = Exports_js_1.CancellationErrorCode.ServiceError;\n                break;\n            case Exports_js_2.RecognitionStatus.TooManyRequests:\n                reason = Exports_js_1.CancellationErrorCode.TooManyRequests;\n                break;\n            case Exports_js_2.RecognitionStatus.BadRequest:\n                reason = Exports_js_1.CancellationErrorCode.BadRequestParameters;\n                break;\n            case Exports_js_2.RecognitionStatus.Forbidden:\n                reason = Exports_js_1.CancellationErrorCode.Forbidden;\n                break;\n            default:\n                reason = Exports_js_1.CancellationErrorCode.NoError;\n                break;\n        }\n        return reason;\n    }\n    static implTranslateErrorDetails(cancellationErrorCode) {\n        let errorDetails = \"The speech service encountered an internal error and could not continue.\";\n        switch (cancellationErrorCode) {\n            case Exports_js_1.CancellationErrorCode.Forbidden:\n                errorDetails = \"The recognizer is using a free subscription that ran out of quota.\";\n                break;\n            case Exports_js_1.CancellationErrorCode.BadRequestParameters:\n                errorDetails = \"Invalid parameter or unsupported audio format in the request.\";\n                break;\n            case Exports_js_1.CancellationErrorCode.TooManyRequests:\n                errorDetails = \"The number of parallel requests exceeded the number of allowed concurrent transcriptions.\";\n                break;\n            default:\n                break;\n        }\n        return errorDetails;\n    }\n}\nexports.EnumTranslation = EnumTranslation;\n\n//# sourceMappingURL=EnumTranslation.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RecognitionStatus = exports.SynthesisStatus = void 0;\n/**\n * @class SynthesisStatus\n * @private\n */\nvar SynthesisStatus;\n(function (SynthesisStatus) {\n    /**\n     * The response contains valid audio data.\n     * @member SynthesisStatus.Success\n     */\n    SynthesisStatus[SynthesisStatus[\"Success\"] = 0] = \"Success\";\n    /**\n     * Indicates the end of audio data. No valid audio data is included in the message.\n     * @member SynthesisStatus.SynthesisEnd\n     */\n    SynthesisStatus[SynthesisStatus[\"SynthesisEnd\"] = 1] = \"SynthesisEnd\";\n    /**\n     * Indicates an error occurred during synthesis data processing.\n     * @member SynthesisStatus.Error\n     */\n    SynthesisStatus[SynthesisStatus[\"Error\"] = 2] = \"Error\";\n})(SynthesisStatus = exports.SynthesisStatus || (exports.SynthesisStatus = {}));\nvar RecognitionStatus;\n(function (RecognitionStatus) {\n    RecognitionStatus[RecognitionStatus[\"Success\"] = 0] = \"Success\";\n    RecognitionStatus[RecognitionStatus[\"NoMatch\"] = 1] = \"NoMatch\";\n    RecognitionStatus[RecognitionStatus[\"InitialSilenceTimeout\"] = 2] = \"InitialSilenceTimeout\";\n    RecognitionStatus[RecognitionStatus[\"BabbleTimeout\"] = 3] = \"BabbleTimeout\";\n    RecognitionStatus[RecognitionStatus[\"Error\"] = 4] = \"Error\";\n    RecognitionStatus[RecognitionStatus[\"EndOfDictation\"] = 5] = \"EndOfDictation\";\n    RecognitionStatus[RecognitionStatus[\"TooManyRequests\"] = 6] = \"TooManyRequests\";\n    RecognitionStatus[RecognitionStatus[\"BadRequest\"] = 7] = \"BadRequest\";\n    RecognitionStatus[RecognitionStatus[\"Forbidden\"] = 8] = \"Forbidden\";\n})(RecognitionStatus = exports.RecognitionStatus || (exports.RecognitionStatus = {}));\n\n//# sourceMappingURL=Enums.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationSynthesisEnd = void 0;\nconst Exports_js_1 = require(\"../Exports.js\");\nclass TranslationSynthesisEnd {\n    constructor(json) {\n        this.privSynthesisEnd = JSON.parse(json);\n        if (!!this.privSynthesisEnd.SynthesisStatus) {\n            this.privSynthesisEnd.SynthesisStatus = Exports_js_1.SynthesisStatus[this.privSynthesisEnd.SynthesisStatus];\n        }\n        if (!!this.privSynthesisEnd.Status) {\n            this.privSynthesisEnd.SynthesisStatus = Exports_js_1.SynthesisStatus[this.privSynthesisEnd.Status];\n        }\n    }\n    static fromJSON(json) {\n        return new TranslationSynthesisEnd(json);\n    }\n    get SynthesisStatus() {\n        return this.privSynthesisEnd.SynthesisStatus;\n    }\n    get FailureReason() {\n        return this.privSynthesisEnd.FailureReason;\n    }\n}\nexports.TranslationSynthesisEnd = TranslationSynthesisEnd;\n\n//# sourceMappingURL=TranslationSynthesisEnd.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationHypothesis = void 0;\nconst Contracts_js_1 = require(\"../../sdk/Contracts.js\");\nconst TranslationStatus_js_1 = require(\"../TranslationStatus.js\");\nclass TranslationHypothesis {\n    constructor(hypothesis, baseOffset) {\n        this.privTranslationHypothesis = hypothesis;\n        this.privTranslationHypothesis.Offset += baseOffset;\n        this.privTranslationHypothesis.Translation.TranslationStatus = this.mapTranslationStatus(this.privTranslationHypothesis.Translation.TranslationStatus);\n    }\n    static fromJSON(json, baseOffset) {\n        return new TranslationHypothesis(JSON.parse(json), baseOffset);\n    }\n    static fromTranslationResponse(translationHypothesis, baseOffset) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(translationHypothesis, \"translationHypothesis\");\n        const hypothesis = translationHypothesis.SpeechHypothesis;\n        translationHypothesis.SpeechHypothesis = undefined;\n        hypothesis.Translation = translationHypothesis;\n        return new TranslationHypothesis(hypothesis, baseOffset);\n    }\n    get Duration() {\n        return this.privTranslationHypothesis.Duration;\n    }\n    get Offset() {\n        return this.privTranslationHypothesis.Offset;\n    }\n    get Text() {\n        return this.privTranslationHypothesis.Text;\n    }\n    get Translation() {\n        return this.privTranslationHypothesis.Translation;\n    }\n    get Language() {\n        return this.privTranslationHypothesis.PrimaryLanguage?.Language;\n    }\n    asJson() {\n        const jsonObj = { ...this.privTranslationHypothesis };\n        // Convert the enum value to its string representation for serialization purposes.\n        return jsonObj.Translation !== undefined ? JSON.stringify({\n            ...jsonObj,\n            TranslationStatus: TranslationStatus_js_1.TranslationStatus[jsonObj.Translation.TranslationStatus]\n        }) : JSON.stringify(jsonObj);\n    }\n    mapTranslationStatus(status) {\n        if (typeof status === \"string\") {\n            return TranslationStatus_js_1.TranslationStatus[status];\n        }\n        else if (typeof status === \"number\") {\n            return status;\n        }\n    }\n}\nexports.TranslationHypothesis = TranslationHypothesis;\n\n//# sourceMappingURL=TranslationHypothesis.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationPhrase = void 0;\nconst Contracts_js_1 = require(\"../../sdk/Contracts.js\");\nconst Exports_js_1 = require(\"../Exports.js\");\nconst TranslationStatus_js_1 = require(\"../TranslationStatus.js\");\nclass TranslationPhrase {\n    constructor(phrase, baseOffset) {\n        this.privTranslationPhrase = phrase;\n        this.privTranslationPhrase.Offset += baseOffset;\n        this.privTranslationPhrase.RecognitionStatus = this.mapRecognitionStatus(this.privTranslationPhrase.RecognitionStatus);\n        if (this.privTranslationPhrase.Translation !== undefined) {\n            this.privTranslationPhrase.Translation.TranslationStatus = this.mapTranslationStatus(this.privTranslationPhrase.Translation.TranslationStatus);\n        }\n    }\n    static fromJSON(json, baseOffset) {\n        return new TranslationPhrase(JSON.parse(json), baseOffset);\n    }\n    static fromTranslationResponse(translationResponse, baseOffset) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(translationResponse, \"translationResponse\");\n        const phrase = translationResponse.SpeechPhrase;\n        translationResponse.SpeechPhrase = undefined;\n        phrase.Translation = translationResponse;\n        phrase.Text = phrase.DisplayText;\n        return new TranslationPhrase(phrase, baseOffset);\n    }\n    get RecognitionStatus() {\n        return this.privTranslationPhrase.RecognitionStatus;\n    }\n    get Offset() {\n        return this.privTranslationPhrase.Offset;\n    }\n    get Duration() {\n        return this.privTranslationPhrase.Duration;\n    }\n    get Text() {\n        return this.privTranslationPhrase.Text;\n    }\n    get Language() {\n        return this.privTranslationPhrase.PrimaryLanguage?.Language;\n    }\n    get Confidence() {\n        return this.privTranslationPhrase.PrimaryLanguage?.Confidence;\n    }\n    get Translation() {\n        return this.privTranslationPhrase.Translation;\n    }\n    asJson() {\n        const jsonObj = { ...this.privTranslationPhrase };\n        // Convert the enum values to their string representations for serialization\n        const serializedObj = {\n            ...jsonObj,\n            RecognitionStatus: Exports_js_1.RecognitionStatus[jsonObj.RecognitionStatus]\n        };\n        if (jsonObj.Translation) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            serializedObj.Translation = {\n                ...jsonObj.Translation,\n                TranslationStatus: TranslationStatus_js_1.TranslationStatus[jsonObj.Translation.TranslationStatus]\n            };\n        }\n        return JSON.stringify(serializedObj);\n    }\n    mapRecognitionStatus(status) {\n        if (typeof status === \"string\") {\n            return Exports_js_1.RecognitionStatus[status];\n        }\n        else if (typeof status === \"number\") {\n            return status;\n        }\n    }\n    mapTranslationStatus(status) {\n        if (typeof status === \"string\") {\n            return TranslationStatus_js_1.TranslationStatus[status];\n        }\n        else if (typeof status === \"number\") {\n            return status;\n        }\n    }\n}\nexports.TranslationPhrase = TranslationPhrase;\n\n//# sourceMappingURL=TranslationPhrase.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationServiceRecognizer = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\n// eslint-disable-next-line max-classes-per-file\nclass TranslationServiceRecognizer extends Exports_js_3.ConversationServiceRecognizer {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, translationRecognizer) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, translationRecognizer);\n        this.privTranslationRecognizer = translationRecognizer;\n        this.connectionEvents.attach((connectionEvent) => {\n            if (connectionEvent.name === \"ConnectionEstablishedEvent\") {\n                this.privTranslationRecognizer.onConnection();\n            }\n        });\n    }\n    async processTypeSpecificMessages(connectionMessage) {\n        const resultProps = new Exports_js_2.PropertyCollection();\n        let processed = await this.processSpeechMessages(connectionMessage);\n        if (processed) {\n            return true;\n        }\n        const handleTranslationPhrase = async (translatedPhrase) => {\n            resultProps.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_JsonResult, translatedPhrase.asJson());\n            this.privRequestSession.onPhraseRecognized(translatedPhrase.Offset + translatedPhrase.Duration);\n            if (translatedPhrase.RecognitionStatus === Exports_js_3.RecognitionStatus.Success) {\n                // OK, the recognition was successful. How'd the translation do?\n                const result = this.fireEventForResult(translatedPhrase, resultProps);\n                if (!!this.privTranslationRecognizer.recognized) {\n                    try {\n                        this.privTranslationRecognizer.recognized(this.privTranslationRecognizer, result);\n                        /* eslint-disable no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                // report result to promise.\n                if (!!this.privSuccessCallback) {\n                    try {\n                        this.privSuccessCallback(result.result);\n                    }\n                    catch (e) {\n                        if (!!this.privErrorCallback) {\n                            this.privErrorCallback(e);\n                        }\n                    }\n                    // Only invoke the call back once.\n                    // and if it's successful don't invoke the\n                    // error after that.\n                    this.privSuccessCallback = undefined;\n                    this.privErrorCallback = undefined;\n                }\n            }\n            else {\n                const reason = Exports_js_3.EnumTranslation.implTranslateRecognitionResult(translatedPhrase.RecognitionStatus);\n                const result = new Exports_js_2.TranslationRecognitionResult(undefined, this.privRequestSession.requestId, reason, translatedPhrase.Text, translatedPhrase.Duration, translatedPhrase.Offset, translatedPhrase.Language, translatedPhrase.Confidence, undefined, translatedPhrase.asJson(), resultProps);\n                if (reason === Exports_js_2.ResultReason.Canceled) {\n                    const cancelReason = Exports_js_3.EnumTranslation.implTranslateCancelResult(translatedPhrase.RecognitionStatus);\n                    const cancellationErrorCode = Exports_js_3.EnumTranslation.implTranslateCancelErrorCode(translatedPhrase.RecognitionStatus);\n                    await this.cancelRecognitionLocal(cancelReason, cancellationErrorCode, Exports_js_3.EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\n                }\n                else {\n                    if (translatedPhrase.RecognitionStatus !== Exports_js_3.RecognitionStatus.EndOfDictation) {\n                        const ev = new Exports_js_2.TranslationRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\n                        if (!!this.privTranslationRecognizer.recognized) {\n                            try {\n                                this.privTranslationRecognizer.recognized(this.privTranslationRecognizer, ev);\n                                /* eslint-disable no-empty */\n                            }\n                            catch (error) {\n                                // Not going to let errors in the event handler\n                                // trip things up.\n                            }\n                        }\n                        // report result to promise.\n                        if (!!this.privSuccessCallback) {\n                            try {\n                                this.privSuccessCallback(result);\n                            }\n                            catch (e) {\n                                if (!!this.privErrorCallback) {\n                                    this.privErrorCallback(e);\n                                }\n                            }\n                            // Only invoke the call back once.\n                            // and if it's successful don't invoke the\n                            // error after that.\n                            this.privSuccessCallback = undefined;\n                            this.privErrorCallback = undefined;\n                        }\n                    }\n                }\n                processed = true;\n            }\n        };\n        const handleTranslationHypothesis = (hypothesis) => {\n            resultProps.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_JsonResult, hypothesis.asJson());\n            const result = this.fireEventForResult(hypothesis, resultProps);\n            this.privRequestSession.onHypothesis(result.offset);\n            if (!!this.privTranslationRecognizer.recognizing) {\n                try {\n                    this.privTranslationRecognizer.recognizing(this.privTranslationRecognizer, result);\n                    /* eslint-disable no-empty */\n                }\n                catch (error) {\n                    // Not going to let errors in the event handler\n                    // trip things up.\n                }\n            }\n            processed = true;\n        };\n        if (connectionMessage.messageType === Exports_js_1.MessageType.Text) {\n            resultProps.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n        }\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"translation.hypothesis\":\n                handleTranslationHypothesis(Exports_js_3.TranslationHypothesis.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset));\n                break;\n            case \"translation.response\":\n                const phrase = JSON.parse(connectionMessage.textBody);\n                if (!!phrase.SpeechPhrase) {\n                    await handleTranslationPhrase(Exports_js_3.TranslationPhrase.fromTranslationResponse(phrase, this.privRequestSession.currentTurnAudioOffset));\n                }\n                else {\n                    const hypothesis = JSON.parse(connectionMessage.textBody);\n                    if (!!hypothesis.SpeechHypothesis) {\n                        handleTranslationHypothesis(Exports_js_3.TranslationHypothesis.fromTranslationResponse(hypothesis, this.privRequestSession.currentTurnAudioOffset));\n                    }\n                }\n                break;\n            case \"translation.phrase\":\n                await handleTranslationPhrase(Exports_js_3.TranslationPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset));\n                break;\n            case \"translation.synthesis\":\n            case \"audio\":\n                this.sendSynthesisAudio(connectionMessage.binaryBody, this.privRequestSession.sessionId);\n                processed = true;\n                break;\n            case \"audio.end\":\n            case \"translation.synthesis.end\":\n                const synthEnd = Exports_js_3.TranslationSynthesisEnd.fromJSON(connectionMessage.textBody);\n                switch (synthEnd.SynthesisStatus) {\n                    case Exports_js_3.SynthesisStatus.Error:\n                        if (!!this.privTranslationRecognizer.synthesizing) {\n                            const result = new Exports_js_2.TranslationSynthesisResult(Exports_js_2.ResultReason.Canceled, undefined);\n                            const retEvent = new Exports_js_2.TranslationSynthesisEventArgs(result, this.privRequestSession.sessionId);\n                            try {\n                                this.privTranslationRecognizer.synthesizing(this.privTranslationRecognizer, retEvent);\n                                /* eslint-disable no-empty */\n                            }\n                            catch (error) {\n                                // Not going to let errors in the event handler\n                                // trip things up.\n                            }\n                        }\n                        if (!!this.privTranslationRecognizer.canceled) {\n                            // And raise a canceled event to send the rich(er) error message back.\n                            const canceledResult = new Exports_js_2.TranslationRecognitionCanceledEventArgs(this.privRequestSession.sessionId, Exports_js_2.CancellationReason.Error, synthEnd.FailureReason, Exports_js_2.CancellationErrorCode.ServiceError, null);\n                            try {\n                                this.privTranslationRecognizer.canceled(this.privTranslationRecognizer, canceledResult);\n                                /* eslint-disable no-empty */\n                            }\n                            catch (error) {\n                                // Not going to let errors in the event handler\n                                // trip things up.\n                            }\n                        }\n                        break;\n                    case Exports_js_3.SynthesisStatus.Success:\n                        this.sendSynthesisAudio(undefined, this.privRequestSession.sessionId);\n                        break;\n                    default:\n                        break;\n                }\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        return processed;\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new Exports_js_2.PropertyCollection();\n        properties.setProperty(Exports_js_3.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[errorCode]);\n        if (!!this.privTranslationRecognizer.canceled) {\n            const cancelEvent = new Exports_js_2.TranslationRecognitionCanceledEventArgs(sessionId, cancellationReason, error, errorCode, undefined);\n            try {\n                this.privTranslationRecognizer.canceled(this.privTranslationRecognizer, cancelEvent);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n        if (!!this.privSuccessCallback) {\n            const result = new Exports_js_2.TranslationRecognitionResult(undefined, // Translations\n            requestId, Exports_js_2.ResultReason.Canceled, undefined, // Text\n            undefined, // Druation\n            undefined, // Offset\n            undefined, // Language\n            undefined, // LanguageDetectionConfidence\n            error, undefined, // Json\n            properties);\n            try {\n                this.privSuccessCallback(result);\n                /* eslint-disable no-empty */\n                this.privSuccessCallback = undefined;\n            }\n            catch { }\n        }\n    }\n    handleRecognizingCallback(result, offset, sessionId) {\n        try {\n            const ev = new Exports_js_2.TranslationRecognitionEventArgs(Exports_js_2.TranslationRecognitionResult.fromSpeechRecognitionResult(result), offset, sessionId);\n            this.privTranslationRecognizer.recognizing(this.privTranslationRecognizer, ev);\n            /* eslint-disable no-empty */\n        }\n        catch (error) {\n            // Not going to let errors in the event handler\n            // trip things up.\n        }\n    }\n    handleRecognizedCallback(result, offset, sessionId) {\n        try {\n            const ev = new Exports_js_2.TranslationRecognitionEventArgs(Exports_js_2.TranslationRecognitionResult.fromSpeechRecognitionResult(result), offset, sessionId);\n            this.privTranslationRecognizer.recognized(this.privTranslationRecognizer, ev);\n        }\n        catch (error) {\n            // Not going to let errors in the event handler\n            // trip things up.\n        }\n    }\n    fireEventForResult(serviceResult, properties) {\n        let translations;\n        if (undefined !== serviceResult.Translation.Translations) {\n            translations = new Exports_js_2.Translations();\n            for (const translation of serviceResult.Translation.Translations) {\n                translations.set(translation.Language, translation.Text || translation.DisplayText);\n            }\n        }\n        let resultReason;\n        let confidence;\n        if (serviceResult instanceof Exports_js_3.TranslationPhrase) {\n            if (!!serviceResult.Translation && serviceResult.Translation.TranslationStatus === Exports_js_1.TranslationStatus.Success) {\n                resultReason = Exports_js_2.ResultReason.TranslatedSpeech;\n            }\n            else {\n                resultReason = Exports_js_2.ResultReason.RecognizedSpeech;\n            }\n            confidence = serviceResult.Confidence;\n        }\n        else {\n            resultReason = Exports_js_2.ResultReason.TranslatingSpeech;\n        }\n        const language = serviceResult.Language;\n        const result = new Exports_js_2.TranslationRecognitionResult(translations, this.privRequestSession.requestId, resultReason, serviceResult.Text, serviceResult.Duration, serviceResult.Offset, language, confidence, serviceResult.Translation.FailureReason, serviceResult.asJson(), properties);\n        const ev = new Exports_js_2.TranslationRecognitionEventArgs(result, serviceResult.Offset, this.privRequestSession.sessionId);\n        return ev;\n    }\n    sendSynthesisAudio(audio, sessionId) {\n        const reason = (undefined === audio) ? Exports_js_2.ResultReason.SynthesizingAudioCompleted : Exports_js_2.ResultReason.SynthesizingAudio;\n        const result = new Exports_js_2.TranslationSynthesisResult(reason, audio);\n        const retEvent = new Exports_js_2.TranslationSynthesisEventArgs(result, sessionId);\n        if (!!this.privTranslationRecognizer.synthesizing) {\n            try {\n                this.privTranslationRecognizer.synthesizing(this.privTranslationRecognizer, retEvent);\n                /* eslint-disable no-empty */\n            }\n            catch (error) {\n                // Not going to let errors in the event handler\n                // trip things up.\n            }\n        }\n    }\n}\nexports.TranslationServiceRecognizer = TranslationServiceRecognizer;\n\n//# sourceMappingURL=TranslationServiceRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechDetected = void 0;\nclass SpeechDetected {\n    constructor(json, baseOffset) {\n        this.privSpeechStartDetected = JSON.parse(json);\n        this.privSpeechStartDetected.Offset += baseOffset;\n    }\n    static fromJSON(json, baseOffset) {\n        return new SpeechDetected(json, baseOffset);\n    }\n    get Offset() {\n        return this.privSpeechStartDetected.Offset;\n    }\n}\nexports.SpeechDetected = SpeechDetected;\n\n//# sourceMappingURL=SpeechDetected.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechHypothesis = void 0;\nclass SpeechHypothesis {\n    constructor(json, baseOffset) {\n        this.privSpeechHypothesis = JSON.parse(json);\n        this.updateOffset(baseOffset);\n    }\n    static fromJSON(json, baseOffset) {\n        return new SpeechHypothesis(json, baseOffset);\n    }\n    updateOffset(baseOffset) {\n        this.privSpeechHypothesis.Offset += baseOffset;\n    }\n    asJson() {\n        return JSON.stringify(this.privSpeechHypothesis);\n    }\n    get Text() {\n        return this.privSpeechHypothesis.Text;\n    }\n    get Offset() {\n        return this.privSpeechHypothesis.Offset;\n    }\n    get Duration() {\n        return this.privSpeechHypothesis.Duration;\n    }\n    get Language() {\n        return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Language;\n    }\n    get LanguageDetectionConfidence() {\n        return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Confidence;\n    }\n    get SpeakerId() {\n        return this.privSpeechHypothesis.SpeakerId;\n    }\n}\nexports.SpeechHypothesis = SpeechHypothesis;\n\n//# sourceMappingURL=SpeechHypothesis.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechKeyword = void 0;\nclass SpeechKeyword {\n    constructor(json, baseOffset) {\n        this.privSpeechKeyword = JSON.parse(json);\n        this.privSpeechKeyword.Offset += baseOffset;\n    }\n    static fromJSON(json, baseOffset) {\n        return new SpeechKeyword(json, baseOffset);\n    }\n    get Status() {\n        return this.privSpeechKeyword.Status;\n    }\n    get Text() {\n        return this.privSpeechKeyword.Text;\n    }\n    get Offset() {\n        return this.privSpeechKeyword.Offset;\n    }\n    get Duration() {\n        return this.privSpeechKeyword.Duration;\n    }\n    asJson() {\n        return JSON.stringify(this.privSpeechKeyword);\n    }\n}\nexports.SpeechKeyword = SpeechKeyword;\n\n//# sourceMappingURL=SpeechKeyword.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechServiceRecognizer = void 0;\nconst Exports_js_1 = require(\"../sdk/Exports.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\n// eslint-disable-next-line max-classes-per-file\nclass SpeechServiceRecognizer extends Exports_js_2.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, speechRecognizer) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, speechRecognizer);\n        this.privSpeechRecognizer = speechRecognizer;\n    }\n    async processTypeSpecificMessages(connectionMessage) {\n        let result;\n        const resultProps = new Exports_js_1.PropertyCollection();\n        let processed = false;\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"speech.hypothesis\":\n            case \"speech.fragment\":\n                const hypothesis = Exports_js_2.SpeechHypothesis.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                resultProps.setProperty(Exports_js_1.PropertyId.SpeechServiceResponse_JsonResult, hypothesis.asJson());\n                result = new Exports_js_1.SpeechRecognitionResult(this.privRequestSession.requestId, Exports_js_1.ResultReason.RecognizingSpeech, hypothesis.Text, hypothesis.Duration, hypothesis.Offset, hypothesis.Language, hypothesis.LanguageDetectionConfidence, undefined, // Speaker Id\n                undefined, hypothesis.asJson(), resultProps);\n                this.privRequestSession.onHypothesis(hypothesis.Offset);\n                const ev = new Exports_js_1.SpeechRecognitionEventArgs(result, hypothesis.Offset, this.privRequestSession.sessionId);\n                if (!!this.privSpeechRecognizer.recognizing) {\n                    try {\n                        this.privSpeechRecognizer.recognizing(this.privSpeechRecognizer, ev);\n                        /* eslint-disable no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                processed = true;\n                break;\n            case \"speech.phrase\":\n                const simple = Exports_js_2.SimpleSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                resultProps.setProperty(Exports_js_1.PropertyId.SpeechServiceResponse_JsonResult, simple.asJson());\n                const resultReason = Exports_js_2.EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus, this.privExpectContentAssessmentResponse);\n                this.privRequestSession.onPhraseRecognized(simple.Offset + simple.Duration);\n                if (Exports_js_1.ResultReason.Canceled === resultReason) {\n                    const cancelReason = Exports_js_2.EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus);\n                    const cancellationErrorCode = Exports_js_2.EnumTranslation.implTranslateCancelErrorCode(simple.RecognitionStatus);\n                    await this.cancelRecognitionLocal(cancelReason, cancellationErrorCode, Exports_js_2.EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\n                }\n                else {\n                    // Like the native SDK's, don't event / return an EndOfDictation message.\n                    if (simple.RecognitionStatus === Exports_js_2.RecognitionStatus.EndOfDictation) {\n                        break;\n                    }\n                    if (this.privRecognizerConfig.parameters.getProperty(Exports_js_2.OutputFormatPropertyName) === Exports_js_1.OutputFormat[Exports_js_1.OutputFormat.Simple]) {\n                        result = new Exports_js_1.SpeechRecognitionResult(this.privRequestSession.requestId, resultReason, simple.DisplayText, simple.Duration, simple.Offset, simple.Language, simple.LanguageDetectionConfidence, undefined, // Speaker Id\n                        undefined, simple.asJson(), resultProps);\n                    }\n                    else {\n                        const detailed = Exports_js_2.DetailedSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                        resultProps.setProperty(Exports_js_1.PropertyId.SpeechServiceResponse_JsonResult, detailed.asJson());\n                        result = new Exports_js_1.SpeechRecognitionResult(this.privRequestSession.requestId, resultReason, detailed.RecognitionStatus === Exports_js_2.RecognitionStatus.Success ? detailed.NBest[0].Display : \"\", detailed.Duration, detailed.Offset, detailed.Language, detailed.LanguageDetectionConfidence, undefined, // Speaker Id\n                        undefined, detailed.asJson(), resultProps);\n                    }\n                    const event = new Exports_js_1.SpeechRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\n                    if (!!this.privSpeechRecognizer.recognized) {\n                        try {\n                            this.privSpeechRecognizer.recognized(this.privSpeechRecognizer, event);\n                            /* eslint-disable no-empty */\n                        }\n                        catch (error) {\n                            // Not going to let errors in the event handler\n                            // trip things up.\n                        }\n                    }\n                    if (!!this.privSuccessCallback) {\n                        try {\n                            this.privSuccessCallback(result);\n                        }\n                        catch (e) {\n                            if (!!this.privErrorCallback) {\n                                this.privErrorCallback(e);\n                            }\n                        }\n                        // Only invoke the call back once.\n                        // and if it's successful don't invoke the\n                        // error after that.\n                        this.privSuccessCallback = undefined;\n                        this.privErrorCallback = undefined;\n                    }\n                }\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        return processed;\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new Exports_js_1.PropertyCollection();\n        properties.setProperty(Exports_js_2.CancellationErrorCodePropertyName, Exports_js_1.CancellationErrorCode[errorCode]);\n        if (!!this.privSpeechRecognizer.canceled) {\n            const cancelEvent = new Exports_js_1.SpeechRecognitionCanceledEventArgs(cancellationReason, error, errorCode, undefined, sessionId);\n            try {\n                this.privSpeechRecognizer.canceled(this.privSpeechRecognizer, cancelEvent);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n        if (!!this.privSuccessCallback) {\n            const result = new Exports_js_1.SpeechRecognitionResult(requestId, Exports_js_1.ResultReason.Canceled, undefined, // Text\n            undefined, // Duration\n            undefined, // Offset\n            undefined, // Language\n            undefined, // Language Detection Confidence\n            undefined, // Speaker Id\n            error, undefined, // Json\n            properties);\n            try {\n                this.privSuccessCallback(result);\n                this.privSuccessCallback = undefined;\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n    }\n}\nexports.SpeechServiceRecognizer = SpeechServiceRecognizer;\n\n//# sourceMappingURL=SpeechServiceRecognizer.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdentityProvider = exports.SpeakerDiarizationMode = void 0;\n/**\n * The speaker diarization mode\n */\nvar SpeakerDiarizationMode;\n(function (SpeakerDiarizationMode) {\n    SpeakerDiarizationMode[\"None\"] = \"None\";\n    SpeakerDiarizationMode[\"Identity\"] = \"Identity\";\n    SpeakerDiarizationMode[\"Anonymous\"] = \"Anonymous\";\n})(SpeakerDiarizationMode = exports.SpeakerDiarizationMode || (exports.SpeakerDiarizationMode = {}));\n/**\n * The identity provider\n */\nvar IdentityProvider;\n(function (IdentityProvider) {\n    IdentityProvider[\"CallCenter\"] = \"CallCenter\";\n})(IdentityProvider = exports.IdentityProvider || (exports.IdentityProvider = {}));\n\n//# sourceMappingURL=SpeakerDiarization.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranscriptionServiceRecognizer = void 0;\nconst Exports_js_1 = require(\"../sdk/Exports.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\nconst SpeakerDiarization_js_1 = require(\"./ServiceMessages/PhraseDetection/SpeakerDiarization.js\");\nconst PhraseDetectionContext_js_1 = require(\"./ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\n// eslint-disable-next-line max-classes-per-file\nclass ConversationTranscriptionServiceRecognizer extends Exports_js_2.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, conversationTranscriber) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, conversationTranscriber);\n        this.privConversationTranscriber = conversationTranscriber;\n        this.setSpeakerDiarizationJson();\n    }\n    setSpeakerDiarizationJson() {\n        if (this.privEnableSpeakerId) {\n            const phraseDetection = this.privSpeechContext.getContext().phraseDetection || {};\n            phraseDetection.mode = PhraseDetectionContext_js_1.RecognitionMode.Conversation;\n            const speakerDiarization = {};\n            speakerDiarization.mode = SpeakerDiarization_js_1.SpeakerDiarizationMode.Anonymous;\n            speakerDiarization.audioSessionId = this.privDiarizationSessionId;\n            speakerDiarization.audioOffsetMs = 0;\n            speakerDiarization.diarizeIntermediates = this.privRecognizerConfig.parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceResponse_DiarizeIntermediateResults, \"false\") === \"true\";\n            phraseDetection.speakerDiarization = speakerDiarization;\n            this.privSpeechContext.getContext().phraseDetection = phraseDetection;\n        }\n    }\n    async processTypeSpecificMessages(connectionMessage) {\n        let result;\n        const resultProps = new Exports_js_1.PropertyCollection();\n        resultProps.setProperty(Exports_js_1.PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n        let processed = false;\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"speech.hypothesis\":\n            case \"speech.fragment\":\n                const hypothesis = Exports_js_2.SpeechHypothesis.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                result = new Exports_js_1.ConversationTranscriptionResult(this.privRequestSession.requestId, Exports_js_1.ResultReason.RecognizingSpeech, hypothesis.Text, hypothesis.Duration, hypothesis.Offset, hypothesis.Language, hypothesis.LanguageDetectionConfidence, hypothesis.SpeakerId, undefined, hypothesis.asJson(), resultProps);\n                this.privRequestSession.onHypothesis(hypothesis.Offset);\n                const ev = new Exports_js_1.ConversationTranscriptionEventArgs(result, hypothesis.Duration, this.privRequestSession.sessionId);\n                if (!!this.privConversationTranscriber.transcribing) {\n                    try {\n                        this.privConversationTranscriber.transcribing(this.privConversationTranscriber, ev);\n                        /* eslint-disable no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                processed = true;\n                break;\n            case \"speech.phrase\":\n                const simple = Exports_js_2.SimpleSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                const resultReason = Exports_js_2.EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus);\n                this.privRequestSession.onPhraseRecognized(simple.Offset + simple.Duration);\n                if (Exports_js_1.ResultReason.Canceled === resultReason) {\n                    const cancelReason = Exports_js_2.EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus);\n                    const cancellationErrorCode = Exports_js_2.EnumTranslation.implTranslateCancelErrorCode(simple.RecognitionStatus);\n                    await this.cancelRecognitionLocal(cancelReason, cancellationErrorCode, Exports_js_2.EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\n                }\n                else {\n                    if (!(this.privRequestSession.isSpeechEnded && resultReason === Exports_js_1.ResultReason.NoMatch && simple.RecognitionStatus !== Exports_js_2.RecognitionStatus.InitialSilenceTimeout)) {\n                        if (this.privRecognizerConfig.parameters.getProperty(Exports_js_2.OutputFormatPropertyName) === Exports_js_1.OutputFormat[Exports_js_1.OutputFormat.Simple]) {\n                            result = new Exports_js_1.ConversationTranscriptionResult(this.privRequestSession.requestId, resultReason, simple.DisplayText, simple.Duration, simple.Offset, simple.Language, simple.LanguageDetectionConfidence, simple.SpeakerId, undefined, simple.asJson(), resultProps);\n                        }\n                        else {\n                            const detailed = Exports_js_2.DetailedSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                            result = new Exports_js_1.ConversationTranscriptionResult(this.privRequestSession.requestId, resultReason, detailed.RecognitionStatus === Exports_js_2.RecognitionStatus.Success ? detailed.NBest[0].Display : undefined, detailed.Duration, detailed.Offset, detailed.Language, detailed.LanguageDetectionConfidence, simple.SpeakerId, undefined, detailed.asJson(), resultProps);\n                        }\n                        const event = new Exports_js_1.ConversationTranscriptionEventArgs(result, result.offset, this.privRequestSession.sessionId);\n                        if (!!this.privConversationTranscriber.transcribed) {\n                            try {\n                                this.privConversationTranscriber.transcribed(this.privConversationTranscriber, event);\n                                /* eslint-disable no-empty */\n                            }\n                            catch (error) {\n                                // Not going to let errors in the event handler\n                                // trip things up.\n                            }\n                        }\n                    }\n                }\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        return processed;\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new Exports_js_1.PropertyCollection();\n        properties.setProperty(Exports_js_2.CancellationErrorCodePropertyName, Exports_js_1.CancellationErrorCode[errorCode]);\n        if (!!this.privConversationTranscriber.canceled) {\n            const cancelEvent = new Exports_js_1.ConversationTranscriptionCanceledEventArgs(cancellationReason, error, errorCode, undefined, sessionId);\n            try {\n                this.privConversationTranscriber.canceled(this.privConversationTranscriber, cancelEvent);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n    }\n}\nexports.ConversationTranscriptionServiceRecognizer = ConversationTranscriptionServiceRecognizer;\n\n//# sourceMappingURL=ConversationTranscriptionServiceRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranscriptionServiceRecognizer = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\nconst SpeechConnectionMessage_Internal_js_1 = require(\"./SpeechConnectionMessage.Internal.js\");\n// eslint-disable-next-line max-classes-per-file\nclass TranscriptionServiceRecognizer extends Exports_js_3.ConversationServiceRecognizer {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, transcriber) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, transcriber);\n        this.privTranscriberRecognizer = transcriber;\n        this.sendPrePayloadJSONOverride = (connection) => this.sendTranscriptionStartJSON(connection);\n        if (this.privRecognizerConfig.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps) === \"true\") {\n            this.privSpeechContext.setWordLevelTimings();\n        }\n    }\n    async sendSpeechEventAsync(info, command) {\n        if (!!this.privRequestSession.isRecognizing) {\n            const connection = await this.fetchConnection();\n            await this.sendSpeechEvent(connection, this.createSpeechEventPayload(info, command));\n        }\n    }\n    async sendMeetingSpeechEventAsync(info, command) {\n        if (!!this.privRequestSession.isRecognizing) {\n            const connection = await this.fetchConnection();\n            await this.sendSpeechEvent(connection, this.createMeetingSpeechEventPayload(info, command));\n        }\n    }\n    processTypeSpecificMessages(connectionMessage) {\n        return this.processSpeechMessages(connectionMessage);\n    }\n    handleRecognizedCallback(result, offset, sessionId) {\n        try {\n            const event = new Exports_js_2.SpeechRecognitionEventArgs(result, offset, sessionId);\n            this.privTranscriberRecognizer.recognized(this.privTranscriberRecognizer, event);\n            if (!!this.privSuccessCallback) {\n                try {\n                    this.privSuccessCallback(result);\n                }\n                catch (e) {\n                    if (!!this.privErrorCallback) {\n                        this.privErrorCallback(e);\n                    }\n                }\n                // Only invoke the call back once.\n                // and if it's successful don't invoke the\n                // error after that.\n                this.privSuccessCallback = undefined;\n                this.privErrorCallback = undefined;\n            }\n            /* eslint-disable no-empty */\n        }\n        catch (error) {\n            // Not going to let errors in the event handler\n            // trip things up.\n        }\n    }\n    handleRecognizingCallback(result, duration, sessionId) {\n        try {\n            const ev = new Exports_js_2.SpeechRecognitionEventArgs(result, duration, sessionId);\n            this.privTranscriberRecognizer.recognizing(this.privTranscriberRecognizer, ev);\n            /* eslint-disable no-empty */\n        }\n        catch (error) {\n            // Not going to let errors in the event handler\n            // trip things up.\n        }\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new Exports_js_2.PropertyCollection();\n        properties.setProperty(Exports_js_3.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[errorCode]);\n        if (this.privTranscriberRecognizer.IsMeetingRecognizer()) {\n            if (!!this.privTranscriberRecognizer.canceled) {\n                const cancelEvent = new Exports_js_2.MeetingTranscriptionCanceledEventArgs(cancellationReason, error, errorCode, undefined, sessionId);\n                try {\n                    this.privTranscriberRecognizer.canceled(this.privTranscriberRecognizer, cancelEvent);\n                    /* eslint-disable no-empty */\n                }\n                catch { }\n            }\n        }\n        else {\n            if (!!this.privTranscriberRecognizer.canceled) {\n                const cancelEvent = new Exports_js_2.ConversationTranscriptionCanceledEventArgs(cancellationReason, error, errorCode, undefined, sessionId);\n                try {\n                    this.privTranscriberRecognizer.canceled(this.privTranscriberRecognizer, cancelEvent);\n                    /* eslint-disable no-empty */\n                }\n                catch { }\n            }\n        }\n        if (!!this.privSuccessCallback) {\n            const result = new Exports_js_2.SpeechRecognitionResult(requestId, Exports_js_2.ResultReason.Canceled, undefined, // Text\n            undefined, // Duration\n            undefined, // Offset\n            undefined, // Language\n            undefined, // Language Detection Confidence\n            undefined, // Speaker Id\n            error, undefined, // Json\n            properties);\n            try {\n                this.privSuccessCallback(result);\n                this.privSuccessCallback = undefined;\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n    }\n    // Encapsulated for derived service recognizers that need to send additional JSON\n    async sendTranscriptionStartJSON(connection) {\n        await this.sendSpeechContext(connection, true);\n        if (this.privTranscriberRecognizer.IsMeetingRecognizer()) {\n            const info = this.privTranscriberRecognizer.getMeetingInfo();\n            const payload = this.createMeetingSpeechEventPayload(info, \"start\");\n            await this.sendSpeechEvent(connection, payload);\n        }\n        else {\n            const info = this.privTranscriberRecognizer.getConversationInfo();\n            const payload = this.createSpeechEventPayload(info, \"start\");\n            await this.sendSpeechEvent(connection, payload);\n        }\n        await this.sendWaveHeader(connection);\n        return;\n    }\n    sendSpeechEvent(connection, payload) {\n        const speechEventJson = JSON.stringify(payload);\n        if (speechEventJson) {\n            return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_1.MessageType.Text, \"speech.event\", this.privRequestSession.requestId, \"application/json\", speechEventJson));\n        }\n        return;\n    }\n    createSpeechEventPayload(info, command) {\n        const eventDict = { id: \"meeting\", name: command, meeting: info.conversationProperties };\n        eventDict.meeting.id = info.id;\n        eventDict.meeting.attendees = info.participants;\n        return eventDict;\n    }\n    createMeetingSpeechEventPayload(info, command) {\n        const eventDict = { id: \"meeting\", name: command, meeting: info.meetingProperties };\n        eventDict.meeting.id = info.id;\n        eventDict.meeting.attendees = info.participants;\n        return eventDict;\n    }\n}\nexports.TranscriptionServiceRecognizer = TranscriptionServiceRecognizer;\n\n//# sourceMappingURL=TranscriptionServiceRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DetailedSpeechPhrase = void 0;\nconst Exports_js_1 = require(\"../Exports.js\");\nclass DetailedSpeechPhrase {\n    constructor(json, baseOffset) {\n        this.privDetailedSpeechPhrase = JSON.parse(json);\n        this.privDetailedSpeechPhrase.RecognitionStatus = this.mapRecognitionStatus(this.privDetailedSpeechPhrase.RecognitionStatus);\n        this.updateOffsets(baseOffset);\n    }\n    static fromJSON(json, baseOffset) {\n        return new DetailedSpeechPhrase(json, baseOffset);\n    }\n    updateOffsets(baseOffset) {\n        this.privDetailedSpeechPhrase.Offset += baseOffset;\n        if (!!this.privDetailedSpeechPhrase.NBest) {\n            for (const phrase of this.privDetailedSpeechPhrase.NBest) {\n                if (!!phrase.Words) {\n                    for (const word of phrase.Words) {\n                        word.Offset += baseOffset;\n                    }\n                }\n                if (!!phrase.DisplayWords) {\n                    for (const word of phrase.DisplayWords) {\n                        word.Offset += baseOffset;\n                    }\n                }\n            }\n        }\n    }\n    asJson() {\n        const jsonObj = { ...this.privDetailedSpeechPhrase };\n        // Convert the enum value to its string representation for serialization purposes.\n        return JSON.stringify({\n            ...jsonObj,\n            RecognitionStatus: Exports_js_1.RecognitionStatus[jsonObj.RecognitionStatus]\n        });\n    }\n    get RecognitionStatus() {\n        return this.privDetailedSpeechPhrase.RecognitionStatus;\n    }\n    get NBest() {\n        return this.privDetailedSpeechPhrase.NBest;\n    }\n    get Duration() {\n        return this.privDetailedSpeechPhrase.Duration;\n    }\n    get Offset() {\n        return this.privDetailedSpeechPhrase.Offset;\n    }\n    get Language() {\n        return this.privDetailedSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privDetailedSpeechPhrase.PrimaryLanguage.Language;\n    }\n    get LanguageDetectionConfidence() {\n        return this.privDetailedSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privDetailedSpeechPhrase.PrimaryLanguage.Confidence;\n    }\n    get Text() {\n        if (!!this.privDetailedSpeechPhrase.NBest && this.privDetailedSpeechPhrase.NBest[0]) {\n            return this.privDetailedSpeechPhrase.NBest[0].Display || this.privDetailedSpeechPhrase.NBest[0].DisplayText;\n        }\n        return this.privDetailedSpeechPhrase.DisplayText;\n    }\n    get SpeakerId() {\n        return this.privDetailedSpeechPhrase.SpeakerId;\n    }\n    mapRecognitionStatus(status) {\n        if (typeof status === \"string\") {\n            return Exports_js_1.RecognitionStatus[status];\n        }\n        else if (typeof status === \"number\") {\n            return status;\n        }\n    }\n}\nexports.DetailedSpeechPhrase = DetailedSpeechPhrase;\n\n//# sourceMappingURL=DetailedSpeechPhrase.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SimpleSpeechPhrase = void 0;\nconst Exports_js_1 = require(\"../Exports.js\");\nclass SimpleSpeechPhrase {\n    constructor(json, baseOffset = 0) {\n        this.privSimpleSpeechPhrase = JSON.parse(json);\n        this.privSimpleSpeechPhrase.RecognitionStatus = this.mapRecognitionStatus(this.privSimpleSpeechPhrase.RecognitionStatus); // RecognitionStatus[this.privSimpleSpeechPhrase.RecognitionStatus as unknown as keyof typeof RecognitionStatus];\n        this.updateOffset(baseOffset);\n    }\n    static fromJSON(json, baseOffset) {\n        return new SimpleSpeechPhrase(json, baseOffset);\n    }\n    updateOffset(baseOffset) {\n        this.privSimpleSpeechPhrase.Offset += baseOffset;\n    }\n    asJson() {\n        const jsonObj = { ...this.privSimpleSpeechPhrase };\n        // Convert the enum value to its string representation for serialization purposes.\n        return JSON.stringify({\n            ...jsonObj,\n            RecognitionStatus: Exports_js_1.RecognitionStatus[jsonObj.RecognitionStatus]\n        });\n    }\n    get RecognitionStatus() {\n        return this.privSimpleSpeechPhrase.RecognitionStatus;\n    }\n    get DisplayText() {\n        return this.privSimpleSpeechPhrase.DisplayText;\n    }\n    get Offset() {\n        return this.privSimpleSpeechPhrase.Offset;\n    }\n    get Duration() {\n        return this.privSimpleSpeechPhrase.Duration;\n    }\n    get Language() {\n        return this.privSimpleSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privSimpleSpeechPhrase.PrimaryLanguage.Language;\n    }\n    get LanguageDetectionConfidence() {\n        return this.privSimpleSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privSimpleSpeechPhrase.PrimaryLanguage.Confidence;\n    }\n    get SpeakerId() {\n        return this.privSimpleSpeechPhrase.SpeakerId;\n    }\n    mapRecognitionStatus(status) {\n        if (typeof status === \"string\") {\n            return Exports_js_1.RecognitionStatus[status];\n        }\n        else if (typeof status === \"number\") {\n            return status;\n        }\n    }\n}\nexports.SimpleSpeechPhrase = SimpleSpeechPhrase;\n\n//# sourceMappingURL=SimpleSpeechPhrase.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AddedLmIntent = void 0;\n/**\n * @class AddedLmIntent\n */\n// eslint-disable-next-line max-classes-per-file\nclass AddedLmIntent {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param modelImpl - The model.\n     * @param intentName - The intent name.\n     */\n    constructor(modelImpl, intentName) {\n        this.modelImpl = modelImpl;\n        this.intentName = intentName;\n    }\n}\nexports.AddedLmIntent = AddedLmIntent;\n\n//# sourceMappingURL=AddedLmIntent.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IntentServiceRecognizer = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\n// eslint-disable-next-line max-classes-per-file\nclass IntentServiceRecognizer extends Exports_js_3.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, recognizer) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, recognizer);\n        this.privIntentRecognizer = recognizer;\n        this.privIntentDataSent = false;\n        recognizerConfig.recognitionEndpointVersion = \"1\";\n    }\n    setIntents(addedIntents, umbrellaIntent) {\n        this.privAddedLmIntents = addedIntents;\n        this.privUmbrellaIntent = umbrellaIntent;\n        this.privIntentDataSent = true;\n    }\n    processTypeSpecificMessages(connectionMessage) {\n        let result;\n        let ev;\n        let processed = false;\n        const resultProps = new Exports_js_2.PropertyCollection();\n        if (connectionMessage.messageType === Exports_js_1.MessageType.Text) {\n            resultProps.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n        }\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"speech.hypothesis\":\n                const speechHypothesis = Exports_js_3.SpeechHypothesis.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                result = new Exports_js_2.IntentRecognitionResult(undefined, this.privRequestSession.requestId, Exports_js_2.ResultReason.RecognizingIntent, speechHypothesis.Text, speechHypothesis.Duration, speechHypothesis.Offset, speechHypothesis.Language, speechHypothesis.LanguageDetectionConfidence, undefined, speechHypothesis.asJson(), resultProps);\n                this.privRequestSession.onHypothesis(result.offset);\n                ev = new Exports_js_2.IntentRecognitionEventArgs(result, speechHypothesis.Offset, this.privRequestSession.sessionId);\n                if (!!this.privIntentRecognizer.recognizing) {\n                    try {\n                        this.privIntentRecognizer.recognizing(this.privIntentRecognizer, ev);\n                        /* eslint-disable no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                processed = true;\n                break;\n            case \"speech.phrase\":\n                const simple = Exports_js_3.SimpleSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                result = new Exports_js_2.IntentRecognitionResult(undefined, this.privRequestSession.requestId, Exports_js_3.EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus), simple.DisplayText, simple.Duration, simple.Offset, simple.Language, simple.LanguageDetectionConfidence, undefined, simple.asJson(), resultProps);\n                ev = new Exports_js_2.IntentRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\n                const sendEvent = () => {\n                    if (!!this.privIntentRecognizer.recognized) {\n                        try {\n                            this.privIntentRecognizer.recognized(this.privIntentRecognizer, ev);\n                            /* eslint-disable no-empty */\n                        }\n                        catch (error) {\n                            // Not going to let errors in the event handler\n                            // trip things up.\n                        }\n                    }\n                    // report result to promise.\n                    if (!!this.privSuccessCallback) {\n                        try {\n                            this.privSuccessCallback(result);\n                        }\n                        catch (e) {\n                            if (!!this.privErrorCallback) {\n                                this.privErrorCallback(e);\n                            }\n                        }\n                        // Only invoke the call back once.\n                        // and if it's successful don't invoke the\n                        // error after that.\n                        this.privSuccessCallback = undefined;\n                        this.privErrorCallback = undefined;\n                    }\n                };\n                // If intent data was sent, the terminal result for this recognizer is an intent being found.\n                // If no intent data was sent, the terminal event is speech recognition being successful.\n                if (false === this.privIntentDataSent || Exports_js_2.ResultReason.NoMatch === ev.result.reason) {\n                    // Advance the buffers.\n                    this.privRequestSession.onPhraseRecognized(ev.offset + ev.result.duration);\n                    sendEvent();\n                }\n                else {\n                    // Squirrel away the args, when the response event arrives it will build upon them\n                    // and then return\n                    this.privPendingIntentArgs = ev;\n                }\n                processed = true;\n                break;\n            case \"response\":\n                // Response from LUIS\n                ev = this.privPendingIntentArgs;\n                this.privPendingIntentArgs = undefined;\n                if (undefined === ev) {\n                    if (\"\" === connectionMessage.textBody) {\n                        // This condition happens if there is nothing but silence in the\n                        // audio sent to the service.\n                        return;\n                    }\n                    // Odd... Not sure this can happen\n                    ev = new Exports_js_2.IntentRecognitionEventArgs(new Exports_js_2.IntentRecognitionResult(), 0, this.privRequestSession.sessionId);\n                }\n                const intentResponse = Exports_js_3.IntentResponse.fromJSON(connectionMessage.textBody);\n                // If LUIS didn't return anything, send the existing event, else\n                // modify it to show the match.\n                // See if the intent found is in the list of intents asked for.\n                if (null !== intentResponse && !!intentResponse.topScoringIntent && !!intentResponse.topScoringIntent.intent) {\n                    let addedIntent = this.privAddedLmIntents[intentResponse.topScoringIntent.intent];\n                    if (this.privUmbrellaIntent !== undefined) {\n                        addedIntent = this.privUmbrellaIntent;\n                    }\n                    if (!!addedIntent) {\n                        const intentId = addedIntent === undefined || addedIntent.intentName === undefined ? intentResponse.topScoringIntent.intent : addedIntent.intentName;\n                        let reason = ev.result.reason;\n                        if (undefined !== intentId) {\n                            reason = Exports_js_2.ResultReason.RecognizedIntent;\n                        }\n                        // make sure, properties is set.\n                        const properties = (undefined !== ev.result.properties) ?\n                            ev.result.properties : new Exports_js_2.PropertyCollection();\n                        properties.setProperty(Exports_js_2.PropertyId.LanguageUnderstandingServiceResponse_JsonResult, connectionMessage.textBody);\n                        ev = new Exports_js_2.IntentRecognitionEventArgs(new Exports_js_2.IntentRecognitionResult(intentId, ev.result.resultId, reason, ev.result.text, ev.result.duration, ev.result.offset, undefined, undefined, ev.result.errorDetails, ev.result.json, properties), ev.offset, ev.sessionId);\n                    }\n                }\n                this.privRequestSession.onPhraseRecognized(ev.offset + ev.result.duration);\n                if (!!this.privIntentRecognizer.recognized) {\n                    try {\n                        this.privIntentRecognizer.recognized(this.privIntentRecognizer, ev);\n                        /* eslint-disable no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                // report result to promise.\n                if (!!this.privSuccessCallback) {\n                    try {\n                        this.privSuccessCallback(ev.result);\n                    }\n                    catch (e) {\n                        if (!!this.privErrorCallback) {\n                            this.privErrorCallback(e);\n                        }\n                    }\n                    // Only invoke the call back once.\n                    // and if it's successful don't invoke the\n                    // error after that.\n                    this.privSuccessCallback = undefined;\n                    this.privErrorCallback = undefined;\n                }\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        const defferal = new Exports_js_1.Deferred();\n        defferal.resolve(processed);\n        return defferal.promise;\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new Exports_js_2.PropertyCollection();\n        properties.setProperty(Exports_js_3.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[errorCode]);\n        if (!!this.privIntentRecognizer.canceled) {\n            const cancelEvent = new Exports_js_2.IntentRecognitionCanceledEventArgs(cancellationReason, error, errorCode, undefined, undefined, sessionId);\n            try {\n                this.privIntentRecognizer.canceled(this.privIntentRecognizer, cancelEvent);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n        if (!!this.privSuccessCallback) {\n            const result = new Exports_js_2.IntentRecognitionResult(undefined, // Intent Id\n            requestId, Exports_js_2.ResultReason.Canceled, undefined, // Text\n            undefined, // Duration\n            undefined, // Offset\n            undefined, // Language\n            undefined, // LanguageDetectionConfidence\n            error, undefined, // Json\n            properties);\n            try {\n                this.privSuccessCallback(result);\n                this.privSuccessCallback = undefined;\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n    }\n}\nexports.IntentServiceRecognizer = IntentServiceRecognizer;\n\n//# sourceMappingURL=IntentServiceRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// response\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IntentResponse = void 0;\nclass IntentResponse {\n    constructor(json) {\n        if (json === \"\") {\n            this.privIntentResponse = {};\n        }\n        else {\n            this.privIntentResponse = JSON.parse(json);\n        }\n    }\n    static fromJSON(json) {\n        return new IntentResponse(json);\n    }\n    get query() {\n        return this.privIntentResponse.query;\n    }\n    get topScoringIntent() {\n        return this.privIntentResponse.topScoringIntent;\n    }\n    get entities() {\n        return this.privIntentResponse.entities;\n    }\n}\nexports.IntentResponse = IntentResponse;\n\n//# sourceMappingURL=IntentResponse.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/* eslint-disable max-classes-per-file */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=SpeakerResponse.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServiceTelemetryListener = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst RecognitionEvents_js_1 = require(\"./RecognitionEvents.js\");\nclass ServiceTelemetryListener {\n    constructor(requestId, audioSourceId, audioNodeId) {\n        this.privIsDisposed = false;\n        this.privListeningTriggerMetric = null;\n        this.privMicMetric = null;\n        this.privConnectionEstablishMetric = null;\n        this.privRequestId = requestId;\n        this.privAudioSourceId = audioSourceId;\n        this.privAudioNodeId = audioNodeId;\n        this.privReceivedMessages = {};\n        this.privPhraseLatencies = [];\n        this.privHypothesisLatencies = [];\n    }\n    phraseReceived(audioReceivedTime) {\n        if (audioReceivedTime > 0) { // 0 indicates the time is unknown. Drop it.\n            this.privPhraseLatencies.push(Date.now() - audioReceivedTime);\n        }\n    }\n    hypothesisReceived(audioReceivedTime) {\n        if (audioReceivedTime > 0) { // 0 indicates the time is unknown. Drop it.\n            this.privHypothesisLatencies.push(Date.now() - audioReceivedTime);\n        }\n    }\n    onEvent(e) {\n        if (this.privIsDisposed) {\n            return;\n        }\n        if (e instanceof RecognitionEvents_js_1.RecognitionTriggeredEvent && e.requestId === this.privRequestId) {\n            this.privListeningTriggerMetric = {\n                End: e.eventTime,\n                Name: \"ListeningTrigger\",\n                Start: e.eventTime,\n            };\n        }\n        if (e instanceof Exports_js_1.AudioStreamNodeAttachingEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\n            this.privMicStartTime = e.eventTime;\n        }\n        if (e instanceof Exports_js_1.AudioStreamNodeAttachedEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\n            this.privMicStartTime = e.eventTime;\n        }\n        if (e instanceof Exports_js_1.AudioSourceErrorEvent && e.audioSourceId === this.privAudioSourceId) {\n            if (!this.privMicMetric) {\n                this.privMicMetric = {\n                    End: e.eventTime,\n                    Error: e.error,\n                    Name: \"Microphone\",\n                    Start: this.privMicStartTime,\n                };\n            }\n        }\n        if (e instanceof Exports_js_1.AudioStreamNodeErrorEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\n            if (!this.privMicMetric) {\n                this.privMicMetric = {\n                    End: e.eventTime,\n                    Error: e.error,\n                    Name: \"Microphone\",\n                    Start: this.privMicStartTime,\n                };\n            }\n        }\n        if (e instanceof Exports_js_1.AudioStreamNodeDetachedEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\n            if (!this.privMicMetric) {\n                this.privMicMetric = {\n                    End: e.eventTime,\n                    Name: \"Microphone\",\n                    Start: this.privMicStartTime,\n                };\n            }\n        }\n        if (e instanceof RecognitionEvents_js_1.ConnectingToServiceEvent && e.requestId === this.privRequestId) {\n            this.privConnectionId = e.sessionId;\n        }\n        if (e instanceof Exports_js_1.ConnectionStartEvent && e.connectionId === this.privConnectionId) {\n            this.privConnectionStartTime = e.eventTime;\n        }\n        if (e instanceof Exports_js_1.ConnectionEstablishedEvent && e.connectionId === this.privConnectionId) {\n            if (!this.privConnectionEstablishMetric) {\n                this.privConnectionEstablishMetric = {\n                    End: e.eventTime,\n                    Id: this.privConnectionId,\n                    Name: \"Connection\",\n                    Start: this.privConnectionStartTime,\n                };\n            }\n        }\n        if (e instanceof Exports_js_1.ConnectionEstablishErrorEvent && e.connectionId === this.privConnectionId) {\n            if (!this.privConnectionEstablishMetric) {\n                this.privConnectionEstablishMetric = {\n                    End: e.eventTime,\n                    Error: this.getConnectionError(e.statusCode),\n                    Id: this.privConnectionId,\n                    Name: \"Connection\",\n                    Start: this.privConnectionStartTime,\n                };\n            }\n        }\n        if (e instanceof Exports_js_1.ConnectionMessageReceivedEvent && e.connectionId === this.privConnectionId) {\n            if (e.message && e.message.headers && e.message.headers.path) {\n                if (!this.privReceivedMessages[e.message.headers.path]) {\n                    this.privReceivedMessages[e.message.headers.path] = new Array();\n                }\n                const maxMessagesToSend = 50;\n                if (this.privReceivedMessages[e.message.headers.path].length < maxMessagesToSend) {\n                    this.privReceivedMessages[e.message.headers.path].push(e.networkReceivedTime);\n                }\n            }\n        }\n    }\n    getTelemetry() {\n        const metrics = new Array();\n        if (this.privListeningTriggerMetric) {\n            metrics.push(this.privListeningTriggerMetric);\n        }\n        if (this.privMicMetric) {\n            metrics.push(this.privMicMetric);\n        }\n        if (this.privConnectionEstablishMetric) {\n            metrics.push(this.privConnectionEstablishMetric);\n        }\n        if (this.privPhraseLatencies.length > 0) {\n            metrics.push({\n                PhraseLatencyMs: this.privPhraseLatencies,\n            });\n        }\n        if (this.privHypothesisLatencies.length > 0) {\n            metrics.push({\n                FirstHypothesisLatencyMs: this.privHypothesisLatencies,\n            });\n        }\n        const telemetry = {\n            Metrics: metrics,\n            ReceivedMessages: this.privReceivedMessages,\n        };\n        const json = JSON.stringify(telemetry);\n        // We dont want to send the same telemetry again. So clean those out.\n        this.privReceivedMessages = {};\n        this.privListeningTriggerMetric = null;\n        this.privMicMetric = null;\n        this.privConnectionEstablishMetric = null;\n        this.privPhraseLatencies = [];\n        this.privHypothesisLatencies = [];\n        return json;\n    }\n    // Determines if there are any telemetry events to send to the service.\n    get hasTelemetry() {\n        return (Object.keys(this.privReceivedMessages).length !== 0 ||\n            this.privListeningTriggerMetric !== null ||\n            this.privMicMetric !== null ||\n            this.privConnectionEstablishMetric !== null ||\n            this.privPhraseLatencies.length !== 0 ||\n            this.privHypothesisLatencies.length !== 0);\n    }\n    dispose() {\n        this.privIsDisposed = true;\n    }\n    getConnectionError(statusCode) {\n        /*\n        -- Websocket status codes --\n        NormalClosure = 1000,\n        EndpointUnavailable = 1001,\n        ProtocolError = 1002,\n        InvalidMessageType = 1003,\n        Empty = 1005,\n        InvalidPayloadData = 1007,\n        PolicyViolation = 1008,\n        MessageTooBig = 1009,\n        MandatoryExtension = 1010,\n        InternalServerError = 1011\n        */\n        switch (statusCode) {\n            case 400:\n            case 1002:\n            case 1003:\n            case 1005:\n            case 1007:\n            case 1008:\n            case 1009: return \"BadRequest\";\n            case 401: return \"Unauthorized\";\n            case 403: return \"Forbidden\";\n            case 503:\n            case 1001: return \"ServerUnavailable\";\n            case 500:\n            case 1011: return \"ServerError\";\n            case 408:\n            case 504: return \"Timeout\";\n            default: return \"statuscode:\" + statusCode.toString();\n        }\n    }\n}\nexports.ServiceTelemetryListener = ServiceTelemetryListener;\n\n//# sourceMappingURL=ServiceTelemetryListener.Internal.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestSession = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst RecognitionEvents_js_1 = require(\"./RecognitionEvents.js\");\nconst ServiceTelemetryListener_Internal_js_1 = require(\"./ServiceTelemetryListener.Internal.js\");\nclass RequestSession {\n    constructor(audioSourceId) {\n        this.privIsDisposed = false;\n        this.privDetachables = new Array();\n        this.privIsAudioNodeDetached = false;\n        this.privIsRecognizing = false;\n        this.privIsSpeechEnded = false;\n        this.privTurnStartAudioOffset = 0;\n        this.privLastRecoOffset = 0;\n        this.privHypothesisReceived = false;\n        this.privBytesSent = 0;\n        this.privRecognitionBytesSent = 0;\n        this.privRecogNumber = 0;\n        this.privInTurn = false;\n        this.privConnectionAttempts = 0;\n        this.privAudioSourceId = audioSourceId;\n        this.privRequestId = (0, Exports_js_1.createNoDashGuid)();\n        this.privAudioNodeId = (0, Exports_js_1.createNoDashGuid)();\n        this.privTurnDeferral = new Exports_js_1.Deferred();\n        // We're not in a turn, so resolve.\n        this.privTurnDeferral.resolve();\n    }\n    get sessionId() {\n        return this.privSessionId;\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n    get turnCompletionPromise() {\n        return this.privTurnDeferral.promise;\n    }\n    get isSpeechEnded() {\n        return this.privIsSpeechEnded;\n    }\n    get isRecognizing() {\n        return this.privIsRecognizing;\n    }\n    get currentTurnAudioOffset() {\n        return this.privTurnStartAudioOffset;\n    }\n    get recogNumber() {\n        return this.privRecogNumber;\n    }\n    get numConnectionAttempts() {\n        return this.privConnectionAttempts;\n    }\n    // The number of bytes sent for the current connection.\n    // Counter is reset to 0 each time a connection is established.\n    get bytesSent() {\n        return this.privBytesSent;\n    }\n    // The number of bytes sent for the current recognition.\n    // Counter is reset to 0 each time recognition is started.\n    get recognitionBytesSent() {\n        return this.privRecognitionBytesSent;\n    }\n    listenForServiceTelemetry(eventSource) {\n        if (!!this.privServiceTelemetryListener) {\n            this.privDetachables.push(eventSource.attachListener(this.privServiceTelemetryListener));\n        }\n    }\n    startNewRecognition() {\n        this.privRecognitionBytesSent = 0;\n        this.privIsSpeechEnded = false;\n        this.privIsRecognizing = true;\n        this.privTurnStartAudioOffset = 0;\n        this.privLastRecoOffset = 0;\n        this.privRecogNumber++;\n        this.privServiceTelemetryListener = new ServiceTelemetryListener_Internal_js_1.ServiceTelemetryListener(this.privRequestId, this.privAudioSourceId, this.privAudioNodeId);\n        this.onEvent(new RecognitionEvents_js_1.RecognitionTriggeredEvent(this.requestId, this.privSessionId, this.privAudioSourceId, this.privAudioNodeId));\n    }\n    async onAudioSourceAttachCompleted(audioNode, isError) {\n        this.privAudioNode = audioNode;\n        this.privIsAudioNodeDetached = false;\n        if (isError) {\n            await this.onComplete();\n        }\n        else {\n            this.onEvent(new RecognitionEvents_js_1.ListeningStartedEvent(this.privRequestId, this.privSessionId, this.privAudioSourceId, this.privAudioNodeId));\n        }\n    }\n    onPreConnectionStart(authFetchEventId, connectionId) {\n        this.privAuthFetchEventId = authFetchEventId;\n        this.privSessionId = connectionId;\n        this.onEvent(new RecognitionEvents_js_1.ConnectingToServiceEvent(this.privRequestId, this.privAuthFetchEventId, this.privSessionId));\n    }\n    async onAuthCompleted(isError) {\n        if (isError) {\n            await this.onComplete();\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async onConnectionEstablishCompleted(statusCode, reason) {\n        if (statusCode === 200) {\n            this.onEvent(new RecognitionEvents_js_1.RecognitionStartedEvent(this.requestId, this.privAudioSourceId, this.privAudioNodeId, this.privAuthFetchEventId, this.privSessionId));\n            if (!!this.privAudioNode) {\n                this.privAudioNode.replay();\n            }\n            this.privTurnStartAudioOffset = this.privLastRecoOffset;\n            this.privBytesSent = 0;\n            return;\n        }\n        else if (statusCode === 403) {\n            await this.onComplete();\n        }\n    }\n    async onServiceTurnEndResponse(continuousRecognition) {\n        this.privTurnDeferral.resolve();\n        if (!continuousRecognition || this.isSpeechEnded) {\n            await this.onComplete();\n            this.privInTurn = false;\n        }\n        else {\n            // Start a new request set.\n            this.privTurnStartAudioOffset = this.privLastRecoOffset;\n            this.privAudioNode.replay();\n        }\n    }\n    onSpeechContext() {\n        this.privRequestId = (0, Exports_js_1.createNoDashGuid)();\n    }\n    onServiceTurnStartResponse() {\n        if (!!this.privTurnDeferral && !!this.privInTurn) {\n            // What? How are we starting a turn with another not done?\n            this.privTurnDeferral.reject(\"Another turn started before current completed.\");\n            // Avoid UnhandledPromiseRejection if privTurnDeferral is not being awaited\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            this.privTurnDeferral.promise.then().catch(() => { });\n        }\n        this.privInTurn = true;\n        this.privTurnDeferral = new Exports_js_1.Deferred();\n    }\n    onHypothesis(offset) {\n        if (!this.privHypothesisReceived) {\n            this.privHypothesisReceived = true;\n            this.privServiceTelemetryListener.hypothesisReceived(this.privAudioNode.findTimeAtOffset(offset));\n        }\n    }\n    onPhraseRecognized(offset) {\n        this.privServiceTelemetryListener.phraseReceived(this.privAudioNode.findTimeAtOffset(offset));\n        this.onServiceRecognized(offset);\n    }\n    onServiceRecognized(offset) {\n        this.privLastRecoOffset = offset;\n        this.privHypothesisReceived = false;\n        this.privAudioNode.shrinkBuffers(offset);\n        this.privConnectionAttempts = 0;\n    }\n    onAudioSent(bytesSent) {\n        this.privBytesSent += bytesSent;\n        this.privRecognitionBytesSent += bytesSent;\n    }\n    onRetryConnection() {\n        this.privConnectionAttempts++;\n    }\n    async dispose() {\n        if (!this.privIsDisposed) {\n            // we should have completed by now. If we did not its an unknown error.\n            this.privIsDisposed = true;\n            for (const detachable of this.privDetachables) {\n                await detachable.detach();\n            }\n            if (!!this.privServiceTelemetryListener) {\n                this.privServiceTelemetryListener.dispose();\n            }\n            this.privIsRecognizing = false;\n        }\n    }\n    getTelemetry() {\n        if (this.privServiceTelemetryListener.hasTelemetry) {\n            return this.privServiceTelemetryListener.getTelemetry();\n        }\n        else {\n            return null;\n        }\n    }\n    async onStopRecognizing() {\n        await this.onComplete();\n    }\n    // Should be called with the audioNode for this session has indicated that it is out of speech.\n    onSpeechEnded() {\n        this.privIsSpeechEnded = true;\n    }\n    onEvent(event) {\n        if (!!this.privServiceTelemetryListener) {\n            this.privServiceTelemetryListener.onEvent(event);\n        }\n        Exports_js_1.Events.instance.onEvent(event);\n    }\n    async onComplete() {\n        if (!!this.privIsRecognizing) {\n            this.privIsRecognizing = false;\n            await this.detachAudioNode();\n        }\n    }\n    async detachAudioNode() {\n        if (!this.privIsAudioNodeDetached) {\n            this.privIsAudioNodeDetached = true;\n            if (this.privAudioNode) {\n                await this.privAudioNode.detach();\n            }\n        }\n    }\n}\nexports.RequestSession = RequestSession;\n\n//# sourceMappingURL=RequestSession.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TentativePhraseResultsOption = exports.OutputFormat = exports.PhraseExtension = exports.PhraseOption = void 0;\n/**\n * The detailed output options.\n */\nvar PhraseOption;\n(function (PhraseOption) {\n    PhraseOption[\"WordTimings\"] = \"WordTimings\";\n    PhraseOption[\"SNR\"] = \"SNR\";\n    PhraseOption[\"Pronunciation\"] = \"Pronunciation\";\n    PhraseOption[\"WordPronunciation\"] = \"WordPronunciation\";\n    PhraseOption[\"WordConfidence\"] = \"WordConfidence\";\n    PhraseOption[\"Words\"] = \"Words\";\n    PhraseOption[\"Sentiment\"] = \"Sentiment\";\n    PhraseOption[\"PronunciationAssessment\"] = \"PronunciationAssessment\";\n    PhraseOption[\"ContentAssessment\"] = \"ContentAssessment\";\n    PhraseOption[\"PhraseAMScore\"] = \"PhraseAMScore\";\n    PhraseOption[\"PhraseLMScore\"] = \"PhraseLMScore\";\n    PhraseOption[\"WordAMScore\"] = \"WordAMScore\";\n    PhraseOption[\"WordLMScore\"] = \"WordLMScore\";\n    PhraseOption[\"RuleTree\"] = \"RuleTree\";\n    PhraseOption[\"NBestTimings\"] = \"NBestTimings\";\n    PhraseOption[\"DecoderDiagnostics\"] = \"DecoderDiagnostics\";\n    PhraseOption[\"DisplayWordTimings\"] = \"DisplayWordTimings\";\n    PhraseOption[\"DisplayWords\"] = \"DisplayWords\";\n})(PhraseOption = exports.PhraseOption || (exports.PhraseOption = {}));\n/**\n * The detailed output extensions.\n */\nvar PhraseExtension;\n(function (PhraseExtension) {\n    PhraseExtension[\"Graph\"] = \"Graph\";\n    PhraseExtension[\"Corrections\"] = \"Corrections\";\n    PhraseExtension[\"Sentiment\"] = \"Sentiment\";\n})(PhraseExtension = exports.PhraseExtension || (exports.PhraseExtension = {}));\n/**\n * The Recognition modes\n */\nvar OutputFormat;\n(function (OutputFormat) {\n    OutputFormat[\"Simple\"] = \"Simple\";\n    OutputFormat[\"Detailed\"] = \"Detailed\";\n})(OutputFormat = exports.OutputFormat || (exports.OutputFormat = {}));\n/**\n * The Tentative Phrase Results option\n */\nvar TentativePhraseResultsOption;\n(function (TentativePhraseResultsOption) {\n    TentativePhraseResultsOption[\"None\"] = \"None\";\n    TentativePhraseResultsOption[\"Always\"] = \"Always\";\n})(TentativePhraseResultsOption = exports.TentativePhraseResultsOption || (exports.TentativePhraseResultsOption = {}));\n\n//# sourceMappingURL=PhraseOutput.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechContext = void 0;\nconst PhraseDetectionContext_js_1 = require(\"./ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\nconst PhraseOutput_js_1 = require(\"./ServiceMessages/PhraseOutput/PhraseOutput.js\");\n/**\n * Represents the JSON used in the speech.context message sent to the speech service.\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\n */\nclass SpeechContext {\n    constructor(dynamicGrammar) {\n        this.privContext = {};\n        this.privDynamicGrammar = dynamicGrammar;\n    }\n    getContext() {\n        return this.privContext;\n    }\n    /**\n     * @Internal\n     * This is only used by pronunciation assessment config.\n     * Do not use externally, object returned will change without warning or notice.\n     */\n    setPronunciationAssessmentParams(params, contentAssessmentTopic, isSpeakerDiarizationEnabled = false) {\n        if (this.privContext.phraseDetection === undefined) {\n            this.privContext.phraseDetection = {\n                enrichment: {\n                    pronunciationAssessment: {}\n                }\n            };\n        }\n        if (this.privContext.phraseDetection.enrichment === undefined) {\n            this.privContext.phraseDetection.enrichment = {\n                pronunciationAssessment: {}\n            };\n        }\n        this.privContext.phraseDetection.enrichment.pronunciationAssessment = JSON.parse(params) || {};\n        if (isSpeakerDiarizationEnabled) {\n            this.privContext.phraseDetection.mode = PhraseDetectionContext_js_1.RecognitionMode.Conversation;\n        }\n        this.setWordLevelTimings();\n        this.privContext.phraseOutput.detailed.options.push(PhraseOutput_js_1.PhraseOption.PronunciationAssessment);\n        if (this.privContext.phraseOutput.detailed.options.indexOf(PhraseOutput_js_1.PhraseOption.SNR) === -1) {\n            this.privContext.phraseOutput.detailed.options.push(PhraseOutput_js_1.PhraseOption.SNR);\n        }\n        if (!!contentAssessmentTopic) {\n            this.privContext.phraseDetection.enrichment.contentAssessment = {\n                topic: contentAssessmentTopic\n            };\n            this.privContext.phraseOutput.detailed.options.push(PhraseOutput_js_1.PhraseOption.ContentAssessment);\n        }\n    }\n    setDetailedOutputFormat() {\n        if (this.privContext.phraseOutput === undefined) {\n            this.privContext.phraseOutput = {\n                detailed: {\n                    options: []\n                }\n            };\n        }\n        if (this.privContext.phraseOutput.detailed === undefined) {\n            this.privContext.phraseOutput.detailed = {\n                options: []\n            };\n        }\n        this.privContext.phraseOutput.format = PhraseOutput_js_1.OutputFormat.Detailed;\n    }\n    setWordLevelTimings() {\n        if (this.privContext.phraseOutput === undefined) {\n            this.privContext.phraseOutput = {\n                detailed: {\n                    options: []\n                }\n            };\n        }\n        if (this.privContext.phraseOutput.detailed === undefined) {\n            this.privContext.phraseOutput.detailed = {\n                options: []\n            };\n        }\n        this.privContext.phraseOutput.format = PhraseOutput_js_1.OutputFormat.Detailed;\n        if (this.privContext.phraseOutput.detailed.options.indexOf(PhraseOutput_js_1.PhraseOption.WordTimings) === -1) {\n            this.privContext.phraseOutput.detailed.options.push(PhraseOutput_js_1.PhraseOption.WordTimings);\n        }\n    }\n    setSpeakerDiarizationAudioOffsetMs(audioOffsetMs) {\n        this.privContext.phraseDetection.speakerDiarization.audioOffsetMs = audioOffsetMs;\n    }\n    toJSON() {\n        const dgi = this.privDynamicGrammar.generateGrammarObject();\n        this.privContext.dgi = dgi;\n        const ret = JSON.stringify(this.privContext);\n        return ret;\n    }\n}\nexports.SpeechContext = SpeechContext;\n\n//# sourceMappingURL=SpeechContext.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SubstringMatchType = exports.GroupType = void 0;\n/**\n * Represents the type of the Intent.\n */\nvar GroupType;\n(function (GroupType) {\n    GroupType[\"IntentText\"] = \"IntentText\";\n    GroupType[\"IntentEntity\"] = \"IntentEntity\";\n    GroupType[\"Generic\"] = \"Generic\";\n    GroupType[\"People\"] = \"People\";\n    GroupType[\"Place\"] = \"Place\";\n    GroupType[\"DynamicEntity\"] = \"DynamicEntity\";\n})(GroupType = exports.GroupType || (exports.GroupType = {}));\n/**\n * Represents the type of the substring match.\n */\nvar SubstringMatchType;\n(function (SubstringMatchType) {\n    SubstringMatchType[\"None\"] = \"None\";\n    SubstringMatchType[\"LeftRooted\"] = \"LeftRooted\";\n    SubstringMatchType[\"PartialName\"] = \"PartialName\";\n    SubstringMatchType[\"MiddleOfSentence\"] = \"MiddleOfSentence\";\n})(SubstringMatchType = exports.SubstringMatchType || (exports.SubstringMatchType = {}));\n\n//# sourceMappingURL=Group.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DynamicGrammarBuilder = void 0;\nconst Group_js_1 = require(\"./ServiceMessages/Dgi/Group.js\");\n/**\n * Responsible for building the object to be sent to the speech service to support dynamic grammars.\n * @class DynamicGrammarBuilder\n */\nclass DynamicGrammarBuilder {\n    // Adds one more reference phrases to the dynamic grammar to send.\n    // All added phrases are generic phrases.\n    addPhrase(phrase) {\n        if (!this.privPhrases) {\n            this.privPhrases = [];\n        }\n        if (phrase instanceof Array) {\n            this.privPhrases = this.privPhrases.concat(phrase);\n        }\n        else {\n            this.privPhrases.push(phrase);\n        }\n    }\n    // Clears all phrases stored in the current object.\n    clearPhrases() {\n        this.privPhrases = undefined;\n    }\n    // Adds one or more reference grammars to the current grammar.\n    addReferenceGrammar(grammar) {\n        if (!this.privGrammars) {\n            this.privGrammars = [];\n        }\n        if (grammar instanceof Array) {\n            this.privGrammars = this.privGrammars.concat(grammar);\n        }\n        else {\n            this.privGrammars.push(grammar);\n        }\n    }\n    // clears all grammars stored on the recognizer.\n    clearGrammars() {\n        this.privGrammars = undefined;\n    }\n    // Generates an object that represents the dynamic grammar used by the Speech Service.\n    // This is done by building an object with the correct layout based on the phrases and reference grammars added to this instance\n    // of a DynamicGrammarBuilder\n    generateGrammarObject() {\n        if (this.privGrammars === undefined && this.privPhrases === undefined) {\n            return undefined;\n        }\n        const retObj = {};\n        retObj.referenceGrammars = this.privGrammars;\n        if (undefined !== this.privPhrases && 0 !== this.privPhrases.length) {\n            const retPhrases = [];\n            this.privPhrases.forEach((value) => {\n                retPhrases.push({\n                    text: value,\n                });\n            });\n            retObj.groups = [{ type: Group_js_1.GroupType.Generic, items: retPhrases }];\n        }\n        return retObj;\n    }\n}\nexports.DynamicGrammarBuilder = DynamicGrammarBuilder;\n\n//# sourceMappingURL=DynamicGrammarBuilder.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// response\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageDataStreamType = exports.ActivityPayloadResponse = void 0;\nclass ActivityPayloadResponse {\n    constructor(json) {\n        this.privActivityResponse = JSON.parse(json);\n    }\n    static fromJSON(json) {\n        return new ActivityPayloadResponse(json);\n    }\n    get conversationId() {\n        return this.privActivityResponse.conversationId;\n    }\n    get messageDataStreamType() {\n        return this.privActivityResponse.messageDataStreamType;\n    }\n    get messagePayload() {\n        return this.privActivityResponse.messagePayload;\n    }\n    get version() {\n        return this.privActivityResponse.version;\n    }\n}\nexports.ActivityPayloadResponse = ActivityPayloadResponse;\nvar MessageDataStreamType;\n(function (MessageDataStreamType) {\n    MessageDataStreamType[MessageDataStreamType[\"None\"] = 0] = \"None\";\n    MessageDataStreamType[MessageDataStreamType[\"TextToSpeechAudio\"] = 1] = \"TextToSpeechAudio\";\n})(MessageDataStreamType = exports.MessageDataStreamType || (exports.MessageDataStreamType = {}));\n\n//# sourceMappingURL=ActivityResponsePayload.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DialogServiceTurnState = void 0;\nconst AudioOutputFormat_js_1 = require(\"../sdk/Audio/AudioOutputFormat.js\");\nconst AudioOutputStream_js_1 = require(\"../sdk/Audio/AudioOutputStream.js\");\nconst ActivityResponsePayload_js_1 = require(\"./ServiceMessages/ActivityResponsePayload.js\");\nclass DialogServiceTurnState {\n    constructor(manager, requestId) {\n        this.privRequestId = requestId;\n        this.privIsCompleted = false;\n        this.privAudioStream = null;\n        this.privTurnManager = manager;\n        this.resetTurnEndTimeout();\n    }\n    get audioStream() {\n        // Called when is needed to stream.\n        this.resetTurnEndTimeout();\n        return this.privAudioStream;\n    }\n    processActivityPayload(payload, audioFormat) {\n        if (payload.messageDataStreamType === ActivityResponsePayload_js_1.MessageDataStreamType.TextToSpeechAudio) {\n            this.privAudioStream = AudioOutputStream_js_1.AudioOutputStream.createPullStream();\n            this.privAudioStream.format = (audioFormat !== undefined) ? audioFormat : AudioOutputFormat_js_1.AudioOutputFormatImpl.getDefaultOutputFormat();\n        }\n        return this.privAudioStream;\n    }\n    endAudioStream() {\n        if (this.privAudioStream !== null && !this.privAudioStream.isClosed) {\n            this.privAudioStream.close();\n        }\n    }\n    complete() {\n        if (this.privTimeoutToken !== undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            clearTimeout(this.privTimeoutToken);\n        }\n        this.endAudioStream();\n    }\n    resetTurnEndTimeout() {\n        if (this.privTimeoutToken !== undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            clearTimeout(this.privTimeoutToken);\n        }\n        this.privTimeoutToken = setTimeout(() => {\n            this.privTurnManager.CompleteTurn(this.privRequestId);\n            return;\n        }, 2000);\n    }\n}\nexports.DialogServiceTurnState = DialogServiceTurnState;\n\n//# sourceMappingURL=DialogServiceTurnState.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DialogServiceTurnStateManager = void 0;\nconst Error_js_1 = require(\"../common/Error.js\");\nconst DialogServiceTurnState_js_1 = require(\"./DialogServiceTurnState.js\");\nclass DialogServiceTurnStateManager {\n    constructor() {\n        this.privTurnMap = new Map();\n        return;\n    }\n    StartTurn(id) {\n        if (this.privTurnMap.has(id)) {\n            throw new Error_js_1.InvalidOperationError(\"Service error: There is already a turn with id:\" + id);\n        }\n        const turnState = new DialogServiceTurnState_js_1.DialogServiceTurnState(this, id);\n        this.privTurnMap.set(id, turnState);\n        return this.privTurnMap.get(id);\n    }\n    GetTurn(id) {\n        return this.privTurnMap.get(id);\n    }\n    CompleteTurn(id) {\n        if (!this.privTurnMap.has(id)) {\n            throw new Error_js_1.InvalidOperationError(\"Service error: Received turn end for an unknown turn id:\" + id);\n        }\n        const turnState = this.privTurnMap.get(id);\n        turnState.complete();\n        this.privTurnMap.delete(id);\n        return turnState;\n    }\n}\nexports.DialogServiceTurnStateManager = DialogServiceTurnStateManager;\n\n//# sourceMappingURL=DialogServiceTurnStateManager.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvocationSource = void 0;\n/**\n * Represents the source of speech recognition invocation.\n */\nvar InvocationSource;\n(function (InvocationSource) {\n    /**\n     * No invocation source specified.\n     */\n    InvocationSource[\"None\"] = \"None\";\n    /**\n     * Voice activation with a keyword.\n     */\n    InvocationSource[\"VoiceActivationWithKeyword\"] = \"VoiceActivationWithKeyword\";\n})(InvocationSource = exports.InvocationSource || (exports.InvocationSource = {}));\n\n//# sourceMappingURL=InvocationSource.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OnRejectAction = exports.KeywordDetectionType = void 0;\n/**\n * Represents the type of keyword detection.\n */\nvar KeywordDetectionType;\n(function (KeywordDetectionType) {\n    /**\n     * Triggered at the start of input.\n     */\n    KeywordDetectionType[\"StartTrigger\"] = \"StartTrigger\";\n})(KeywordDetectionType = exports.KeywordDetectionType || (exports.KeywordDetectionType = {}));\n/**\n * The action to take when a keyword is rejected.\n */\nvar OnRejectAction;\n(function (OnRejectAction) {\n    /**\n     * End the current turn.\n     */\n    OnRejectAction[\"EndOfTurn\"] = \"EndOfTurn\";\n    /**\n     * Continue processing.\n     */\n    OnRejectAction[\"Continue\"] = \"Continue\";\n})(OnRejectAction = exports.OnRejectAction || (exports.OnRejectAction = {}));\n\n//# sourceMappingURL=KeywordDetection.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DialogServiceAdapter = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst DialogEvents_js_1 = require(\"../common/DialogEvents.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst AudioOutputFormat_js_1 = require(\"../sdk/Audio/AudioOutputFormat.js\");\nconst Exports_js_3 = require(\"../sdk/Exports.js\");\nconst DialogServiceTurnStateManager_js_1 = require(\"./DialogServiceTurnStateManager.js\");\nconst Exports_js_4 = require(\"./Exports.js\");\nconst ActivityResponsePayload_js_1 = require(\"./ServiceMessages/ActivityResponsePayload.js\");\nconst InvocationSource_js_1 = require(\"./ServiceMessages/InvocationSource.js\");\nconst KeywordDetection_js_1 = require(\"./ServiceMessages/KeywordDetection/KeywordDetection.js\");\nconst SpeechConnectionMessage_Internal_js_1 = require(\"./SpeechConnectionMessage.Internal.js\");\nclass DialogServiceAdapter extends Exports_js_4.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, dialogServiceConnector) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, dialogServiceConnector);\n        this.privEvents = new Exports_js_2.EventSource();\n        this.privDialogServiceConnector = dialogServiceConnector;\n        this.receiveMessageOverride = () => this.receiveDialogMessageOverride();\n        this.privTurnStateManager = new DialogServiceTurnStateManager_js_1.DialogServiceTurnStateManager();\n        this.recognizeOverride =\n            (recoMode, successCallback, errorCallback) => this.listenOnce(recoMode, successCallback, errorCallback);\n        this.postConnectImplOverride = (connection) => this.dialogConnectImpl(connection);\n        this.configConnectionOverride = (connection) => this.configConnection(connection);\n        this.disconnectOverride = () => this.privDisconnect();\n        this.privDialogAudioSource = audioSource;\n        this.agentConfigSent = false;\n        this.privLastResult = null;\n        this.connectionEvents.attach((connectionEvent) => {\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\n                this.terminateMessageLoop = true;\n            }\n        });\n    }\n    async sendMessage(message) {\n        const interactionGuid = (0, Exports_js_2.createGuid)();\n        const requestId = (0, Exports_js_2.createNoDashGuid)();\n        const agentMessage = {\n            context: {\n                interactionId: interactionGuid\n            },\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            messagePayload: JSON.parse(message),\n            version: 0.5\n        };\n        const agentMessageJson = JSON.stringify(agentMessage);\n        const connection = await this.fetchConnection();\n        await connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"agent\", requestId, \"application/json\", agentMessageJson));\n    }\n    async privDisconnect() {\n        await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.NoError, \"Disconnecting\");\n        this.terminateMessageLoop = true;\n        this.agentConfigSent = false;\n        return;\n    }\n    processTypeSpecificMessages(connectionMessage) {\n        const resultProps = new Exports_js_3.PropertyCollection();\n        if (connectionMessage.messageType === Exports_js_2.MessageType.Text) {\n            resultProps.setProperty(Exports_js_3.PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n        }\n        let result;\n        let processed;\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"speech.phrase\":\n                const speechPhrase = Exports_js_4.SimpleSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                this.privRequestSession.onPhraseRecognized(speechPhrase.Offset + speechPhrase.Duration);\n                if (speechPhrase.RecognitionStatus !== Exports_js_4.RecognitionStatus.TooManyRequests && speechPhrase.RecognitionStatus !== Exports_js_4.RecognitionStatus.Error) {\n                    const args = this.fireEventForResult(speechPhrase, resultProps);\n                    this.privLastResult = args.result;\n                    if (!!this.privDialogServiceConnector.recognized) {\n                        try {\n                            this.privDialogServiceConnector.recognized(this.privDialogServiceConnector, args);\n                            /* eslint-disable no-empty */\n                        }\n                        catch (error) {\n                            // Not going to let errors in the event handler\n                            // trip things up.\n                        }\n                    }\n                }\n                processed = true;\n                break;\n            case \"speech.hypothesis\":\n                const hypothesis = Exports_js_4.SpeechHypothesis.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                result = new Exports_js_3.SpeechRecognitionResult(this.privRequestSession.requestId, Exports_js_3.ResultReason.RecognizingSpeech, hypothesis.Text, hypothesis.Duration, hypothesis.Offset, hypothesis.Language, hypothesis.LanguageDetectionConfidence, undefined, undefined, hypothesis.asJson(), resultProps);\n                this.privRequestSession.onHypothesis(hypothesis.Offset);\n                const ev = new Exports_js_3.SpeechRecognitionEventArgs(result, hypothesis.Offset, this.privRequestSession.sessionId);\n                if (!!this.privDialogServiceConnector.recognizing) {\n                    try {\n                        this.privDialogServiceConnector.recognizing(this.privDialogServiceConnector, ev);\n                        /* eslint-disable no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                processed = true;\n                break;\n            case \"speech.keyword\":\n                const keyword = Exports_js_4.SpeechKeyword.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                result = new Exports_js_3.SpeechRecognitionResult(this.privRequestSession.requestId, keyword.Status === \"Accepted\" ? Exports_js_3.ResultReason.RecognizedKeyword : Exports_js_3.ResultReason.NoMatch, keyword.Text, keyword.Duration, keyword.Offset, undefined, undefined, undefined, undefined, keyword.asJson(), resultProps);\n                if (keyword.Status !== \"Accepted\") {\n                    this.privLastResult = result;\n                }\n                const event = new Exports_js_3.SpeechRecognitionEventArgs(result, result.duration, result.resultId);\n                if (!!this.privDialogServiceConnector.recognized) {\n                    try {\n                        this.privDialogServiceConnector.recognized(this.privDialogServiceConnector, event);\n                        /* eslint-disable no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                processed = true;\n                break;\n            case \"audio\":\n                {\n                    const audioRequestId = connectionMessage.requestId.toUpperCase();\n                    const turn = this.privTurnStateManager.GetTurn(audioRequestId);\n                    try {\n                        // Empty binary message signals end of stream.\n                        if (!connectionMessage.binaryBody) {\n                            turn.endAudioStream();\n                        }\n                        else {\n                            turn.audioStream.write(connectionMessage.binaryBody);\n                        }\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                processed = true;\n                break;\n            case \"response\":\n                {\n                    this.handleResponseMessage(connectionMessage);\n                }\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        const defferal = new Exports_js_2.Deferred();\n        defferal.resolve(processed);\n        return defferal.promise;\n    }\n    // Cancels recognition.\n    async cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        this.terminateMessageLoop = true;\n        if (!!this.privRequestSession.isRecognizing) {\n            await this.privRequestSession.onStopRecognizing();\n        }\n        if (!!this.privDialogServiceConnector.canceled) {\n            const properties = new Exports_js_3.PropertyCollection();\n            properties.setProperty(Exports_js_4.CancellationErrorCodePropertyName, Exports_js_3.CancellationErrorCode[errorCode]);\n            const cancelEvent = new Exports_js_3.SpeechRecognitionCanceledEventArgs(cancellationReason, error, errorCode, undefined, sessionId);\n            try {\n                this.privDialogServiceConnector.canceled(this.privDialogServiceConnector, cancelEvent);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n            if (!!this.privSuccessCallback) {\n                const result = new Exports_js_3.SpeechRecognitionResult(undefined, // ResultId\n                Exports_js_3.ResultReason.Canceled, undefined, // Text\n                undefined, // Duration\n                undefined, // Offset\n                undefined, // Language\n                undefined, // Language Detection Confidence\n                undefined, // Speaker Id\n                error, undefined, // Json\n                properties);\n                try {\n                    this.privSuccessCallback(result);\n                    this.privSuccessCallback = undefined;\n                    /* eslint-disable no-empty */\n                }\n                catch { }\n            }\n        }\n    }\n    async listenOnce(recoMode, successCallback, errorCallback) {\n        this.privRecognizerConfig.recognitionMode = recoMode;\n        this.privSuccessCallback = successCallback;\n        this.privErrorCallback = errorCallback;\n        this.privRequestSession.startNewRecognition();\n        this.privRequestSession.listenForServiceTelemetry(this.privDialogAudioSource.events);\n        this.privRecognizerConfig.parameters.setProperty(Exports_js_3.PropertyId.Speech_SessionId, this.privRequestSession.sessionId);\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\n        const conPromise = this.connectImpl();\n        const preAudioPromise = this.sendPreAudioMessages();\n        const node = await this.privDialogAudioSource.attach(this.privRequestSession.audioNodeId);\n        const format = await this.privDialogAudioSource.format;\n        const deviceInfo = await this.privDialogAudioSource.deviceInfo;\n        const audioNode = new Exports_js_1.ReplayableAudioNode(node, format.avgBytesPerSec);\n        await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\n        this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\n        try {\n            await conPromise;\n            await preAudioPromise;\n        }\n        catch (error) {\n            await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.ConnectionFailure, error);\n            return Promise.resolve();\n        }\n        const sessionStartEventArgs = new Exports_js_3.SessionEventArgs(this.privRequestSession.sessionId);\n        if (!!this.privRecognizer.sessionStarted) {\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\n        }\n        const audioSendPromise = this.sendAudio(audioNode);\n        // /* eslint-disable no-empty */\n        audioSendPromise.then(() => { }, async (error) => {\n            await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.RuntimeError, error);\n        });\n    }\n    // Establishes a websocket connection to the end point.\n    dialogConnectImpl(connection) {\n        this.privConnectionLoop = this.startMessageLoop();\n        return connection;\n    }\n    receiveDialogMessageOverride() {\n        // we won't rely on the cascading promises of the connection since we want to continually be available to receive messages\n        const communicationCustodian = new Exports_js_2.Deferred();\n        const loop = async () => {\n            try {\n                const isDisposed = this.isDisposed();\n                const terminateMessageLoop = (!this.isDisposed() && this.terminateMessageLoop);\n                if (isDisposed || terminateMessageLoop) {\n                    // We're done.\n                    communicationCustodian.resolve(undefined);\n                    return;\n                }\n                const connection = await this.fetchConnection();\n                const message = await connection.read();\n                if (!message) {\n                    return loop();\n                }\n                const connectionMessage = SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage.fromConnectionMessage(message);\n                switch (connectionMessage.path.toLowerCase()) {\n                    case \"turn.start\":\n                        {\n                            const turnRequestId = connectionMessage.requestId.toUpperCase();\n                            const audioSessionReqId = this.privRequestSession.requestId.toUpperCase();\n                            // turn started by the service\n                            if (turnRequestId !== audioSessionReqId) {\n                                this.privTurnStateManager.StartTurn(turnRequestId);\n                            }\n                            else {\n                                this.privRequestSession.onServiceTurnStartResponse();\n                            }\n                        }\n                        break;\n                    case \"speech.startdetected\":\n                        const speechStartDetected = Exports_js_4.SpeechDetected.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                        const speechStartEventArgs = new Exports_js_3.RecognitionEventArgs(speechStartDetected.Offset, this.privRequestSession.sessionId);\n                        if (!!this.privRecognizer.speechStartDetected) {\n                            this.privRecognizer.speechStartDetected(this.privRecognizer, speechStartEventArgs);\n                        }\n                        break;\n                    case \"speech.enddetected\":\n                        let json;\n                        if (connectionMessage.textBody.length > 0) {\n                            json = connectionMessage.textBody;\n                        }\n                        else {\n                            // If the request was empty, the JSON returned is empty.\n                            json = \"{ Offset: 0 }\";\n                        }\n                        const speechStopDetected = Exports_js_4.SpeechDetected.fromJSON(json, this.privRequestSession.currentTurnAudioOffset);\n                        this.privRequestSession.onServiceRecognized(speechStopDetected.Offset);\n                        const speechStopEventArgs = new Exports_js_3.RecognitionEventArgs(speechStopDetected.Offset, this.privRequestSession.sessionId);\n                        if (!!this.privRecognizer.speechEndDetected) {\n                            this.privRecognizer.speechEndDetected(this.privRecognizer, speechStopEventArgs);\n                        }\n                        break;\n                    case \"turn.end\":\n                        {\n                            const turnEndRequestId = connectionMessage.requestId.toUpperCase();\n                            const audioSessionReqId = this.privRequestSession.requestId.toUpperCase();\n                            // turn started by the service\n                            if (turnEndRequestId !== audioSessionReqId) {\n                                this.privTurnStateManager.CompleteTurn(turnEndRequestId);\n                            }\n                            else {\n                                // Audio session turn\n                                const sessionStopEventArgs = new Exports_js_3.SessionEventArgs(this.privRequestSession.sessionId);\n                                await this.privRequestSession.onServiceTurnEndResponse(false);\n                                if (!this.privRecognizerConfig.isContinuousRecognition || this.privRequestSession.isSpeechEnded || !this.privRequestSession.isRecognizing) {\n                                    if (!!this.privRecognizer.sessionStopped) {\n                                        this.privRecognizer.sessionStopped(this.privRecognizer, sessionStopEventArgs);\n                                    }\n                                }\n                                // report result to promise.\n                                if (!!this.privSuccessCallback && this.privLastResult) {\n                                    try {\n                                        this.privSuccessCallback(this.privLastResult);\n                                        this.privLastResult = null;\n                                    }\n                                    catch (e) {\n                                        if (!!this.privErrorCallback) {\n                                            this.privErrorCallback(e);\n                                        }\n                                    }\n                                    // Only invoke the call back once.\n                                    // and if it's successful don't invoke the\n                                    // error after that.\n                                    this.privSuccessCallback = undefined;\n                                    this.privErrorCallback = undefined;\n                                }\n                            }\n                        }\n                        break;\n                    default:\n                        try {\n                            const processed = await this.processTypeSpecificMessages(connectionMessage);\n                            if (!processed) {\n                                if (!!this.serviceEvents) {\n                                    this.serviceEvents.onEvent(new Exports_js_2.ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\n                                }\n                            }\n                        }\n                        catch (e) {\n                            //\n                        }\n                }\n                const ret = loop();\n                return ret;\n            }\n            catch (error) {\n                this.terminateMessageLoop = true;\n                communicationCustodian.resolve();\n            }\n        };\n        loop().catch((reason) => {\n            Exports_js_2.Events.instance.onEvent(new Exports_js_2.BackgroundEvent(reason));\n        });\n        return communicationCustodian.promise;\n    }\n    async startMessageLoop() {\n        this.terminateMessageLoop = false;\n        try {\n            await this.receiveDialogMessageOverride();\n        }\n        catch (error) {\n            await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.RuntimeError, error);\n        }\n        return Promise.resolve();\n    }\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\n    async configConnection(connection) {\n        if (this.terminateMessageLoop) {\n            this.terminateMessageLoop = false;\n            return Promise.reject(\"Connection to service terminated.\");\n        }\n        await this.sendSpeechServiceConfig(connection, this.privRequestSession, this.privRecognizerConfig.SpeechServiceConfig.serialize());\n        await this.sendAgentConfig(connection);\n        return connection;\n    }\n    async sendPreAudioMessages() {\n        const connection = await this.fetchConnection();\n        this.addKeywordContextData();\n        await this.sendSpeechContext(connection, true);\n        await this.sendAgentContext(connection);\n        await this.sendWaveHeader(connection);\n    }\n    sendAgentConfig(connection) {\n        if (this.agentConfig && !this.agentConfigSent) {\n            if (this.privRecognizerConfig\n                .parameters\n                .getProperty(Exports_js_3.PropertyId.Conversation_DialogType) === Exports_js_3.DialogServiceConfig.DialogTypes.CustomCommands) {\n                const config = this.agentConfig.get();\n                config.botInfo.commandsCulture = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage, \"en-us\");\n                this.agentConfig.set(config);\n            }\n            this.onEvent(new DialogEvents_js_1.SendingAgentContextMessageEvent(this.agentConfig));\n            const agentConfigJson = this.agentConfig.toJsonString();\n            // guard against sending this multiple times on one connection\n            this.agentConfigSent = true;\n            return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"agent.config\", this.privRequestSession.requestId, \"application/json\", agentConfigJson));\n        }\n        return;\n    }\n    sendAgentContext(connection) {\n        const guid = (0, Exports_js_2.createGuid)();\n        const speechActivityTemplate = this.privDialogServiceConnector.properties.getProperty(Exports_js_3.PropertyId.Conversation_Speech_Activity_Template);\n        const agentContext = {\n            channelData: \"\",\n            context: {\n                interactionId: guid\n            },\n            messagePayload: typeof speechActivityTemplate === undefined ? undefined : speechActivityTemplate,\n            version: 0.5\n        };\n        const agentContextJson = JSON.stringify(agentContext);\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"speech.agent.context\", this.privRequestSession.requestId, \"application/json\", agentContextJson));\n    }\n    fireEventForResult(serviceResult, properties) {\n        const resultReason = Exports_js_4.EnumTranslation.implTranslateRecognitionResult(serviceResult.RecognitionStatus);\n        const result = new Exports_js_3.SpeechRecognitionResult(this.privRequestSession.requestId, resultReason, serviceResult.DisplayText, serviceResult.Duration, serviceResult.Offset, serviceResult.Language, serviceResult.LanguageDetectionConfidence, undefined, undefined, serviceResult.asJson(), properties);\n        const ev = new Exports_js_3.SpeechRecognitionEventArgs(result, serviceResult.Offset, this.privRequestSession.sessionId);\n        return ev;\n    }\n    handleResponseMessage(responseMessage) {\n        // \"response\" messages can contain either \"message\" (activity) or \"MessageStatus\" data. Fire the appropriate\n        // event according to the message type that's specified.\n        const responsePayload = JSON.parse(responseMessage.textBody);\n        switch (responsePayload.messageType.toLowerCase()) {\n            case \"message\":\n                const responseRequestId = responseMessage.requestId.toUpperCase();\n                const activityPayload = ActivityResponsePayload_js_1.ActivityPayloadResponse.fromJSON(responseMessage.textBody);\n                const turn = this.privTurnStateManager.GetTurn(responseRequestId);\n                // update the conversation Id\n                if (activityPayload.conversationId) {\n                    const updateAgentConfig = this.agentConfig.get();\n                    updateAgentConfig.botInfo.conversationId = activityPayload.conversationId;\n                    this.agentConfig.set(updateAgentConfig);\n                }\n                const pullAudioOutputStream = turn.processActivityPayload(activityPayload, AudioOutputFormat_js_1.AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString(this.privDialogServiceConnector.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)));\n                const activity = new Exports_js_3.ActivityReceivedEventArgs(activityPayload.messagePayload, pullAudioOutputStream);\n                if (!!this.privDialogServiceConnector.activityReceived) {\n                    try {\n                        this.privDialogServiceConnector.activityReceived(this.privDialogServiceConnector, activity);\n                        /* eslint-disable-next-line no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                break;\n            case \"messagestatus\":\n                if (!!this.privDialogServiceConnector.turnStatusReceived) {\n                    try {\n                        this.privDialogServiceConnector.turnStatusReceived(this.privDialogServiceConnector, new Exports_js_3.TurnStatusReceivedEventArgs(responseMessage.textBody));\n                        /* eslint-disable-next-line no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                break;\n            default:\n                Exports_js_2.Events.instance.onEvent(new Exports_js_2.BackgroundEvent(`Unexpected response of type ${responsePayload.messageType}. Ignoring.`));\n                break;\n        }\n    }\n    onEvent(event) {\n        this.privEvents.onEvent(event);\n        Exports_js_2.Events.instance.onEvent(event);\n    }\n    addKeywordContextData() {\n        const keywordPropertyValue = this.privRecognizerConfig.parameters.getProperty(\"SPEECH-KeywordsToDetect\");\n        if (keywordPropertyValue === undefined) {\n            return;\n        }\n        const keywordOffsetPropertyValue = this.privRecognizerConfig.parameters\n            .getProperty(\"SPEECH-KeywordsToDetect-Offsets\");\n        const keywordDurationPropertyValue = this.privRecognizerConfig.parameters\n            .getProperty(\"SPEECH-KeywordsToDetect-Durations\");\n        const keywords = keywordPropertyValue.split(\";\");\n        const keywordOffsets = keywordOffsetPropertyValue === undefined ? [] : keywordOffsetPropertyValue.split(\";\");\n        const keywordDurations = keywordDurationPropertyValue === undefined ? [] : keywordDurationPropertyValue.split(\";\");\n        const keywordDefinitionArray = [];\n        for (let i = 0; i < keywords.length; i++) {\n            const definition = {\n                text: keywords[i]\n            };\n            if (i < keywordOffsets.length) {\n                definition.startOffset = Number(keywordOffsets[i]);\n            }\n            if (i < keywordDurations.length) {\n                definition.duration = Number(keywordDurations[i]);\n            }\n            keywordDefinitionArray.push(definition);\n        }\n        this.speechContext.getContext().invocationSource = InvocationSource_js_1.InvocationSource.VoiceActivationWithKeyword;\n        this.speechContext.getContext().keywordDetection = [{\n                clientDetectedKeywords: keywordDefinitionArray,\n                onReject: { action: KeywordDetection_js_1.OnRejectAction.EndOfTurn },\n                type: KeywordDetection_js_1.KeywordDetectionType.StartTrigger\n            }];\n    }\n}\nexports.DialogServiceAdapter = DialogServiceAdapter;\n\n//# sourceMappingURL=DialogServiceAdapter.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AgentConfig = void 0;\n/**\n * Represents the JSON used in the agent.config message sent to the speech service.\n */\nclass AgentConfig {\n    toJsonString() {\n        return JSON.stringify(this.iPrivConfig);\n    }\n    get() {\n        return this.iPrivConfig;\n    }\n    /**\n     * Setter for the agent.config object.\n     * @param value a JSON serializable object.\n     */\n    set(value) {\n        this.iPrivConfig = value;\n    }\n}\nexports.AgentConfig = AgentConfig;\n\n//# sourceMappingURL=AgentConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationConnectionConfig = void 0;\nconst RestConfigBase_js_1 = require(\"../../common.browser/RestConfigBase.js\");\nclass ConversationConnectionConfig extends RestConfigBase_js_1.RestConfigBase {\n    static get host() {\n        return ConversationConnectionConfig.privHost;\n    }\n    static get apiVersion() {\n        return ConversationConnectionConfig.privApiVersion;\n    }\n    static get clientAppId() {\n        return ConversationConnectionConfig.privClientAppId;\n    }\n    static get defaultLanguageCode() {\n        return ConversationConnectionConfig.privDefaultLanguageCode;\n    }\n    static get restPath() {\n        return ConversationConnectionConfig.privRestPath;\n    }\n    static get webSocketPath() {\n        return ConversationConnectionConfig.privWebSocketPath;\n    }\n    static get transcriptionEventKeys() {\n        return ConversationConnectionConfig.privTranscriptionEventKeys;\n    }\n}\nexports.ConversationConnectionConfig = ConversationConnectionConfig;\nConversationConnectionConfig.privHost = \"dev.microsofttranslator.com\";\nConversationConnectionConfig.privRestPath = \"/capito/room\";\nConversationConnectionConfig.privApiVersion = \"2.0\";\nConversationConnectionConfig.privDefaultLanguageCode = \"en-US\";\nConversationConnectionConfig.privClientAppId = \"FC539C22-1767-4F1F-84BC-B4D811114F15\";\nConversationConnectionConfig.privWebSocketPath = \"/capito/translate\";\nConversationConnectionConfig.privTranscriptionEventKeys = [\"iCalUid\", \"callId\", \"organizer\", \"FLAC\", \"MTUri\", \"DifferentiateGuestSpeakers\", \"audiorecording\", \"Threadid\", \"OrganizerMri\", \"OrganizerTenantId\", \"UserToken\"];\n\n//# sourceMappingURL=ConversationConnectionConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationManager = void 0;\nconst Exports_js_1 = require(\"../../common.browser/Exports.js\");\nconst Contracts_js_1 = require(\"../../sdk/Contracts.js\");\nconst Exports_js_2 = require(\"../../sdk/Exports.js\");\nconst ConversationConnectionConfig_js_1 = require(\"./ConversationConnectionConfig.js\");\nclass ConversationManager {\n    constructor() {\n        //\n        this.privRequestParams = ConversationConnectionConfig_js_1.ConversationConnectionConfig.configParams;\n        this.privErrors = ConversationConnectionConfig_js_1.ConversationConnectionConfig.restErrors;\n        this.privHost = ConversationConnectionConfig_js_1.ConversationConnectionConfig.host;\n        this.privApiVersion = ConversationConnectionConfig_js_1.ConversationConnectionConfig.apiVersion;\n        this.privRestPath = ConversationConnectionConfig_js_1.ConversationConnectionConfig.restPath;\n        this.privRestAdapter = new Exports_js_1.RestMessageAdapter({});\n    }\n    /**\n     * Make a POST request to the Conversation Manager service endpoint to create or join a conversation.\n     * @param args\n     * @param conversationCode\n     * @param callback\n     * @param errorCallback\n     */\n    createOrJoin(args, conversationCode, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(args, \"args\");\n            const languageCode = args.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage, ConversationConnectionConfig_js_1.ConversationConnectionConfig.defaultLanguageCode);\n            const nickname = args.getProperty(Exports_js_2.PropertyId.ConversationTranslator_Name, \"conversation_host\");\n            const endpointHost = args.getProperty(Exports_js_2.PropertyId.ConversationTranslator_Host, this.privHost);\n            const correlationId = args.getProperty(Exports_js_2.PropertyId.ConversationTranslator_CorrelationId);\n            const subscriptionKey = args.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key);\n            const subscriptionRegion = args.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region);\n            const authToken = args.getProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token);\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(languageCode, \"languageCode\");\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, \"nickname\");\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(endpointHost, \"endpointHost\");\n            const queryParams = {};\n            queryParams[this.privRequestParams.apiVersion] = this.privApiVersion;\n            queryParams[this.privRequestParams.languageCode] = languageCode;\n            queryParams[this.privRequestParams.nickname] = nickname;\n            const headers = {};\n            if (correlationId) {\n                headers[this.privRequestParams.correlationId] = correlationId;\n            }\n            headers[this.privRequestParams.clientAppId] = ConversationConnectionConfig_js_1.ConversationConnectionConfig.clientAppId;\n            if (conversationCode !== undefined) {\n                queryParams[this.privRequestParams.roomId] = conversationCode;\n            }\n            else {\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(subscriptionRegion, this.privErrors.authInvalidSubscriptionRegion);\n                headers[this.privRequestParams.subscriptionRegion] = subscriptionRegion;\n                if (subscriptionKey) {\n                    headers[this.privRequestParams.subscriptionKey] = subscriptionKey;\n                }\n                else if (authToken) {\n                    headers[this.privRequestParams.authorization] = `Bearer ${authToken}`;\n                }\n                else {\n                    Contracts_js_1.Contracts.throwIfNullOrUndefined(subscriptionKey, this.privErrors.authInvalidSubscriptionKey);\n                }\n            }\n            const config = {};\n            config.headers = headers;\n            this.privRestAdapter.options = config;\n            const endpoint = `https://${endpointHost}${this.privRestPath}`;\n            // TODO: support a proxy and certificate validation\n            this.privRestAdapter.request(Exports_js_1.RestRequestType.Post, endpoint, queryParams, null).then((response) => {\n                const requestId = Exports_js_1.RestMessageAdapter.extractHeaderValue(this.privRequestParams.requestId, response.headers);\n                if (!response.ok) {\n                    if (!!err) {\n                        // get the error\n                        let errorMessage = this.privErrors.invalidCreateJoinConversationResponse.replace(\"{status}\", response.status.toString());\n                        let errMessageRaw;\n                        try {\n                            errMessageRaw = JSON.parse(response.data);\n                            errorMessage += ` [${errMessageRaw.error.code}: ${errMessageRaw.error.message}]`;\n                        }\n                        catch (e) {\n                            errorMessage += ` [${response.data}]`;\n                        }\n                        if (requestId) {\n                            errorMessage += ` ${requestId}`;\n                        }\n                        err(errorMessage);\n                    }\n                    return;\n                }\n                const conversation = JSON.parse(response.data);\n                if (conversation) {\n                    conversation.requestId = requestId;\n                }\n                if (!!cb) {\n                    try {\n                        cb(conversation);\n                    }\n                    catch (e) {\n                        if (!!err) {\n                            err(e);\n                        }\n                    }\n                    cb = undefined;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n            }).catch(() => { });\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n        }\n    }\n    /**\n     * Make a DELETE request to the Conversation Manager service endpoint to leave the conversation.\n     * @param args\n     * @param sessionToken\n     * @param callback\n     */\n    leave(args, sessionToken) {\n        return new Promise((resolve, reject) => {\n            try {\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(args, this.privErrors.invalidArgs.replace(\"{arg}\", \"config\"));\n                Contracts_js_1.Contracts.throwIfNullOrWhitespace(sessionToken, this.privErrors.invalidArgs.replace(\"{arg}\", \"token\"));\n                const endpointHost = args.getProperty(Exports_js_2.PropertyId.ConversationTranslator_Host, this.privHost);\n                const correlationId = args.getProperty(Exports_js_2.PropertyId.ConversationTranslator_CorrelationId);\n                const queryParams = {};\n                queryParams[this.privRequestParams.apiVersion] = this.privApiVersion;\n                queryParams[this.privRequestParams.sessionToken] = sessionToken;\n                const headers = {};\n                if (correlationId) {\n                    headers[this.privRequestParams.correlationId] = correlationId;\n                }\n                const config = {};\n                config.headers = headers;\n                this.privRestAdapter.options = config;\n                const endpoint = `https://${endpointHost}${this.privRestPath}`;\n                // TODO: support a proxy and certificate validation\n                this.privRestAdapter.request(Exports_js_1.RestRequestType.Delete, endpoint, queryParams, null).then((response) => {\n                    if (!response.ok) {\n                        // ignore errors on delete\n                    }\n                    resolve();\n                    // eslint-disable-next-line @typescript-eslint/no-empty-function\n                }).catch(() => { });\n            }\n            catch (error) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    reject(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    reject(error);\n                }\n            }\n        });\n    }\n}\nexports.ConversationManager = ConversationManager;\n\n//# sourceMappingURL=ConversationManager.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationConnectionMessage = void 0;\nconst Exports_js_1 = require(\"../../common/Exports.js\");\nclass ConversationConnectionMessage extends Exports_js_1.ConnectionMessage {\n    constructor(messageType, body, headers, id) {\n        super(messageType, body, headers, id);\n        const json = JSON.parse(this.textBody);\n        if (json.type !== undefined) {\n            this.privConversationMessageType = json.type;\n        }\n    }\n    get conversationMessageType() {\n        return this.privConversationMessageType;\n    }\n}\nexports.ConversationConnectionMessage = ConversationConnectionMessage;\n\n//# sourceMappingURL=ConversationConnectionMessage.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationWebsocketMessageFormatter = void 0;\nconst Exports_js_1 = require(\"../../common/Exports.js\");\nconst ConversationConnectionMessage_js_1 = require(\"./ConversationConnectionMessage.js\");\n/**\n * Based off WebsocketMessageFormatter. The messages for Conversation Translator have some variations from the Speech messages.\n */\nclass ConversationWebsocketMessageFormatter {\n    /**\n     * Format incoming messages: text (speech partial/final, IM) or binary (tts)\n     */\n    toConnectionMessage(message) {\n        const deferral = new Exports_js_1.Deferred();\n        try {\n            if (message.messageType === Exports_js_1.MessageType.Text) {\n                const incomingMessage = new ConversationConnectionMessage_js_1.ConversationConnectionMessage(message.messageType, message.textContent, {}, message.id);\n                deferral.resolve(incomingMessage);\n            }\n            else if (message.messageType === Exports_js_1.MessageType.Binary) {\n                deferral.resolve(new ConversationConnectionMessage_js_1.ConversationConnectionMessage(message.messageType, message.binaryContent, undefined, message.id));\n            }\n        }\n        catch (e) {\n            deferral.reject(`Error formatting the message. Error: ${e}`);\n        }\n        return deferral.promise;\n    }\n    /**\n     * Format outgoing messages: text (commands or IM)\n     */\n    fromConnectionMessage(message) {\n        const deferral = new Exports_js_1.Deferred();\n        try {\n            if (message.messageType === Exports_js_1.MessageType.Text) {\n                const payload = `${message.textBody ? message.textBody : \"\"}`;\n                deferral.resolve(new Exports_js_1.RawWebsocketMessage(Exports_js_1.MessageType.Text, payload, message.id));\n            }\n        }\n        catch (e) {\n            deferral.reject(`Error formatting the message. ${e}`);\n        }\n        return deferral.promise;\n    }\n}\nexports.ConversationWebsocketMessageFormatter = ConversationWebsocketMessageFormatter;\n\n//# sourceMappingURL=ConversationWebsocketMessageFormatter.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationConnectionFactory = void 0;\nconst Exports_js_1 = require(\"../../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../../common/Exports.js\");\nconst Contracts_js_1 = require(\"../../sdk/Contracts.js\");\nconst Exports_js_3 = require(\"../../sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = require(\"../ConnectionFactoryBase.js\");\nconst ConversationConnectionConfig_js_1 = require(\"./ConversationConnectionConfig.js\");\nconst ConversationWebsocketMessageFormatter_js_1 = require(\"./ConversationWebsocketMessageFormatter.js\");\n/**\n * Create a connection to the Conversation Translator websocket for sending instant messages and commands, and for receiving translated messages.\n * The conversation must already have been started or joined.\n */\nclass ConversationConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    create(config, authInfo, connectionId) {\n        const endpointHost = config.parameters.getProperty(Exports_js_3.PropertyId.ConversationTranslator_Host, ConversationConnectionConfig_js_1.ConversationConnectionConfig.host);\n        const correlationId = config.parameters.getProperty(Exports_js_3.PropertyId.ConversationTranslator_CorrelationId, (0, Exports_js_2.createGuid)());\n        const endpoint = `wss://${endpointHost}${ConversationConnectionConfig_js_1.ConversationConnectionConfig.webSocketPath}`;\n        const token = config.parameters.getProperty(Exports_js_3.PropertyId.ConversationTranslator_Token, undefined);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(token, \"token\");\n        const queryParams = {};\n        queryParams[ConversationConnectionConfig_js_1.ConversationConnectionConfig.configParams.apiVersion] = ConversationConnectionConfig_js_1.ConversationConnectionConfig.apiVersion;\n        queryParams[ConversationConnectionConfig_js_1.ConversationConnectionConfig.configParams.token] = token;\n        queryParams[ConversationConnectionConfig_js_1.ConversationConnectionConfig.configParams.correlationId] = correlationId;\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        return Promise.resolve(new Exports_js_1.WebsocketConnection(endpoint, queryParams, {}, new ConversationWebsocketMessageFormatter_js_1.ConversationWebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId));\n    }\n}\nexports.ConversationConnectionFactory = ConversationConnectionFactory;\n\n//# sourceMappingURL=ConversationConnectionFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationRequestSession = void 0;\nconst Exports_js_1 = require(\"../../common/Exports.js\");\n/**\n * Placeholder class for the Conversation Request Session. Based off RequestSession.\n * TODO: define what telemetry is required.\n */\nclass ConversationRequestSession {\n    constructor(sessionId) {\n        this.privIsDisposed = false;\n        this.privDetachables = new Array();\n        this.privSessionId = sessionId;\n        this.privRequestId = (0, Exports_js_1.createNoDashGuid)();\n        this.privRequestCompletionDeferral = new Exports_js_1.Deferred();\n    }\n    get sessionId() {\n        return this.privSessionId;\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n    get completionPromise() {\n        return this.privRequestCompletionDeferral.promise;\n    }\n    onPreConnectionStart(authFetchEventId, connectionId) {\n        this.privSessionId = connectionId;\n    }\n    onAuthCompleted(isError) {\n        if (isError) {\n            this.onComplete();\n        }\n    }\n    onConnectionEstablishCompleted(statusCode) {\n        if (statusCode === 200) {\n            return;\n        }\n        else if (statusCode === 403) {\n            this.onComplete();\n        }\n    }\n    onServiceTurnEndResponse(continuousRecognition) {\n        if (!continuousRecognition) {\n            this.onComplete();\n        }\n        else {\n            this.privRequestId = (0, Exports_js_1.createNoDashGuid)();\n        }\n    }\n    async dispose() {\n        if (!this.privIsDisposed) {\n            // we should have completed by now. If we did not its an unknown error.\n            this.privIsDisposed = true;\n            for (const detachable of this.privDetachables) {\n                await detachable.detach();\n            }\n        }\n    }\n    onComplete() {\n        //\n    }\n}\nexports.ConversationRequestSession = ConversationRequestSession;\n\n//# sourceMappingURL=ConversationRequestSession.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationReceivedTranslationEventArgs = exports.ParticipantsListEventArgs = exports.ParticipantAttributeEventArgs = exports.ParticipantEventArgs = exports.LockRoomEventArgs = exports.MuteAllEventArgs = void 0;\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../../sdk/Exports.js\");\nclass MuteAllEventArgs extends Exports_js_1.SessionEventArgs {\n    constructor(isMuted, sessionId) {\n        super(sessionId);\n        this.privIsMuted = isMuted;\n    }\n    get isMuted() {\n        return this.privIsMuted;\n    }\n}\nexports.MuteAllEventArgs = MuteAllEventArgs;\nclass LockRoomEventArgs extends Exports_js_1.SessionEventArgs {\n    constructor(isLocked, sessionId) {\n        super(sessionId);\n        this.privIsLocked = isLocked;\n    }\n    get isMuted() {\n        return this.privIsLocked;\n    }\n}\nexports.LockRoomEventArgs = LockRoomEventArgs;\nclass ParticipantEventArgs extends Exports_js_1.SessionEventArgs {\n    constructor(participant, sessionId) {\n        super(sessionId);\n        this.privParticipant = participant;\n    }\n    get participant() {\n        return this.privParticipant;\n    }\n}\nexports.ParticipantEventArgs = ParticipantEventArgs;\nclass ParticipantAttributeEventArgs extends Exports_js_1.SessionEventArgs {\n    constructor(participantId, key, value, sessionId) {\n        super(sessionId);\n        this.privKey = key;\n        this.privValue = value;\n        this.privParticipantId = participantId;\n    }\n    get value() {\n        return this.privValue;\n    }\n    get key() {\n        return this.privKey;\n    }\n    get id() {\n        return this.privParticipantId;\n    }\n}\nexports.ParticipantAttributeEventArgs = ParticipantAttributeEventArgs;\nclass ParticipantsListEventArgs extends Exports_js_1.SessionEventArgs {\n    constructor(conversationId, token, translateTo, profanityFilter, roomProfanityFilter, isRoomLocked, isMuteAll, participants, sessionId) {\n        super(sessionId);\n        this.privRoomId = conversationId;\n        this.privSessionToken = token;\n        this.privTranslateTo = translateTo;\n        this.privProfanityFilter = profanityFilter;\n        this.privRoomProfanityFilter = roomProfanityFilter;\n        this.privIsRoomLocked = isRoomLocked;\n        this.privIsRoomLocked = isMuteAll;\n        this.privParticipants = participants;\n    }\n    get sessionToken() {\n        return this.privSessionToken;\n    }\n    get conversationId() {\n        return this.privRoomId;\n    }\n    get translateTo() {\n        return this.privTranslateTo;\n    }\n    get profanityFilter() {\n        return this.privProfanityFilter;\n    }\n    get roomProfanityFilter() {\n        return this.privRoomProfanityFilter;\n    }\n    get isRoomLocked() {\n        return this.privIsRoomLocked;\n    }\n    get isMuteAll() {\n        return this.privIsMuteAll;\n    }\n    get participants() {\n        return this.privParticipants;\n    }\n}\nexports.ParticipantsListEventArgs = ParticipantsListEventArgs;\nclass ConversationReceivedTranslationEventArgs {\n    constructor(command, payload, sessionId) {\n        this.privPayload = payload;\n        this.privCommand = command;\n        this.privSessionId = sessionId;\n    }\n    get payload() {\n        return this.privPayload;\n    }\n    get command() {\n        return this.privCommand;\n    }\n    get sessionId() {\n        return this.privSessionId;\n    }\n}\nexports.ConversationReceivedTranslationEventArgs = ConversationReceivedTranslationEventArgs;\n\n//# sourceMappingURL=ConversationTranslatorEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranslatorCommandTypes = exports.ConversationTranslatorMessageTypes = exports.InternalParticipants = void 0;\n/** Users participating in the conversation */\nclass InternalParticipants {\n    constructor(participants = [], meId) {\n        this.participants = participants;\n        this.meId = meId;\n    }\n    /**\n     * Add or update a participant\n     * @param value\n     */\n    addOrUpdateParticipant(value) {\n        if (value === undefined) {\n            return;\n        }\n        const exists = this.getParticipantIndex(value.id);\n        if (exists > -1) {\n            this.participants.splice(exists, 1, value);\n        }\n        else {\n            this.participants.push(value);\n        }\n        // ensure it was added ok\n        return this.getParticipant(value.id);\n    }\n    /**\n     * Find the participant's position in the participants list.\n     * @param id\n     */\n    getParticipantIndex(id) {\n        return this.participants.findIndex((p) => p.id === id);\n    }\n    /**\n     * Find the participant by id.\n     * @param id\n     */\n    getParticipant(id) {\n        return this.participants.find((p) => p.id === id);\n    }\n    /**\n     * Remove a participant from the participants list.\n     */\n    deleteParticipant(id) {\n        this.participants = this.participants.filter((p) => p.id !== id);\n    }\n    /**\n     * Helper to return the conversation host.\n     */\n    get host() {\n        return this.participants.find((p) => p.isHost === true);\n    }\n    /**\n     * Helper to return the current user.\n     */\n    get me() {\n        return this.getParticipant(this.meId);\n    }\n}\nexports.InternalParticipants = InternalParticipants;\n/**\n * List of command message types\n */\nexports.ConversationTranslatorMessageTypes = {\n    command: \"command\",\n    final: \"final\",\n    info: \"info\",\n    instantMessage: \"instant_message\",\n    keepAlive: \"keep_alive\",\n    partial: \"partial\",\n    participantCommand: \"participant_command\",\n    translatedMessage: \"translated_message\"\n};\n/**\n * List of command types\n */\nexports.ConversationTranslatorCommandTypes = {\n    changeNickname: \"ChangeNickname\",\n    disconnectSession: \"DisconnectSession\",\n    ejectParticipant: \"EjectParticipant\",\n    instant_message: \"instant_message\",\n    joinSession: \"JoinSession\",\n    leaveSession: \"LeaveSession\",\n    participantList: \"ParticipantList\",\n    roomExpirationWarning: \"RoomExpirationWarning\",\n    setLockState: \"SetLockState\",\n    setMute: \"SetMute\",\n    setMuteAll: \"SetMuteAll\",\n    setProfanityFiltering: \"SetProfanityFiltering\",\n    setTranslateToLanguages: \"SetTranslateToLanguages\",\n    setUseTTS: \"SetUseTTS\"\n};\n\n//# sourceMappingURL=ConversationTranslatorInterfaces.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommandResponsePayload = void 0;\nconst parseCommandResponse = (json) => JSON.parse(json);\nclass CommandResponsePayload {\n    constructor(json) {\n        this.privCommandResponse = parseCommandResponse(json);\n    }\n    get type() {\n        return this.privCommandResponse.type;\n    }\n    get command() {\n        return this.privCommandResponse.command;\n    }\n    get id() {\n        return this.privCommandResponse.id;\n    }\n    get nickname() {\n        return this.privCommandResponse.nickname;\n    }\n    get participantId() {\n        return this.privCommandResponse.participantId;\n    }\n    get roomid() {\n        return this.privCommandResponse.roomid;\n    }\n    get value() {\n        return this.privCommandResponse.value;\n    }\n    get token() {\n        return this.privCommandResponse.token;\n    }\n    static fromJSON(json) {\n        return new CommandResponsePayload(json);\n    }\n}\nexports.CommandResponsePayload = CommandResponsePayload;\n\n//# sourceMappingURL=CommandResponsePayload.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParticipantPayloadResponse = exports.ParticipantsListPayloadResponse = void 0;\nconst parseListResponse = (json) => JSON.parse(json);\nconst parseParticipantResponse = (json) => JSON.parse(json);\nclass ParticipantsListPayloadResponse {\n    constructor(json) {\n        this.privParticipantsPayloadResponse = parseListResponse(json);\n    }\n    get roomid() {\n        return this.privParticipantsPayloadResponse.roomid;\n    }\n    get id() {\n        return this.privParticipantsPayloadResponse.id;\n    }\n    get command() {\n        return this.privParticipantsPayloadResponse.command;\n    }\n    get participants() {\n        return this.privParticipantsPayloadResponse.participants;\n    }\n    get token() {\n        return this.privParticipantsPayloadResponse.token;\n    }\n    get translateTo() {\n        return this.privParticipantsPayloadResponse.translateTo;\n    }\n    get profanityFilter() {\n        return this.privParticipantsPayloadResponse.profanityFilter;\n    }\n    get roomProfanityFilter() {\n        return this.privParticipantsPayloadResponse.roomProfanityFilter;\n    }\n    get roomLocked() {\n        return this.privParticipantsPayloadResponse.roomLocked;\n    }\n    get muteAll() {\n        return this.privParticipantsPayloadResponse.muteAll;\n    }\n    get type() {\n        return this.privParticipantsPayloadResponse.type;\n    }\n    static fromJSON(json) {\n        return new ParticipantsListPayloadResponse(json);\n    }\n}\nexports.ParticipantsListPayloadResponse = ParticipantsListPayloadResponse;\nclass ParticipantPayloadResponse {\n    constructor(json) {\n        this.privParticipantPayloadResponse = parseParticipantResponse(json);\n    }\n    get nickname() {\n        return this.privParticipantPayloadResponse.nickname;\n    }\n    get locale() {\n        return this.privParticipantPayloadResponse.locale;\n    }\n    get usetts() {\n        return this.privParticipantPayloadResponse.usetts;\n    }\n    get ismuted() {\n        return this.privParticipantPayloadResponse.ismuted;\n    }\n    get ishost() {\n        return this.privParticipantPayloadResponse.ishost;\n    }\n    get participantId() {\n        return this.privParticipantPayloadResponse.participantId;\n    }\n    get avatar() {\n        return this.privParticipantPayloadResponse.avatar;\n    }\n    static fromJSON(json) {\n        return new ParticipantPayloadResponse(json);\n    }\n}\nexports.ParticipantPayloadResponse = ParticipantPayloadResponse;\n\n//# sourceMappingURL=ParticipantResponsePayload.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextResponsePayload = exports.SpeechResponsePayload = void 0;\nconst parseSpeechResponse = (json) => JSON.parse(json);\nconst parseTextResponse = (json) => JSON.parse(json);\nclass SpeechResponsePayload {\n    constructor(json) {\n        this.privSpeechResponse = parseSpeechResponse(json);\n    }\n    get recognition() {\n        return this.privSpeechResponse.recognition;\n    }\n    get translations() {\n        return this.privSpeechResponse.translations;\n    }\n    get id() {\n        return this.privSpeechResponse.id;\n    }\n    get language() {\n        return this.privSpeechResponse.language;\n    }\n    get nickname() {\n        return this.privSpeechResponse.nickname;\n    }\n    get participantId() {\n        return this.privSpeechResponse.participantId;\n    }\n    get roomid() {\n        return this.privSpeechResponse.roomid;\n    }\n    get timestamp() {\n        return this.privSpeechResponse.timestamp;\n    }\n    get type() {\n        return this.privSpeechResponse.type;\n    }\n    get isFinal() {\n        return this.privSpeechResponse.type === \"final\";\n    }\n    static fromJSON(json) {\n        return new SpeechResponsePayload(json);\n    }\n}\nexports.SpeechResponsePayload = SpeechResponsePayload;\nclass TextResponsePayload {\n    constructor(json) {\n        this.privTextResponse = parseTextResponse(json);\n    }\n    get originalText() {\n        return this.privTextResponse.originalText;\n    }\n    get translations() {\n        return this.privTextResponse.translations;\n    }\n    get id() {\n        return this.privTextResponse.id;\n    }\n    get language() {\n        return this.privTextResponse.language;\n    }\n    get nickname() {\n        return this.privTextResponse.nickname;\n    }\n    get participantId() {\n        return this.privTextResponse.participantId;\n    }\n    get roomid() {\n        return this.privTextResponse.roomid;\n    }\n    get timestamp() {\n        return this.privTextResponse.timestamp;\n    }\n    get type() {\n        return this.privTextResponse.type;\n    }\n    static fromJSON(json) {\n        return new TextResponsePayload(json);\n    }\n}\nexports.TextResponsePayload = TextResponsePayload;\n\n//# sourceMappingURL=TranslationResponsePayload.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextResponsePayload = exports.SpeechResponsePayload = exports.ParticipantPayloadResponse = exports.ParticipantsListPayloadResponse = exports.CommandResponsePayload = void 0;\nvar CommandResponsePayload_js_1 = require(\"./CommandResponsePayload.js\");\nObject.defineProperty(exports, \"CommandResponsePayload\", { enumerable: true, get: function () { return CommandResponsePayload_js_1.CommandResponsePayload; } });\nvar ParticipantResponsePayload_js_1 = require(\"./ParticipantResponsePayload.js\");\nObject.defineProperty(exports, \"ParticipantsListPayloadResponse\", { enumerable: true, get: function () { return ParticipantResponsePayload_js_1.ParticipantsListPayloadResponse; } });\nObject.defineProperty(exports, \"ParticipantPayloadResponse\", { enumerable: true, get: function () { return ParticipantResponsePayload_js_1.ParticipantPayloadResponse; } });\nvar TranslationResponsePayload_js_1 = require(\"./TranslationResponsePayload.js\");\nObject.defineProperty(exports, \"SpeechResponsePayload\", { enumerable: true, get: function () { return TranslationResponsePayload_js_1.SpeechResponsePayload; } });\nObject.defineProperty(exports, \"TextResponsePayload\", { enumerable: true, get: function () { return TranslationResponsePayload_js_1.TextResponsePayload; } });\n\n//# sourceMappingURL=Exports.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationServiceAdapter = void 0;\nconst Exports_js_1 = require(\"../../common/Exports.js\");\nconst Exports_js_2 = require(\"../../sdk/Exports.js\");\nconst Exports_js_3 = require(\"../Exports.js\");\nconst ConversationConnectionMessage_js_1 = require(\"./ConversationConnectionMessage.js\");\nconst ConversationRequestSession_js_1 = require(\"./ConversationRequestSession.js\");\nconst ConversationTranslatorEventArgs_js_1 = require(\"./ConversationTranslatorEventArgs.js\");\nconst ConversationTranslatorInterfaces_js_1 = require(\"./ConversationTranslatorInterfaces.js\");\nconst Exports_js_4 = require(\"./ServiceMessages/Exports.js\");\n/**\n * The service adapter handles sending and receiving messages to the Conversation Translator websocket.\n */\nclass ConversationServiceAdapter extends Exports_js_3.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, conversationServiceConnector) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, conversationServiceConnector);\n        this.privConnectionConfigPromise = undefined;\n        this.privLastPartialUtteranceId = \"\";\n        this.privConversationServiceConnector = conversationServiceConnector;\n        this.privConversationAuthentication = authentication;\n        this.receiveMessageOverride = () => this.receiveConversationMessageOverride();\n        this.recognizeOverride = () => this.noOp();\n        this.postConnectImplOverride = (connection) => this.conversationConnectImpl(connection);\n        this.configConnectionOverride = () => this.configConnection();\n        this.disconnectOverride = () => this.privDisconnect();\n        this.privConversationRequestSession = new ConversationRequestSession_js_1.ConversationRequestSession((0, Exports_js_1.createNoDashGuid)());\n        this.privConversationConnectionFactory = connectionFactory;\n        this.privConversationIsDisposed = false;\n    }\n    isDisposed() {\n        return super.isDisposed() || this.privConversationIsDisposed;\n    }\n    async dispose(reason) {\n        this.privConversationIsDisposed = true;\n        if (this.privConnectionConfigPromise !== undefined) {\n            const connection = await this.privConnectionConfigPromise;\n            await connection.dispose(reason);\n        }\n        await super.dispose(reason);\n    }\n    async sendMessage(message) {\n        const connection = await this.fetchConnection();\n        return connection.send(new ConversationConnectionMessage_js_1.ConversationConnectionMessage(Exports_js_1.MessageType.Text, message));\n    }\n    async sendMessageAsync(message) {\n        const connection = await this.fetchConnection();\n        await connection.send(new ConversationConnectionMessage_js_1.ConversationConnectionMessage(Exports_js_1.MessageType.Text, message));\n    }\n    privDisconnect() {\n        if (this.terminateMessageLoop) {\n            return;\n        }\n        this.cancelRecognition(this.privConversationRequestSession.sessionId, this.privConversationRequestSession.requestId, Exports_js_2.CancellationReason.Error, Exports_js_2.CancellationErrorCode.NoError, \"Disconnecting\");\n        this.terminateMessageLoop = true;\n        return Promise.resolve();\n    }\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async processTypeSpecificMessages() {\n        return true;\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        this.terminateMessageLoop = true;\n        const cancelEvent = new Exports_js_2.ConversationTranslationCanceledEventArgs(cancellationReason, error, errorCode, undefined, sessionId);\n        try {\n            if (!!this.privConversationServiceConnector.canceled) {\n                this.privConversationServiceConnector.canceled(this.privConversationServiceConnector, cancelEvent);\n            }\n        }\n        catch {\n            // continue on error\n        }\n    }\n    /**\n     * Establishes a websocket connection to the end point.\n     */\n    async conversationConnectImpl(connection) {\n        this.privConnectionLoop = this.startMessageLoop();\n        return connection;\n    }\n    /**\n     * Process incoming websocket messages\n     */\n    async receiveConversationMessageOverride() {\n        if (this.isDisposed() || this.terminateMessageLoop) {\n            return Promise.resolve();\n        }\n        // we won't rely on the cascading promises of the connection since we want to continually be available to receive messages\n        const communicationCustodian = new Exports_js_1.Deferred();\n        try {\n            const connection = await this.fetchConnection();\n            const message = await connection.read();\n            if (this.isDisposed() || this.terminateMessageLoop) {\n                // We're done.\n                communicationCustodian.resolve();\n                return Promise.resolve();\n            }\n            if (!message) {\n                return this.receiveConversationMessageOverride();\n            }\n            const sessionId = this.privConversationRequestSession.sessionId;\n            const conversationMessageType = message.conversationMessageType.toLowerCase();\n            let sendFinal = false;\n            try {\n                switch (conversationMessageType) {\n                    case \"info\":\n                    case \"participant_command\":\n                    case \"command\":\n                        const commandPayload = Exports_js_4.CommandResponsePayload.fromJSON(message.textBody);\n                        switch (commandPayload.command.toLowerCase()) {\n                            /**\n                             * 'ParticpantList' is the first message sent to the user after the websocket connection has opened.\n                             * The consuming client must wait for this message to arrive\n                             * before starting to send their own data.\n                             */\n                            case \"participantlist\":\n                                const participantsPayload = Exports_js_4.ParticipantsListPayloadResponse.fromJSON(message.textBody);\n                                const participantsResult = participantsPayload.participants.map((p) => {\n                                    const participant = {\n                                        avatar: p.avatar,\n                                        displayName: p.nickname,\n                                        id: p.participantId,\n                                        isHost: p.ishost,\n                                        isMuted: p.ismuted,\n                                        isUsingTts: p.usetts,\n                                        preferredLanguage: p.locale\n                                    };\n                                    return participant;\n                                });\n                                if (!!this.privConversationServiceConnector.participantsListReceived) {\n                                    this.privConversationServiceConnector.participantsListReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantsListEventArgs(participantsPayload.roomid, participantsPayload.token, participantsPayload.translateTo, participantsPayload.profanityFilter, participantsPayload.roomProfanityFilter, participantsPayload.roomLocked, participantsPayload.muteAll, participantsResult, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetTranslateToLanguages' represents the list of languages being used in the Conversation by all users(?).\n                             * This is sent at the start of the Conversation\n                             */\n                            case \"settranslatetolanguages\":\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantAttributeEventArgs(commandPayload.participantId, ConversationTranslatorInterfaces_js_1.ConversationTranslatorCommandTypes.setTranslateToLanguages, commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetProfanityFiltering' lets the client set the level of profanity filtering.\n                             * If sent by the participant the setting will effect only their own profanity level.\n                             * If sent by the host, the setting will effect all participants including the host.\n                             * Note: the profanity filters differ from Speech Service (?): 'marked', 'raw', 'removed', 'tagged'\n                             */\n                            case \"setprofanityfiltering\":\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantAttributeEventArgs(commandPayload.participantId, ConversationTranslatorInterfaces_js_1.ConversationTranslatorCommandTypes.setProfanityFiltering, commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetMute' is sent if the participant has been muted by the host.\n                             * Check the 'participantId' to determine if the current user has been muted.\n                             */\n                            case \"setmute\":\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantAttributeEventArgs(commandPayload.participantId, ConversationTranslatorInterfaces_js_1.ConversationTranslatorCommandTypes.setMute, commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetMuteAll' is sent if the Conversation has been muted by the host.\n                             */\n                            case \"setmuteall\":\n                                if (!!this.privConversationServiceConnector.muteAllCommandReceived) {\n                                    this.privConversationServiceConnector.muteAllCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.MuteAllEventArgs(commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'RoomExpirationWarning' is sent towards the end of the Conversation session to give a timeout warning.\n                             */\n                            case \"roomexpirationwarning\":\n                                if (!!this.privConversationServiceConnector.conversationExpiration) {\n                                    this.privConversationServiceConnector.conversationExpiration(this.privConversationServiceConnector, new Exports_js_2.ConversationExpirationEventArgs(commandPayload.value, this.privConversationRequestSession.sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetUseTts' is sent as a confirmation if the user requests TTS to be turned on or off.\n                             */\n                            case \"setusetts\":\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantAttributeEventArgs(commandPayload.participantId, ConversationTranslatorInterfaces_js_1.ConversationTranslatorCommandTypes.setUseTTS, commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetLockState' is set if the host has locked or unlocked the Conversation.\n                             */\n                            case \"setlockstate\":\n                                if (!!this.privConversationServiceConnector.lockRoomCommandReceived) {\n                                    this.privConversationServiceConnector.lockRoomCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.LockRoomEventArgs(commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'ChangeNickname' is received if a user changes their display name.\n                             * Any cached particpiants list should be updated to reflect the display name.\n                             */\n                            case \"changenickname\":\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantAttributeEventArgs(commandPayload.participantId, ConversationTranslatorInterfaces_js_1.ConversationTranslatorCommandTypes.changeNickname, commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'JoinSession' is sent when a user joins the Conversation.\n                             */\n                            case \"joinsession\":\n                                const joinParticipantPayload = Exports_js_4.ParticipantPayloadResponse.fromJSON(message.textBody);\n                                const joiningParticipant = {\n                                    avatar: joinParticipantPayload.avatar,\n                                    displayName: joinParticipantPayload.nickname,\n                                    id: joinParticipantPayload.participantId,\n                                    isHost: joinParticipantPayload.ishost,\n                                    isMuted: joinParticipantPayload.ismuted,\n                                    isUsingTts: joinParticipantPayload.usetts,\n                                    preferredLanguage: joinParticipantPayload.locale,\n                                };\n                                if (!!this.privConversationServiceConnector.participantJoinCommandReceived) {\n                                    this.privConversationServiceConnector.participantJoinCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantEventArgs(joiningParticipant, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'LeaveSession' is sent when a user leaves the Conversation'.\n                             */\n                            case \"leavesession\":\n                                const leavingParticipant = {\n                                    id: commandPayload.participantId\n                                };\n                                if (!!this.privConversationServiceConnector.participantLeaveCommandReceived) {\n                                    this.privConversationServiceConnector.participantLeaveCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantEventArgs(leavingParticipant, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'DisconnectSession' is sent when a user is disconnected from the session (e.g. network problem).\n                             * Check the 'ParticipantId' to check whether the message is for the current user.\n                             */\n                            case \"disconnectsession\":\n                                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                                const disconnectParticipant = {\n                                    id: commandPayload.participantId\n                                };\n                                break;\n                            case \"token\":\n                                const token = new Exports_js_3.CognitiveTokenAuthentication(() => {\n                                    const authorizationToken = commandPayload.token;\n                                    return Promise.resolve(authorizationToken);\n                                }, () => {\n                                    const authorizationToken = commandPayload.token;\n                                    return Promise.resolve(authorizationToken);\n                                });\n                                this.authentication = token;\n                                this.privConversationServiceConnector.onToken(token);\n                                break;\n                            /**\n                             * Message not recognized.\n                             */\n                            default:\n                                break;\n                        }\n                        break;\n                    /**\n                     * 'partial' (or 'hypothesis') represents a unfinalized speech message.\n                     */\n                    case \"partial\":\n                    /**\n                     * 'final' (or 'phrase') represents a finalized speech message.\n                     */\n                    case \"final\":\n                        const speechPayload = Exports_js_4.SpeechResponsePayload.fromJSON(message.textBody);\n                        const conversationResultReason = (conversationMessageType === \"final\") ? Exports_js_2.ResultReason.TranslatedParticipantSpeech : Exports_js_2.ResultReason.TranslatingParticipantSpeech;\n                        const speechResult = new Exports_js_2.ConversationTranslationResult(speechPayload.participantId, this.getTranslations(speechPayload.translations), speechPayload.language, speechPayload.id, conversationResultReason, speechPayload.recognition, undefined, undefined, message.textBody, undefined);\n                        if (speechPayload.isFinal) {\n                            // check the length, sometimes empty finals are returned\n                            if (speechResult.text !== undefined && speechResult.text.length > 0) {\n                                sendFinal = true;\n                            }\n                            else if (speechPayload.id === this.privLastPartialUtteranceId) {\n                                // send final as normal. We had a non-empty partial for this same utterance\n                                // so sending the empty final is important\n                                sendFinal = true;\n                            }\n                            else {\n                                // suppress unneeded final\n                            }\n                            if (sendFinal) {\n                                if (!!this.privConversationServiceConnector.translationReceived) {\n                                    this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ConversationReceivedTranslationEventArgs(ConversationTranslatorInterfaces_js_1.ConversationTranslatorMessageTypes.final, speechResult, sessionId));\n                                }\n                            }\n                        }\n                        else if (speechResult.text !== undefined) {\n                            this.privLastPartialUtteranceId = speechPayload.id;\n                            if (!!this.privConversationServiceConnector.translationReceived) {\n                                this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ConversationReceivedTranslationEventArgs(ConversationTranslatorInterfaces_js_1.ConversationTranslatorMessageTypes.partial, speechResult, sessionId));\n                            }\n                        }\n                        break;\n                    /**\n                     * \"translated_message\" is a text message or instant message (IM).\n                     */\n                    case \"translated_message\":\n                        const textPayload = Exports_js_4.TextResponsePayload.fromJSON(message.textBody);\n                        // TODO: (Native parity) a result reason should be set based whether the participantId is ours or not\n                        const textResult = new Exports_js_2.ConversationTranslationResult(textPayload.participantId, this.getTranslations(textPayload.translations), textPayload.language, undefined, undefined, textPayload.originalText, undefined, undefined, undefined, message.textBody, undefined);\n                        if (!!this.privConversationServiceConnector.translationReceived) {\n                            this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ConversationReceivedTranslationEventArgs(ConversationTranslatorInterfaces_js_1.ConversationTranslatorMessageTypes.instantMessage, textResult, sessionId));\n                        }\n                        break;\n                    default:\n                        // ignore any unsupported message types\n                        break;\n                }\n            }\n            catch (e) {\n                // continue\n            }\n            return this.receiveConversationMessageOverride();\n        }\n        catch (e) {\n            this.terminateMessageLoop = true;\n        }\n        return communicationCustodian.promise;\n    }\n    async startMessageLoop() {\n        if (this.isDisposed()) {\n            return Promise.resolve();\n        }\n        this.terminateMessageLoop = false;\n        const messageRetrievalPromise = this.receiveConversationMessageOverride();\n        try {\n            const r = await messageRetrievalPromise;\n            return r;\n        }\n        catch (error) {\n            this.cancelRecognition(this.privRequestSession ? this.privRequestSession.sessionId : \"\", this.privRequestSession ? this.privRequestSession.requestId : \"\", Exports_js_2.CancellationReason.Error, Exports_js_2.CancellationErrorCode.RuntimeError, error);\n            return null;\n        }\n    }\n    // Takes an established websocket connection to the endpoint\n    configConnection() {\n        if (this.isDisposed()) {\n            return Promise.resolve(undefined);\n        }\n        if (this.privConnectionConfigPromise !== undefined) {\n            return this.privConnectionConfigPromise.then((connection) => {\n                if (connection.state() === Exports_js_1.ConnectionState.Disconnected) {\n                    this.privConnectionId = null;\n                    this.privConnectionConfigPromise = undefined;\n                    return this.configConnection();\n                }\n                return this.privConnectionConfigPromise;\n            }, () => {\n                this.privConnectionId = null;\n                this.privConnectionConfigPromise = undefined;\n                return this.configConnection();\n            });\n        }\n        if (this.terminateMessageLoop) {\n            return Promise.resolve(undefined);\n        }\n        this.privConnectionConfigPromise = this.connectImpl().then((connection) => connection);\n        return this.privConnectionConfigPromise;\n    }\n    getTranslations(serviceResultTranslations) {\n        let translations;\n        if (undefined !== serviceResultTranslations) {\n            translations = new Exports_js_2.Translations();\n            for (const translation of serviceResultTranslations) {\n                translations.set(translation.lang, translation.translation);\n            }\n        }\n        return translations;\n    }\n}\nexports.ConversationServiceAdapter = ConversationServiceAdapter;\n\n//# sourceMappingURL=ConversationServiceAdapter.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranslatorRecognizer = exports.ConversationRecognizerFactory = void 0;\n// eslint-disable-next-line max-classes-per-file\nconst Exports_js_1 = require(\"../../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../../common/Exports.js\");\nconst Contracts_js_1 = require(\"../../sdk/Contracts.js\");\nconst Exports_js_3 = require(\"../../sdk/Exports.js\");\nconst ConversationConnectionFactory_js_1 = require(\"./ConversationConnectionFactory.js\");\nconst ConversationServiceAdapter_js_1 = require(\"./ConversationServiceAdapter.js\");\nclass ConversationRecognizerFactory {\n    static fromConfig(conversation, speechConfig, audioConfig) {\n        return new ConversationTranslatorRecognizer(conversation, speechConfig, audioConfig);\n    }\n}\nexports.ConversationRecognizerFactory = ConversationRecognizerFactory;\n/**\n * Sends messages to the Conversation Translator websocket and listens for incoming events containing websocket messages.\n * Based off the recognizers in the SDK folder.\n */\nclass ConversationTranslatorRecognizer extends Exports_js_3.Recognizer {\n    constructor(conversation, speechConfig, audioConfig) {\n        const serviceConfigImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(serviceConfigImpl, \"speechConfig\");\n        const conversationImpl = conversation;\n        Contracts_js_1.Contracts.throwIfNull(conversationImpl, \"conversationImpl\");\n        super(audioConfig, serviceConfigImpl.properties, new ConversationConnectionFactory_js_1.ConversationConnectionFactory());\n        this.privConversation = conversationImpl;\n        this.privIsDisposed = false;\n        this.privProperties = serviceConfigImpl.properties.clone();\n        this.privConnection = Exports_js_3.Connection.fromRecognizer(this);\n        const webWorkerLoadType = this.privProperties.getProperty(Exports_js_3.PropertyId.WebWorkerLoadType, \"on\").toLowerCase();\n        if (webWorkerLoadType === \"on\" && typeof (Blob) !== \"undefined\" && typeof (Worker) !== \"undefined\") {\n            this.privSetTimeout = Exports_js_2.Timeout.setTimeout;\n            this.privClearTimeout = Exports_js_2.Timeout.clearTimeout;\n        }\n        else {\n            if (typeof window !== \"undefined\") {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                this.privSetTimeout = window.setTimeout.bind(window);\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                this.privClearTimeout = window.clearTimeout.bind(window);\n            }\n            else {\n                this.privSetTimeout = setTimeout;\n                this.privClearTimeout = clearTimeout;\n            }\n        }\n    }\n    set connected(cb) {\n        this.privConnection.connected = cb;\n    }\n    set disconnected(cb) {\n        this.privConnection.disconnected = cb;\n    }\n    /**\n     * Return the speech language used by the recognizer\n     */\n    get speechRecognitionLanguage() {\n        return this.privSpeechRecognitionLanguage;\n    }\n    /**\n     * Return the properties for the recognizer\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    /**\n     * Connect to the recognizer\n     * @param token\n     */\n    connect(token, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n            this.privReco.conversationTranslatorToken = token;\n            this.resetConversationTimeout();\n            this.privReco.connectAsync(cb, err);\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n        }\n    }\n    /**\n     * Disconnect from the recognizer\n     */\n    disconnect(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            if (this.privTimeoutToken !== undefined) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                this.privClearTimeout(this.privTimeoutToken);\n            }\n            this.privReco.disconnect().then(() => {\n                if (!!cb) {\n                    cb();\n                }\n            }, (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n            // Destroy the recognizer.\n            this.dispose(true).catch((reason) => {\n                Exports_js_2.Events.instance.onEvent(new Exports_js_2.BackgroundEvent(reason));\n            });\n        }\n    }\n    /**\n     * Send the mute all participants command to the websocket\n     * @param conversationId\n     * @param participantId\n     * @param isMuted\n     */\n    sendRequest(command, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            this.sendMessage(command, cb, err);\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n            // Destroy the recognizer.\n            this.dispose(true).catch((reason) => {\n                Exports_js_2.Events.instance.onEvent(new Exports_js_2.BackgroundEvent(reason));\n            });\n        }\n    }\n    /**\n     * Handle update of service auth token (#694)\n     */\n    onToken(token) {\n        this.privConversation.onToken(token);\n    }\n    /**\n     * Close and dispose the recognizer\n     */\n    async close() {\n        if (!this.privIsDisposed) {\n            if (!!this.privConnection) {\n                this.privConnection.closeConnection();\n                this.privConnection.close();\n            }\n            this.privConnection = undefined;\n            await this.dispose(true);\n        }\n    }\n    /**\n     * Dispose the recognizer\n     * @param disposing\n     */\n    async dispose(disposing) {\n        if (this.privIsDisposed) {\n            return;\n        }\n        if (disposing) {\n            if (this.privTimeoutToken !== undefined) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                this.privClearTimeout(this.privTimeoutToken);\n            }\n            this.privIsDisposed = true;\n            if (!!this.privConnection) {\n                this.privConnection.closeConnection();\n                this.privConnection.close();\n                this.privConnection = undefined;\n            }\n            await super.dispose(disposing);\n        }\n    }\n    /**\n     * Create the config for the recognizer\n     * @param speechConfig\n     */\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.privProperties);\n    }\n    /**\n     * Create the service recognizer.\n     * The audio source is redundnant here but is required by the implementation.\n     * @param authentication\n     * @param connectionFactory\n     * @param audioConfig\n     * @param recognizerConfig\n     */\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const audioSource = audioConfig;\n        return new ConversationServiceAdapter_js_1.ConversationServiceAdapter(authentication, connectionFactory, audioSource, recognizerConfig, this);\n    }\n    sendMessage(msg, cb, err) {\n        const withAsync = this.privReco;\n        const PromiseToEmptyCallback = (promise, cb, err) => {\n            if (promise !== undefined) {\n                promise.then(() => {\n                    try {\n                        if (!!cb) {\n                            cb();\n                        }\n                    }\n                    catch (e) {\n                        if (!!err) {\n                            err(`'Unhandled error on promise callback: ${e}'`);\n                        }\n                    }\n                }, (reason) => {\n                    try {\n                        if (!!err) {\n                            err(reason);\n                        }\n                        // eslint-disable-next-line no-empty\n                    }\n                    catch (error) { }\n                });\n            }\n            else {\n                if (!!err) {\n                    err(\"Null promise\");\n                }\n            }\n        };\n        PromiseToEmptyCallback(withAsync.sendMessageAsync(msg), cb, err);\n        this.resetConversationTimeout();\n    }\n    resetConversationTimeout() {\n        if (this.privTimeoutToken !== undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            this.privClearTimeout(this.privTimeoutToken);\n        }\n        this.privTimeoutToken = this.privSetTimeout(() => {\n            this.sendRequest(this.privConversation.getKeepAlive());\n        }, 60000);\n    }\n}\nexports.ConversationTranslatorRecognizer = ConversationTranslatorRecognizer;\n\n//# sourceMappingURL=ConversationTranslatorRecognizer.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranscriberRecognizer = void 0;\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nconst Exports_js_1 = require(\"../../common/Exports.js\");\nconst Contracts_js_1 = require(\"../../sdk/Contracts.js\");\nconst Exports_js_2 = require(\"../../sdk/Exports.js\");\nconst Exports_js_3 = require(\"../Exports.js\");\nconst PhraseDetectionContext_js_1 = require(\"../ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\nclass TranscriberRecognizer extends Exports_js_2.Recognizer {\n    /**\n     * TranscriberRecognizer constructor.\n     * @constructor\n     * @param {SpeechTranslationConfig} speechTranslationConfig - Non-audio configuration associated with the recognizer\n     * @param {AudioConfig} audioConfig - An audio configuration associated with the recognizer\n     */\n    constructor(speechTranslationConfig, audioConfig) {\n        const speechTranslationConfigImpl = speechTranslationConfig;\n        Contracts_js_1.Contracts.throwIfNull(speechTranslationConfigImpl, \"speechTranslationConfig\");\n        const audioConfigImpl = audioConfig;\n        Contracts_js_1.Contracts.throwIfNull(audioConfigImpl, \"audioConfigImpl\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(speechTranslationConfigImpl.speechRecognitionLanguage, Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        super(audioConfig, speechTranslationConfigImpl.properties, new Exports_js_3.TranscriberConnectionFactory());\n        this.privDisposedRecognizer = false;\n        this.isMeetingRecognizer = false;\n    }\n    get speechRecognitionLanguage() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        return this.properties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    set conversation(c) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(c, \"Conversation\");\n        this.isMeetingRecognizer = false;\n        this.privConversation = c;\n    }\n    getConversationInfo() {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversation, \"Conversation\");\n        return this.privConversation.conversationInfo;\n    }\n    set meeting(m) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(m, \"Meeting\");\n        this.isMeetingRecognizer = true;\n        this.privMeeting = m;\n    }\n    getMeetingInfo() {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privMeeting, \"Meeting\");\n        return this.privMeeting.meetingInfo;\n    }\n    IsMeetingRecognizer() {\n        return this.isMeetingRecognizer;\n    }\n    startContinuousRecognitionAsync(cb, err) {\n        (0, Exports_js_1.marshalPromiseToCallbacks)(this.startContinuousRecognitionAsyncImpl(PhraseDetectionContext_js_1.RecognitionMode.Conversation), cb, err);\n    }\n    stopContinuousRecognitionAsync(cb, err) {\n        (0, Exports_js_1.marshalPromiseToCallbacks)(this.stopContinuousRecognitionAsyncImpl(), cb, err);\n    }\n    async close() {\n        if (!this.privDisposedRecognizer) {\n            await this.dispose(true);\n        }\n    }\n    // Push async join/leave conversation message via serviceRecognizer\n    async pushConversationEvent(conversationInfo, command) {\n        const reco = (this.privReco);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(reco, \"serviceRecognizer\");\n        await reco.sendSpeechEventAsync(conversationInfo, command);\n    }\n    // Push async join/leave meeting message via serviceRecognizer\n    async pushMeetingEvent(meetingInfo, command) {\n        const reco = (this.privReco);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(reco, \"serviceRecognizer\");\n        await reco.sendMeetingSpeechEventAsync(meetingInfo, command);\n    }\n    async enforceAudioGating() {\n        const audioConfigImpl = this.audioConfig;\n        const format = await audioConfigImpl.format;\n        const channels = format.channels;\n        if (channels === 1) {\n            if (this.properties.getProperty(\"f0f5debc-f8c9-4892-ac4b-90a7ab359fd2\", \"false\").toLowerCase() !== \"true\") {\n                throw new Error(\"Single channel audio configuration for MeetingTranscriber is currently under private preview, please contact diarizationrequest@microsoft.com for more details\");\n            }\n        }\n        else if (channels !== 8) {\n            throw new Error(`Unsupported audio configuration: Detected ${channels}-channel audio`);\n        }\n        return;\n    }\n    connectMeetingCallbacks(transcriber) {\n        this.isMeetingRecognizer = true;\n        this.canceled = (s, e) => {\n            if (!!transcriber.canceled) {\n                transcriber.canceled(transcriber, e);\n            }\n        };\n        this.recognizing = (s, e) => {\n            if (!!transcriber.transcribing) {\n                transcriber.transcribing(transcriber, e);\n            }\n        };\n        this.recognized = (s, e) => {\n            if (!!transcriber.transcribed) {\n                transcriber.transcribed(transcriber, e);\n            }\n        };\n        this.sessionStarted = (s, e) => {\n            if (!!transcriber.sessionStarted) {\n                transcriber.sessionStarted(transcriber, e);\n            }\n        };\n        this.sessionStopped = (s, e) => {\n            if (!!transcriber.sessionStopped) {\n                transcriber.sessionStopped(transcriber, e);\n            }\n        };\n    }\n    disconnectCallbacks() {\n        this.canceled = undefined;\n        this.recognizing = undefined;\n        this.recognized = undefined;\n        this.sessionStarted = undefined;\n        this.sessionStopped = undefined;\n    }\n    /**\n     * Disposes any resources held by the object.\n     * @member ConversationTranscriber.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - true if disposing the object.\n     */\n    async dispose(disposing) {\n        if (this.privDisposedRecognizer) {\n            return;\n        }\n        if (disposing) {\n            this.privDisposedRecognizer = true;\n            await this.implRecognizerStop();\n        }\n        await super.dispose(disposing);\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_3.RecognizerConfig(speechConfig, this.properties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const configImpl = audioConfig;\n        return new Exports_js_3.TranscriptionServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\n    }\n}\nexports.TranscriberRecognizer = TranscriberRecognizer;\n\n//# sourceMappingURL=TranscriberRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalParticipants = exports.ConversationTranslatorMessageTypes = exports.ConversationTranslatorCommandTypes = exports.ParticipantsListEventArgs = exports.ParticipantEventArgs = exports.ParticipantAttributeEventArgs = exports.MuteAllEventArgs = exports.LockRoomEventArgs = exports.ConversationReceivedTranslationEventArgs = exports.TranscriberRecognizer = exports.ConversationRecognizerFactory = exports.ConversationConnectionConfig = exports.ConversationManager = void 0;\nvar ConversationManager_js_1 = require(\"./ConversationManager.js\");\nObject.defineProperty(exports, \"ConversationManager\", { enumerable: true, get: function () { return ConversationManager_js_1.ConversationManager; } });\nvar ConversationConnectionConfig_js_1 = require(\"./ConversationConnectionConfig.js\");\nObject.defineProperty(exports, \"ConversationConnectionConfig\", { enumerable: true, get: function () { return ConversationConnectionConfig_js_1.ConversationConnectionConfig; } });\nvar ConversationTranslatorRecognizer_js_1 = require(\"./ConversationTranslatorRecognizer.js\");\nObject.defineProperty(exports, \"ConversationRecognizerFactory\", { enumerable: true, get: function () { return ConversationTranslatorRecognizer_js_1.ConversationRecognizerFactory; } });\nvar TranscriberRecognizer_js_1 = require(\"./TranscriberRecognizer.js\");\nObject.defineProperty(exports, \"TranscriberRecognizer\", { enumerable: true, get: function () { return TranscriberRecognizer_js_1.TranscriberRecognizer; } });\nvar ConversationTranslatorEventArgs_js_1 = require(\"./ConversationTranslatorEventArgs.js\");\nObject.defineProperty(exports, \"ConversationReceivedTranslationEventArgs\", { enumerable: true, get: function () { return ConversationTranslatorEventArgs_js_1.ConversationReceivedTranslationEventArgs; } });\nObject.defineProperty(exports, \"LockRoomEventArgs\", { enumerable: true, get: function () { return ConversationTranslatorEventArgs_js_1.LockRoomEventArgs; } });\nObject.defineProperty(exports, \"MuteAllEventArgs\", { enumerable: true, get: function () { return ConversationTranslatorEventArgs_js_1.MuteAllEventArgs; } });\nObject.defineProperty(exports, \"ParticipantAttributeEventArgs\", { enumerable: true, get: function () { return ConversationTranslatorEventArgs_js_1.ParticipantAttributeEventArgs; } });\nObject.defineProperty(exports, \"ParticipantEventArgs\", { enumerable: true, get: function () { return ConversationTranslatorEventArgs_js_1.ParticipantEventArgs; } });\nObject.defineProperty(exports, \"ParticipantsListEventArgs\", { enumerable: true, get: function () { return ConversationTranslatorEventArgs_js_1.ParticipantsListEventArgs; } });\nvar ConversationTranslatorInterfaces_js_1 = require(\"./ConversationTranslatorInterfaces.js\");\nObject.defineProperty(exports, \"ConversationTranslatorCommandTypes\", { enumerable: true, get: function () { return ConversationTranslatorInterfaces_js_1.ConversationTranslatorCommandTypes; } });\nObject.defineProperty(exports, \"ConversationTranslatorMessageTypes\", { enumerable: true, get: function () { return ConversationTranslatorInterfaces_js_1.ConversationTranslatorMessageTypes; } });\nObject.defineProperty(exports, \"InternalParticipants\", { enumerable: true, get: function () { return ConversationTranslatorInterfaces_js_1.InternalParticipants; } });\n\n//# sourceMappingURL=Exports.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SynthesisAudioMetadata = exports.MetadataType = void 0;\nvar MetadataType;\n(function (MetadataType) {\n    MetadataType[\"WordBoundary\"] = \"WordBoundary\";\n    MetadataType[\"Bookmark\"] = \"Bookmark\";\n    MetadataType[\"Viseme\"] = \"Viseme\";\n    MetadataType[\"SentenceBoundary\"] = \"SentenceBoundary\";\n    MetadataType[\"SessionEnd\"] = \"SessionEnd\";\n    MetadataType[\"AvatarSignal\"] = \"TalkingAvatarSignal\";\n})(MetadataType = exports.MetadataType || (exports.MetadataType = {}));\nclass SynthesisAudioMetadata {\n    constructor(json) {\n        this.privSynthesisAudioMetadata = JSON.parse(json);\n    }\n    static fromJSON(json) {\n        return new SynthesisAudioMetadata(json);\n    }\n    get Metadata() {\n        return this.privSynthesisAudioMetadata.Metadata;\n    }\n}\nexports.SynthesisAudioMetadata = SynthesisAudioMetadata;\n\n//# sourceMappingURL=SynthesisAudioMetadata.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SynthesisStartedEvent = exports.ConnectingToSynthesisServiceEvent = exports.SynthesisTriggeredEvent = exports.SpeechSynthesisEvent = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../common/Exports.js\");\nclass SpeechSynthesisEvent extends Exports_js_1.PlatformEvent {\n    constructor(eventName, requestId, eventType = Exports_js_1.EventType.Info) {\n        super(eventName, eventType);\n        this.privRequestId = requestId;\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n}\nexports.SpeechSynthesisEvent = SpeechSynthesisEvent;\nclass SynthesisTriggeredEvent extends SpeechSynthesisEvent {\n    constructor(requestId, sessionAudioDestinationId, turnAudioDestinationId) {\n        super(\"SynthesisTriggeredEvent\", requestId);\n        this.privSessionAudioDestinationId = sessionAudioDestinationId;\n        this.privTurnAudioDestinationId = turnAudioDestinationId;\n    }\n    get audioSessionDestinationId() {\n        return this.privSessionAudioDestinationId;\n    }\n    get audioTurnDestinationId() {\n        return this.privTurnAudioDestinationId;\n    }\n}\nexports.SynthesisTriggeredEvent = SynthesisTriggeredEvent;\nclass ConnectingToSynthesisServiceEvent extends SpeechSynthesisEvent {\n    constructor(requestId, authFetchEventId) {\n        super(\"ConnectingToSynthesisServiceEvent\", requestId);\n        this.privAuthFetchEventId = authFetchEventId;\n    }\n    get authFetchEventId() {\n        return this.privAuthFetchEventId;\n    }\n}\nexports.ConnectingToSynthesisServiceEvent = ConnectingToSynthesisServiceEvent;\nclass SynthesisStartedEvent extends SpeechSynthesisEvent {\n    constructor(requestId, authFetchEventId) {\n        super(\"SynthesisStartedEvent\", requestId);\n        this.privAuthFetchEventId = authFetchEventId;\n    }\n    get authFetchEventId() {\n        return this.privAuthFetchEventId;\n    }\n}\nexports.SynthesisStartedEvent = SynthesisStartedEvent;\n\n//# sourceMappingURL=SynthesisEvents.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SynthesisTurn = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst AudioOutputStream_js_1 = require(\"../sdk/Audio/AudioOutputStream.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst SynthesisAudioMetadata_js_1 = require(\"./ServiceMessages/SynthesisAudioMetadata.js\");\nconst SynthesisEvents_js_1 = require(\"./SynthesisEvents.js\");\nclass SynthesisTurn {\n    constructor() {\n        this.privIsDisposed = false;\n        this.privIsSynthesizing = false;\n        this.privIsSynthesisEnded = false;\n        this.privBytesReceived = 0;\n        this.privInTurn = false;\n        this.privTextOffset = 0;\n        this.privNextSearchTextIndex = 0;\n        this.privSentenceOffset = 0;\n        this.privNextSearchSentenceIndex = 0;\n        this.privRequestId = (0, Exports_js_1.createNoDashGuid)();\n        this.privTurnDeferral = new Exports_js_1.Deferred();\n        // We're not in a turn, so resolve.\n        this.privTurnDeferral.resolve();\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n    get streamId() {\n        return this.privStreamId;\n    }\n    set streamId(value) {\n        this.privStreamId = value;\n    }\n    get audioOutputFormat() {\n        return this.privAudioOutputFormat;\n    }\n    set audioOutputFormat(format) {\n        this.privAudioOutputFormat = format;\n    }\n    get turnCompletionPromise() {\n        return this.privTurnDeferral.promise;\n    }\n    get isSynthesisEnded() {\n        return this.privIsSynthesisEnded;\n    }\n    get isSynthesizing() {\n        return this.privIsSynthesizing;\n    }\n    get currentTextOffset() {\n        return this.privTextOffset;\n    }\n    get currentSentenceOffset() {\n        return this.privSentenceOffset;\n    }\n    // The number of bytes received for current turn\n    get bytesReceived() {\n        return this.privBytesReceived;\n    }\n    get audioDuration() {\n        return this.privAudioDuration;\n    }\n    get extraProperties() {\n        if (!!this.privWebRTCSDP) {\n            const properties = new Exports_js_2.PropertyCollection();\n            properties.setProperty(Exports_js_2.PropertyId.TalkingAvatarService_WebRTC_SDP, this.privWebRTCSDP);\n            return properties;\n        }\n        return undefined;\n    }\n    async getAllReceivedAudio() {\n        if (!!this.privReceivedAudio) {\n            return Promise.resolve(this.privReceivedAudio);\n        }\n        if (!this.privIsSynthesisEnded) {\n            return null;\n        }\n        await this.readAllAudioFromStream();\n        return Promise.resolve(this.privReceivedAudio);\n    }\n    async getAllReceivedAudioWithHeader() {\n        if (!!this.privReceivedAudioWithHeader) {\n            return this.privReceivedAudioWithHeader;\n        }\n        if (!this.privIsSynthesisEnded) {\n            return null;\n        }\n        if (this.audioOutputFormat.hasHeader) {\n            const audio = await this.getAllReceivedAudio();\n            this.privReceivedAudioWithHeader = this.audioOutputFormat.addHeader(audio);\n            return this.privReceivedAudioWithHeader;\n        }\n        else {\n            return this.getAllReceivedAudio();\n        }\n    }\n    startNewSynthesis(requestId, rawText, isSSML, audioDestination) {\n        this.privIsSynthesisEnded = false;\n        this.privIsSynthesizing = true;\n        this.privRequestId = requestId;\n        this.privRawText = rawText;\n        this.privIsSSML = isSSML;\n        this.privAudioOutputStream = new AudioOutputStream_js_1.PullAudioOutputStreamImpl();\n        this.privAudioOutputStream.format = this.privAudioOutputFormat;\n        this.privReceivedAudio = null;\n        this.privReceivedAudioWithHeader = null;\n        this.privBytesReceived = 0;\n        this.privTextOffset = 0;\n        this.privNextSearchTextIndex = 0;\n        this.privSentenceOffset = 0;\n        this.privNextSearchSentenceIndex = 0;\n        this.privPartialVisemeAnimation = \"\";\n        this.privWebRTCSDP = \"\";\n        if (audioDestination !== undefined) {\n            this.privTurnAudioDestination = audioDestination;\n            this.privTurnAudioDestination.format = this.privAudioOutputFormat;\n        }\n        this.onEvent(new SynthesisEvents_js_1.SynthesisTriggeredEvent(this.requestId, undefined, audioDestination === undefined ? undefined : audioDestination.id()));\n    }\n    onPreConnectionStart(authFetchEventId) {\n        this.privAuthFetchEventId = authFetchEventId;\n        this.onEvent(new SynthesisEvents_js_1.ConnectingToSynthesisServiceEvent(this.privRequestId, this.privAuthFetchEventId));\n    }\n    onAuthCompleted(isError) {\n        if (isError) {\n            this.onComplete();\n        }\n    }\n    onConnectionEstablishCompleted(statusCode) {\n        if (statusCode === 200) {\n            this.onEvent(new SynthesisEvents_js_1.SynthesisStartedEvent(this.requestId, this.privAuthFetchEventId));\n            this.privBytesReceived = 0;\n            return;\n        }\n        else if (statusCode === 403) {\n            this.onComplete();\n        }\n    }\n    onServiceResponseMessage(responseJson) {\n        const response = JSON.parse(responseJson);\n        this.streamId = response.audio.streamId;\n    }\n    onServiceTurnEndResponse() {\n        this.privInTurn = false;\n        this.privTurnDeferral.resolve();\n        this.onComplete();\n    }\n    onServiceTurnStartResponse(responseJson) {\n        if (!!this.privTurnDeferral && !!this.privInTurn) {\n            // What? How are we starting a turn with another not done?\n            this.privTurnDeferral.reject(\"Another turn started before current completed.\");\n            // Avoid UnhandledPromiseRejection if privTurnDeferral is not being awaited\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            this.privTurnDeferral.promise.then().catch(() => { });\n        }\n        this.privInTurn = true;\n        this.privTurnDeferral = new Exports_js_1.Deferred();\n        const response = JSON.parse(responseJson);\n        if (!!response.webrtc) {\n            this.privWebRTCSDP = response.webrtc.connectionString;\n        }\n    }\n    onAudioChunkReceived(data) {\n        if (this.isSynthesizing) {\n            this.privAudioOutputStream.write(data);\n            this.privBytesReceived += data.byteLength;\n            if (this.privTurnAudioDestination !== undefined) {\n                this.privTurnAudioDestination.write(data);\n            }\n        }\n    }\n    onTextBoundaryEvent(metadata) {\n        this.updateTextOffset(metadata.Data.text.Text, metadata.Type);\n    }\n    onVisemeMetadataReceived(metadata) {\n        if (metadata.Data.AnimationChunk !== undefined) {\n            this.privPartialVisemeAnimation += metadata.Data.AnimationChunk;\n        }\n    }\n    onSessionEnd(metadata) {\n        this.privAudioDuration = metadata.Data.Offset;\n    }\n    async constructSynthesisResult() {\n        const audioBuffer = await this.getAllReceivedAudioWithHeader();\n        return new Exports_js_2.SpeechSynthesisResult(this.requestId, Exports_js_2.ResultReason.SynthesizingAudioCompleted, audioBuffer, undefined, this.extraProperties, this.audioDuration);\n    }\n    dispose() {\n        if (!this.privIsDisposed) {\n            // we should have completed by now. If we did not its an unknown error.\n            this.privIsDisposed = true;\n        }\n    }\n    onStopSynthesizing() {\n        this.onComplete();\n    }\n    /**\n     * Gets the viseme animation string (merged from animation chunk), and clears the internal\n     * partial animation.\n     */\n    getAndClearVisemeAnimation() {\n        const animation = this.privPartialVisemeAnimation;\n        this.privPartialVisemeAnimation = \"\";\n        return animation;\n    }\n    onEvent(event) {\n        Exports_js_1.Events.instance.onEvent(event);\n    }\n    /**\n     * Check if the text is an XML(SSML) tag\n     * @param text\n     * @private\n     */\n    static isXmlTag(text) {\n        return text.length >= 2 && text[0] === \"<\" && text[text.length - 1] === \">\";\n    }\n    updateTextOffset(text, type) {\n        if (type === SynthesisAudioMetadata_js_1.MetadataType.WordBoundary) {\n            this.privTextOffset = this.privRawText.indexOf(text, this.privNextSearchTextIndex);\n            if (this.privTextOffset >= 0) {\n                this.privNextSearchTextIndex = this.privTextOffset + text.length;\n                if (this.privIsSSML) {\n                    if (this.withinXmlTag(this.privTextOffset) && !SynthesisTurn.isXmlTag(text)) {\n                        this.updateTextOffset(text, type);\n                    }\n                }\n            }\n        }\n        else {\n            this.privSentenceOffset = this.privRawText.indexOf(text, this.privNextSearchSentenceIndex);\n            if (this.privSentenceOffset >= 0) {\n                this.privNextSearchSentenceIndex = this.privSentenceOffset + text.length;\n                if (this.privIsSSML) {\n                    if (this.withinXmlTag(this.privSentenceOffset) && !SynthesisTurn.isXmlTag(text)) {\n                        this.updateTextOffset(text, type);\n                    }\n                }\n            }\n        }\n    }\n    onComplete() {\n        if (this.privIsSynthesizing) {\n            this.privIsSynthesizing = false;\n            this.privIsSynthesisEnded = true;\n            this.privAudioOutputStream.close();\n            this.privInTurn = false;\n            if (this.privTurnAudioDestination !== undefined) {\n                this.privTurnAudioDestination.close();\n                this.privTurnAudioDestination = undefined;\n            }\n        }\n    }\n    async readAllAudioFromStream() {\n        if (this.privIsSynthesisEnded) {\n            this.privReceivedAudio = new ArrayBuffer(this.bytesReceived);\n            try {\n                await this.privAudioOutputStream.read(this.privReceivedAudio);\n            }\n            catch (e) {\n                this.privReceivedAudio = new ArrayBuffer(0);\n            }\n        }\n    }\n    /**\n     * Check if current idx is in XML(SSML) tag\n     * @param idx\n     * @private\n     */\n    withinXmlTag(idx) {\n        return this.privRawText.indexOf(\"<\", idx + 1) > this.privRawText.indexOf(\">\", idx + 1);\n    }\n}\nexports.SynthesisTurn = SynthesisTurn;\n\n//# sourceMappingURL=SynthesisTurn.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SynthesisAdapterBase = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\nconst SpeechConnectionMessage_Internal_js_1 = require(\"./SpeechConnectionMessage.Internal.js\");\nclass SynthesisAdapterBase {\n    constructor(authentication, connectionFactory, synthesizerConfig, audioDestination) {\n        this.speakOverride = undefined;\n        this.receiveMessageOverride = undefined;\n        this.connectImplOverride = undefined;\n        this.configConnectionOverride = undefined;\n        // A promise for a configured connection.\n        // Do not consume directly, call fetchConnection instead.\n        this.privConnectionConfigurationPromise = undefined;\n        if (!authentication) {\n            throw new Exports_js_1.ArgumentNullError(\"authentication\");\n        }\n        if (!connectionFactory) {\n            throw new Exports_js_1.ArgumentNullError(\"connectionFactory\");\n        }\n        if (!synthesizerConfig) {\n            throw new Exports_js_1.ArgumentNullError(\"synthesizerConfig\");\n        }\n        this.privAuthentication = authentication;\n        this.privConnectionFactory = connectionFactory;\n        this.privSynthesizerConfig = synthesizerConfig;\n        this.privIsDisposed = false;\n        this.privSessionAudioDestination = audioDestination;\n        this.privSynthesisTurn = new Exports_js_3.SynthesisTurn();\n        this.privConnectionEvents = new Exports_js_1.EventSource();\n        this.privServiceEvents = new Exports_js_1.EventSource();\n        this.privSynthesisContext = new Exports_js_3.SynthesisContext();\n        this.privAgentConfig = new Exports_js_3.AgentConfig();\n        this.connectionEvents.attach((connectionEvent) => {\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\n                const connectionClosedEvent = connectionEvent;\n                if (connectionClosedEvent.statusCode !== 1000) {\n                    this.cancelSynthesisLocal(Exports_js_2.CancellationReason.Error, connectionClosedEvent.statusCode === 1007 ? Exports_js_2.CancellationErrorCode.BadRequestParameters : Exports_js_2.CancellationErrorCode.ConnectionFailure, `${connectionClosedEvent.reason} websocket error code: ${connectionClosedEvent.statusCode}`);\n                }\n            }\n        });\n    }\n    get synthesisContext() {\n        return this.privSynthesisContext;\n    }\n    get agentConfig() {\n        return this.privAgentConfig;\n    }\n    get connectionEvents() {\n        return this.privConnectionEvents;\n    }\n    get serviceEvents() {\n        return this.privServiceEvents;\n    }\n    set activityTemplate(messagePayload) {\n        this.privActivityTemplate = messagePayload;\n    }\n    get activityTemplate() {\n        return this.privActivityTemplate;\n    }\n    set audioOutputFormat(format) {\n        this.privAudioOutputFormat = format;\n        this.privSynthesisTurn.audioOutputFormat = format;\n        if (this.privSessionAudioDestination !== undefined) {\n            this.privSessionAudioDestination.format = format;\n        }\n        if (this.synthesisContext !== undefined) {\n            this.synthesisContext.audioOutputFormat = format;\n        }\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    async dispose(reason) {\n        this.privIsDisposed = true;\n        if (this.privSessionAudioDestination !== undefined) {\n            this.privSessionAudioDestination.close();\n        }\n        if (this.privConnectionConfigurationPromise !== undefined) {\n            const connection = await this.privConnectionConfigurationPromise;\n            await connection.dispose(reason);\n        }\n    }\n    async connect() {\n        await this.connectImpl();\n    }\n    async sendNetworkMessage(path, payload) {\n        const type = typeof payload === \"string\" ? Exports_js_1.MessageType.Text : Exports_js_1.MessageType.Binary;\n        const contentType = typeof payload === \"string\" ? \"application/json\" : \"\";\n        const connection = await this.fetchConnection();\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(type, path, this.privSynthesisTurn.requestId, contentType, payload));\n    }\n    async Speak(text, isSSML, requestId, successCallback, errorCallBack, audioDestination) {\n        let ssml;\n        if (isSSML) {\n            ssml = text;\n        }\n        else {\n            ssml = this.privSynthesizer.buildSsml(text);\n        }\n        if (this.speakOverride !== undefined) {\n            return this.speakOverride(ssml, requestId, successCallback, errorCallBack);\n        }\n        this.privSuccessCallback = successCallback;\n        this.privErrorCallback = errorCallBack;\n        this.privSynthesisTurn.startNewSynthesis(requestId, text, isSSML, audioDestination);\n        try {\n            await this.connectImpl();\n            const connection = await this.fetchConnection();\n            await this.sendSynthesisContext(connection);\n            await this.sendSsmlMessage(connection, ssml, requestId);\n            this.onSynthesisStarted(requestId);\n            void this.receiveMessage();\n        }\n        catch (e) {\n            this.cancelSynthesisLocal(Exports_js_2.CancellationReason.Error, Exports_js_2.CancellationErrorCode.ConnectionFailure, e);\n            return Promise.reject(e);\n        }\n    }\n    async stopSpeaking() {\n        await this.connectImpl();\n        const connection = await this.fetchConnection();\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_1.MessageType.Text, \"synthesis.control\", this.privSynthesisTurn.requestId, \"application/json\", JSON.stringify({\n            action: \"stop\"\n        })));\n    }\n    // Cancels synthesis.\n    cancelSynthesis(requestId, _cancellationReason, errorCode, error) {\n        const properties = new Exports_js_2.PropertyCollection();\n        properties.setProperty(Exports_js_3.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[errorCode]);\n        const result = new Exports_js_2.SpeechSynthesisResult(requestId, Exports_js_2.ResultReason.Canceled, undefined, error, properties);\n        this.onSynthesisCancelled(result);\n        if (!!this.privSuccessCallback) {\n            try {\n                this.privSuccessCallback(result);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n    }\n    // Cancels synthesis.\n    cancelSynthesisLocal(cancellationReason, errorCode, error) {\n        if (!!this.privSynthesisTurn.isSynthesizing) {\n            this.privSynthesisTurn.onStopSynthesizing();\n            this.cancelSynthesis(this.privSynthesisTurn.requestId, cancellationReason, errorCode, error);\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    processTypeSpecificMessages(_connectionMessage) {\n        return true;\n    }\n    async receiveMessage() {\n        try {\n            const connection = await this.fetchConnection();\n            const message = await connection.read();\n            if (this.receiveMessageOverride !== undefined) {\n                return this.receiveMessageOverride();\n            }\n            if (this.privIsDisposed) {\n                // We're done.\n                return;\n            }\n            // indicates we are draining the queue and it came with no message;\n            if (!message) {\n                if (!this.privSynthesisTurn.isSynthesizing) {\n                    return;\n                }\n                else {\n                    return this.receiveMessage();\n                }\n            }\n            const connectionMessage = SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage.fromConnectionMessage(message);\n            if (connectionMessage.requestId.toLowerCase() === this.privSynthesisTurn.requestId.toLowerCase()) {\n                switch (connectionMessage.path.toLowerCase()) {\n                    case \"turn.start\":\n                        this.privSynthesisTurn.onServiceTurnStartResponse(connectionMessage.textBody);\n                        break;\n                    case \"response\":\n                        this.privSynthesisTurn.onServiceResponseMessage(connectionMessage.textBody);\n                        break;\n                    case \"audio\":\n                        if (this.privSynthesisTurn.streamId.toLowerCase() === connectionMessage.streamId.toLowerCase()\n                            && !!connectionMessage.binaryBody) {\n                            this.privSynthesisTurn.onAudioChunkReceived(connectionMessage.binaryBody);\n                            this.onSynthesizing(connectionMessage.binaryBody);\n                            if (this.privSessionAudioDestination !== undefined) {\n                                this.privSessionAudioDestination.write(connectionMessage.binaryBody);\n                            }\n                        }\n                        break;\n                    case \"audio.metadata\":\n                        const metadataList = Exports_js_3.SynthesisAudioMetadata.fromJSON(connectionMessage.textBody).Metadata;\n                        for (const metadata of metadataList) {\n                            switch (metadata.Type) {\n                                case Exports_js_3.MetadataType.WordBoundary:\n                                case Exports_js_3.MetadataType.SentenceBoundary:\n                                    this.privSynthesisTurn.onTextBoundaryEvent(metadata);\n                                    const wordBoundaryEventArgs = new Exports_js_2.SpeechSynthesisWordBoundaryEventArgs(metadata.Data.Offset, metadata.Data.Duration, metadata.Data.text.Text, metadata.Data.text.Length, metadata.Type === Exports_js_3.MetadataType.WordBoundary\n                                        ? this.privSynthesisTurn.currentTextOffset : this.privSynthesisTurn.currentSentenceOffset, metadata.Data.text.BoundaryType);\n                                    this.onWordBoundary(wordBoundaryEventArgs);\n                                    break;\n                                case Exports_js_3.MetadataType.Bookmark:\n                                    const bookmarkEventArgs = new Exports_js_2.SpeechSynthesisBookmarkEventArgs(metadata.Data.Offset, metadata.Data.Bookmark);\n                                    this.onBookmarkReached(bookmarkEventArgs);\n                                    break;\n                                case Exports_js_3.MetadataType.Viseme:\n                                    this.privSynthesisTurn.onVisemeMetadataReceived(metadata);\n                                    if (metadata.Data.IsLastAnimation) {\n                                        const visemeEventArgs = new Exports_js_2.SpeechSynthesisVisemeEventArgs(metadata.Data.Offset, metadata.Data.VisemeId, this.privSynthesisTurn.getAndClearVisemeAnimation());\n                                        this.onVisemeReceived(visemeEventArgs);\n                                    }\n                                    break;\n                                case Exports_js_3.MetadataType.AvatarSignal:\n                                    this.onAvatarEvent(metadata);\n                                    break;\n                                case Exports_js_3.MetadataType.SessionEnd:\n                                    this.privSynthesisTurn.onSessionEnd(metadata);\n                                    break;\n                            }\n                        }\n                        break;\n                    case \"turn.end\":\n                        this.privSynthesisTurn.onServiceTurnEndResponse();\n                        let result;\n                        try {\n                            result = await this.privSynthesisTurn.constructSynthesisResult();\n                            if (!!this.privSuccessCallback) {\n                                this.privSuccessCallback(result);\n                            }\n                        }\n                        catch (error) {\n                            if (!!this.privErrorCallback) {\n                                this.privErrorCallback(error);\n                            }\n                        }\n                        this.onSynthesisCompleted(result);\n                        break;\n                    default:\n                        if (!this.processTypeSpecificMessages(connectionMessage)) {\n                            // here are some messages that the derived class has not processed, dispatch them to connect class\n                            if (!!this.privServiceEvents) {\n                                this.serviceEvents.onEvent(new Exports_js_1.ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\n                            }\n                        }\n                }\n            }\n            return this.receiveMessage();\n        }\n        catch (e) {\n            // TODO: What goes here?\n        }\n    }\n    sendSynthesisContext(connection) {\n        this.setSynthesisContextSynthesisSection();\n        const synthesisContextJson = this.synthesisContext.toJSON();\n        if (synthesisContextJson) {\n            return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_1.MessageType.Text, \"synthesis.context\", this.privSynthesisTurn.requestId, \"application/json\", synthesisContextJson));\n        }\n        return;\n    }\n    setSpeechConfigSynthesisSection() {\n        return;\n    }\n    connectImpl(isUnAuthorized = false) {\n        if (this.privConnectionPromise != null) {\n            return this.privConnectionPromise.then((connection) => {\n                if (connection.state() === Exports_js_1.ConnectionState.Disconnected) {\n                    this.privConnectionId = null;\n                    this.privConnectionPromise = null;\n                    return this.connectImpl();\n                }\n                return this.privConnectionPromise;\n            }, () => {\n                this.privConnectionId = null;\n                this.privConnectionPromise = null;\n                return this.connectImpl();\n            });\n        }\n        this.privAuthFetchEventId = (0, Exports_js_1.createNoDashGuid)();\n        this.privConnectionId = (0, Exports_js_1.createNoDashGuid)();\n        this.privSynthesisTurn.onPreConnectionStart(this.privAuthFetchEventId);\n        const authPromise = isUnAuthorized ? this.privAuthentication.fetchOnExpiry(this.privAuthFetchEventId) : this.privAuthentication.fetch(this.privAuthFetchEventId);\n        this.privConnectionPromise = authPromise.then(async (result) => {\n            this.privSynthesisTurn.onAuthCompleted(false);\n            const connection = await this.privConnectionFactory.create(this.privSynthesizerConfig, result, this.privConnectionId);\n            // Attach to the underlying event. No need to hold onto the detach pointers as in the event the connection goes away,\n            // it'll stop sending events.\n            connection.events.attach((event) => {\n                this.connectionEvents.onEvent(event);\n            });\n            const response = await connection.open();\n            if (response.statusCode === 200) {\n                this.privSynthesisTurn.onConnectionEstablishCompleted(response.statusCode);\n                return Promise.resolve(connection);\n            }\n            else if (response.statusCode === 403 && !isUnAuthorized) {\n                return this.connectImpl(true);\n            }\n            else {\n                this.privSynthesisTurn.onConnectionEstablishCompleted(response.statusCode);\n                return Promise.reject(`Unable to contact server. StatusCode: ${response.statusCode},\r\n                    ${this.privSynthesizerConfig.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Url)} Reason: ${response.reason}`);\n            }\n        }, (error) => {\n            this.privSynthesisTurn.onAuthCompleted(true);\n            throw new Error(error);\n        });\n        // Attach an empty handler to allow the promise to run in the background while\n        // other startup events happen. It'll eventually be awaited on.\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        this.privConnectionPromise.catch(() => { });\n        return this.privConnectionPromise;\n    }\n    sendSpeechServiceConfig(connection, SpeechServiceConfigJson) {\n        if (SpeechServiceConfigJson) {\n            return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_1.MessageType.Text, \"speech.config\", this.privSynthesisTurn.requestId, \"application/json\", SpeechServiceConfigJson));\n        }\n    }\n    sendSsmlMessage(connection, ssml, requestId) {\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_1.MessageType.Text, \"ssml\", requestId, \"application/ssml+xml\", ssml));\n    }\n    async fetchConnection() {\n        if (this.privConnectionConfigurationPromise !== undefined) {\n            return this.privConnectionConfigurationPromise.then((connection) => {\n                if (connection.state() === Exports_js_1.ConnectionState.Disconnected) {\n                    this.privConnectionId = null;\n                    this.privConnectionConfigurationPromise = undefined;\n                    return this.fetchConnection();\n                }\n                return this.privConnectionConfigurationPromise;\n            }, () => {\n                this.privConnectionId = null;\n                this.privConnectionConfigurationPromise = undefined;\n                return this.fetchConnection();\n            });\n        }\n        this.privConnectionConfigurationPromise = this.configureConnection();\n        return await this.privConnectionConfigurationPromise;\n    }\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\n    async configureConnection() {\n        const connection = await this.connectImpl();\n        if (this.configConnectionOverride !== undefined) {\n            return this.configConnectionOverride(connection);\n        }\n        this.setSpeechConfigSynthesisSection();\n        await this.sendSpeechServiceConfig(connection, this.privSynthesizerConfig.SpeechServiceConfig.serialize());\n        return connection;\n    }\n    onAvatarEvent(_metadata) {\n        return;\n    }\n    onSynthesisStarted(_requestId) {\n        return;\n    }\n    onSynthesizing(_audio) {\n        return;\n    }\n    onSynthesisCancelled(_result) {\n        return;\n    }\n    onSynthesisCompleted(_result) {\n        return;\n    }\n    onWordBoundary(_wordBoundaryEventArgs) {\n        return;\n    }\n    onVisemeReceived(_visemeEventArgs) {\n        return;\n    }\n    onBookmarkReached(_bookmarkEventArgs) {\n        return;\n    }\n}\nexports.SynthesisAdapterBase = SynthesisAdapterBase;\nSynthesisAdapterBase.telemetryDataEnabled = true;\n\n//# sourceMappingURL=SynthesisAdapterBase.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AvatarSynthesisAdapter = void 0;\nconst Exports_js_1 = require(\"../sdk/Exports.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\nclass AvatarSynthesisAdapter extends Exports_js_2.SynthesisAdapterBase {\n    constructor(authentication, connectionFactory, synthesizerConfig, avatarSynthesizer, avatarConfig) {\n        super(authentication, connectionFactory, synthesizerConfig, undefined);\n        this.privAvatarSynthesizer = avatarSynthesizer;\n        this.privSynthesizer = avatarSynthesizer;\n        this.privAvatarConfig = avatarConfig;\n    }\n    setSynthesisContextSynthesisSection() {\n        this.privSynthesisContext.setSynthesisSection(undefined);\n    }\n    setSpeechConfigSynthesisSection() {\n        this.privSynthesizerConfig.synthesisVideoSection = {\n            format: {\n                bitrate: this.privAvatarConfig.videoFormat?.bitrate,\n                codec: this.privAvatarConfig.videoFormat?.codec,\n                crop: {\n                    bottomRight: {\n                        x: this.privAvatarConfig.videoFormat?.cropRange?.bottomRight?.x,\n                        y: this.privAvatarConfig.videoFormat?.cropRange?.bottomRight?.y,\n                    },\n                    topLeft: {\n                        x: this.privAvatarConfig.videoFormat?.cropRange?.topLeft?.x,\n                        y: this.privAvatarConfig.videoFormat?.cropRange?.topLeft?.y,\n                    },\n                },\n                resolution: {\n                    height: this.privAvatarConfig.videoFormat?.height,\n                    width: this.privAvatarConfig.videoFormat?.width,\n                },\n            },\n            protocol: {\n                name: \"WebRTC\",\n                webrtcConfig: {\n                    clientDescription: btoa(this.privSynthesizerConfig.parameters.getProperty(Exports_js_1.PropertyId.TalkingAvatarService_WebRTC_SDP)),\n                    iceServers: this.privAvatarConfig.remoteIceServers ?? this.privAvatarSynthesizer.iceServers,\n                },\n            },\n            talkingAvatar: {\n                background: {\n                    color: this.privAvatarConfig.backgroundColor,\n                    image: {\n                        url: this.privAvatarConfig.backgroundImage?.toString(),\n                    }\n                },\n                character: this.privAvatarConfig.character,\n                customized: this.privAvatarConfig.customized,\n                style: this.privAvatarConfig.style,\n                useBuiltInVoice: this.privAvatarConfig.useBuiltInVoice,\n            }\n        };\n    }\n    onAvatarEvent(metadata) {\n        if (!!this.privAvatarSynthesizer.avatarEventReceived) {\n            const avatarEventArgs = new Exports_js_1.AvatarEventArgs(metadata.Data.Offset, metadata.Data.Name);\n            try {\n                this.privAvatarSynthesizer.avatarEventReceived(this.privAvatarSynthesizer, avatarEventArgs);\n            }\n            catch (error) {\n                // Not going to let errors in the event handler\n                // trip things up.\n            }\n        }\n    }\n}\nexports.AvatarSynthesisAdapter = AvatarSynthesisAdapter;\n\n//# sourceMappingURL=AvatarSynthesisAdapter.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechSynthesisAdapter = void 0;\nconst Exports_js_1 = require(\"../sdk/Exports.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\nclass SpeechSynthesisAdapter extends Exports_js_2.SynthesisAdapterBase {\n    constructor(authentication, connectionFactory, synthesizerConfig, speechSynthesizer, audioDestination) {\n        super(authentication, connectionFactory, synthesizerConfig, audioDestination);\n        this.privSpeechSynthesizer = speechSynthesizer;\n        this.privSynthesizer = speechSynthesizer;\n    }\n    setSynthesisContextSynthesisSection() {\n        this.privSynthesisContext.setSynthesisSection(this.privSpeechSynthesizer);\n    }\n    onSynthesisStarted(requestId) {\n        const synthesisStartEventArgs = new Exports_js_1.SpeechSynthesisEventArgs(new Exports_js_1.SpeechSynthesisResult(requestId, Exports_js_1.ResultReason.SynthesizingAudioStarted));\n        if (!!this.privSpeechSynthesizer.synthesisStarted) {\n            this.privSpeechSynthesizer.synthesisStarted(this.privSpeechSynthesizer, synthesisStartEventArgs);\n        }\n    }\n    onSynthesizing(audio) {\n        if (!!this.privSpeechSynthesizer.synthesizing) {\n            try {\n                const audioWithHeader = this.privSynthesisTurn.audioOutputFormat.addHeader(audio);\n                const ev = new Exports_js_1.SpeechSynthesisEventArgs(new Exports_js_1.SpeechSynthesisResult(this.privSynthesisTurn.requestId, Exports_js_1.ResultReason.SynthesizingAudio, audioWithHeader));\n                this.privSpeechSynthesizer.synthesizing(this.privSpeechSynthesizer, ev);\n            }\n            catch (error) {\n                // Not going to let errors in the event handler\n                // trip things up.\n            }\n        }\n    }\n    onSynthesisCancelled(result) {\n        if (!!this.privSpeechSynthesizer.SynthesisCanceled) {\n            const cancelEvent = new Exports_js_1.SpeechSynthesisEventArgs(result);\n            try {\n                this.privSpeechSynthesizer.SynthesisCanceled(this.privSpeechSynthesizer, cancelEvent);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n    }\n    onSynthesisCompleted(result) {\n        if (this.privSpeechSynthesizer.synthesisCompleted) {\n            try {\n                this.privSpeechSynthesizer.synthesisCompleted(this.privSpeechSynthesizer, new Exports_js_1.SpeechSynthesisEventArgs(result));\n            }\n            catch (e) {\n                // Not going to let errors in the event handler\n                // trip things up.\n            }\n        }\n    }\n    onWordBoundary(wordBoundaryEventArgs) {\n        if (!!this.privSpeechSynthesizer.wordBoundary) {\n            try {\n                this.privSpeechSynthesizer.wordBoundary(this.privSpeechSynthesizer, wordBoundaryEventArgs);\n            }\n            catch (error) {\n                // Not going to let errors in the event handler\n                // trip things up.\n            }\n        }\n    }\n    onVisemeReceived(visemeEventArgs) {\n        if (!!this.privSpeechSynthesizer.visemeReceived) {\n            try {\n                this.privSpeechSynthesizer.visemeReceived(this.privSpeechSynthesizer, visemeEventArgs);\n            }\n            catch (error) {\n                // Not going to let errors in the event handler\n                // trip things up.\n            }\n        }\n    }\n    onBookmarkReached(bookmarkEventArgs) {\n        if (!!this.privSpeechSynthesizer.bookmarkReached) {\n            try {\n                this.privSpeechSynthesizer.bookmarkReached(this.privSpeechSynthesizer, bookmarkEventArgs);\n            }\n            catch (error) {\n                // Not going to let errors in the event handler\n                // trip things up.\n            }\n        }\n    }\n}\nexports.SpeechSynthesisAdapter = SpeechSynthesisAdapter;\n\n//# sourceMappingURL=SpeechSynthesisAdapter.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SynthesisRestAdapter = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = require(\"./ConnectionFactoryBase.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\n/**\n * Implements methods for speaker recognition classes, sending requests to endpoint\n * and parsing response into expected format\n * @class SynthesisRestAdapter\n */\nclass SynthesisRestAdapter {\n    constructor(config, authentication) {\n        let endpoint = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint, undefined);\n        if (!endpoint) {\n            const region = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, \"westus\");\n            const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n            endpoint = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, `https://${region}.tts.speech${hostSuffix}`);\n        }\n        this.privUri = `${endpoint}/cognitiveservices/voices/list`;\n        const options = Exports_js_1.RestConfigBase.requestOptions;\n        this.privRestAdapter = new Exports_js_1.RestMessageAdapter(options);\n        this.privAuthentication = authentication;\n    }\n    /**\n     * Sends list voices request to endpoint.\n     * @function\n     * @public\n     * @param connectionId - guid for connectionId\n     * @returns {Promise<IRestResponse>} rest response to status request\n     */\n    getVoicesList(connectionId) {\n        this.privRestAdapter.setHeaders(HeaderNames_js_1.HeaderNames.ConnectionId, connectionId);\n        return this.privAuthentication.fetch(connectionId).then((authInfo) => {\n            this.privRestAdapter.setHeaders(authInfo.headerName, authInfo.token);\n            return this.privRestAdapter.request(Exports_js_1.RestRequestType.Get, this.privUri);\n        });\n    }\n}\nexports.SynthesisRestAdapter = SynthesisRestAdapter;\n\n//# sourceMappingURL=SynthesisRestAdapter.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SynthesizerConfig = exports.SynthesisServiceType = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\nvar SynthesisServiceType;\n(function (SynthesisServiceType) {\n    SynthesisServiceType[SynthesisServiceType[\"Standard\"] = 0] = \"Standard\";\n    SynthesisServiceType[SynthesisServiceType[\"Custom\"] = 1] = \"Custom\";\n})(SynthesisServiceType = exports.SynthesisServiceType || (exports.SynthesisServiceType = {}));\nclass SynthesizerConfig {\n    constructor(speechServiceConfig, parameters) {\n        this.privSynthesisServiceType = SynthesisServiceType.Standard;\n        this.avatarEnabled = false;\n        this.privSpeechServiceConfig = speechServiceConfig ? speechServiceConfig : new Exports_js_1.SpeechServiceConfig(new Exports_js_1.Context(null));\n        this.privParameters = parameters;\n    }\n    get parameters() {\n        return this.privParameters;\n    }\n    get synthesisServiceType() {\n        return this.privSynthesisServiceType;\n    }\n    set synthesisServiceType(value) {\n        this.privSynthesisServiceType = value;\n    }\n    set synthesisVideoSection(value) {\n        this.privSpeechServiceConfig.Context.synthesis = {\n            video: value\n        };\n    }\n    get SpeechServiceConfig() {\n        return this.privSpeechServiceConfig;\n    }\n}\nexports.SynthesizerConfig = SynthesizerConfig;\n\n//# sourceMappingURL=SynthesizerConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SynthesisContext = void 0;\nconst Exports_js_1 = require(\"../sdk/Exports.js\");\n/**\n * Represents the JSON used in the synthesis.context message sent to the speech service.\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\n */\nclass SynthesisContext {\n    constructor() {\n        this.privContext = {};\n    }\n    /**\n     * Adds a section to the synthesis.context object.\n     * @param sectionName Name of the section to add.\n     * @param value JSON serializable object that represents the value.\n     */\n    setSection(sectionName, value) {\n        this.privContext[sectionName] = value;\n    }\n    /**\n     * Sets the audio output format for synthesis context generation.\n     * @param format {AudioOutputFormatImpl} the output format\n     */\n    set audioOutputFormat(format) {\n        this.privAudioOutputFormat = format;\n    }\n    toJSON() {\n        return JSON.stringify(this.privContext);\n    }\n    setSynthesisSection(speechSynthesizer) {\n        const synthesisSection = this.buildSynthesisContext(speechSynthesizer);\n        this.setSection(\"synthesis\", synthesisSection);\n    }\n    buildSynthesisContext(speechSynthesizer) {\n        return {\n            audio: {\n                metadataOptions: {\n                    bookmarkEnabled: (!!speechSynthesizer?.bookmarkReached),\n                    punctuationBoundaryEnabled: speechSynthesizer?.properties.getProperty(Exports_js_1.PropertyId.SpeechServiceResponse_RequestPunctuationBoundary, (!!speechSynthesizer?.wordBoundary)),\n                    sentenceBoundaryEnabled: speechSynthesizer?.properties.getProperty(Exports_js_1.PropertyId.SpeechServiceResponse_RequestSentenceBoundary, false),\n                    sessionEndEnabled: true,\n                    visemeEnabled: (!!speechSynthesizer?.visemeReceived),\n                    wordBoundaryEnabled: speechSynthesizer?.properties.getProperty(Exports_js_1.PropertyId.SpeechServiceResponse_RequestWordBoundary, (!!speechSynthesizer?.wordBoundary)),\n                },\n                outputFormat: this.privAudioOutputFormat.requestAudioFormatString,\n            },\n            language: {\n                autoDetection: speechSynthesizer?.autoDetectSourceLanguage\n            }\n        };\n    }\n}\nexports.SynthesisContext = SynthesisContext;\n\n//# sourceMappingURL=SynthesisContext.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeakerRecognitionConfig = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\nclass SpeakerRecognitionConfig {\n    constructor(context, parameters) {\n        this.privContext = context ? context : new Exports_js_1.Context(null);\n        this.privParameters = parameters;\n    }\n    get parameters() {\n        return this.privParameters;\n    }\n    get Context() {\n        return this.privContext;\n    }\n}\nexports.SpeakerRecognitionConfig = SpeakerRecognitionConfig;\n\n//# sourceMappingURL=SpeakerRecognitionConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeakerServiceRecognizer = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst Exports_js_3 = require(\"../sdk/Exports.js\");\nconst Exports_js_4 = require(\"./Exports.js\");\nconst SpeechConnectionMessage_Internal_js_1 = require(\"./SpeechConnectionMessage.Internal.js\");\n// eslint-disable-next-line max-classes-per-file\nclass SpeakerServiceRecognizer extends Exports_js_4.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, recognizer) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, recognizer);\n        this.privSpeakerRecognizer = recognizer;\n        this.privSpeakerAudioSource = audioSource;\n        this.recognizeSpeaker = (model) => this.recognizeSpeakerOnce(model);\n        this.sendPrePayloadJSONOverride = () => this.noOp();\n    }\n    processTypeSpecificMessages(connectionMessage) {\n        let processed = false;\n        const resultProps = new Exports_js_3.PropertyCollection();\n        if (connectionMessage.messageType === Exports_js_2.MessageType.Text) {\n            resultProps.setProperty(Exports_js_3.PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n        }\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"speaker.response\":\n                const response = JSON.parse(connectionMessage.textBody);\n                let result;\n                if (response.status.statusCode.toLowerCase() !== \"success\") {\n                    result = new Exports_js_3.SpeakerRecognitionResult(response, Exports_js_3.ResultReason.Canceled, Exports_js_3.CancellationErrorCode.ServiceError, response.status.reason);\n                }\n                else {\n                    result = new Exports_js_3.SpeakerRecognitionResult(response, Exports_js_3.ResultReason.RecognizedSpeaker);\n                }\n                if (!!this.privResultDeferral) {\n                    this.privResultDeferral.resolve(result);\n                }\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        const defferal = new Exports_js_2.Deferred();\n        defferal.resolve(processed);\n        return defferal.promise;\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new Exports_js_3.PropertyCollection();\n        properties.setProperty(Exports_js_4.CancellationErrorCodePropertyName, Exports_js_3.CancellationErrorCode[errorCode]);\n        if (!!this.privResultDeferral) {\n            const result = new Exports_js_3.SpeakerRecognitionResult({\n                scenario: this.privSpeakerModel.scenario,\n                status: { statusCode: error, reason: error }\n            }, Exports_js_3.ResultReason.Canceled, errorCode, error);\n            try {\n                this.privResultDeferral.resolve(result);\n            }\n            catch (error) {\n                this.privResultDeferral.reject(error);\n            }\n        }\n    }\n    async recognizeSpeakerOnce(model) {\n        this.privSpeakerModel = model;\n        this.voiceProfileType = model.scenario;\n        if (!this.privResultDeferral) {\n            this.privResultDeferral = new Exports_js_2.Deferred();\n        }\n        this.privRequestSession.startNewRecognition();\n        this.privRequestSession.listenForServiceTelemetry(this.privSpeakerAudioSource.events);\n        this.privRecognizerConfig.parameters.setProperty(Exports_js_3.PropertyId.Speech_SessionId, this.privRequestSession.sessionId);\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\n        const conPromise = this.connectImpl();\n        const preAudioPromise = this.sendPreAudioMessages(this.extractSpeakerContext(model));\n        const node = await this.privSpeakerAudioSource.attach(this.privRequestSession.audioNodeId);\n        const format = await this.privSpeakerAudioSource.format;\n        const deviceInfo = await this.privSpeakerAudioSource.deviceInfo;\n        const audioNode = new Exports_js_1.ReplayableAudioNode(node, format.avgBytesPerSec);\n        await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\n        this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\n        try {\n            await conPromise;\n            await preAudioPromise;\n        }\n        catch (err) {\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.ConnectionFailure, err);\n        }\n        const sessionStartEventArgs = new Exports_js_3.SessionEventArgs(this.privRequestSession.sessionId);\n        if (!!this.privRecognizer.sessionStarted) {\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\n        }\n        void this.receiveMessage();\n        const audioSendPromise = this.sendAudio(audioNode);\n        // /* eslint-disable no-empty */\n        audioSendPromise.then(() => { }, (error) => {\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.RuntimeError, error);\n        });\n        return this.privResultDeferral.promise;\n    }\n    async sendPreAudioMessages(context) {\n        const connection = await this.fetchConnection();\n        await this.sendSpeakerRecognition(connection, context);\n        // await this.sendWaveHeader(connection);\n    }\n    async sendSpeakerRecognition(connection, context) {\n        const speakerContextJson = JSON.stringify(context);\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"speaker.context\", this.privRequestSession.requestId, \"application/json; charset=utf-8\", speakerContextJson));\n    }\n    extractSpeakerContext(model) {\n        return {\n            features: {\n                interimResult: \"enabled\",\n                progressiveDetection: \"disabled\",\n            },\n            profileIds: model.profileIds,\n            scenario: model.scenario,\n        };\n    }\n}\nexports.SpeakerServiceRecognizer = SpeakerServiceRecognizer;\n\n//# sourceMappingURL=SpeakerServiceRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VoiceServiceRecognizer = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst Exports_js_3 = require(\"../sdk/Exports.js\");\nconst Exports_js_4 = require(\"./Exports.js\");\nconst SpeechConnectionMessage_Internal_js_1 = require(\"./SpeechConnectionMessage.Internal.js\");\n// eslint-disable-next-line max-classes-per-file\nclass VoiceServiceRecognizer extends Exports_js_4.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, recognizer) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, recognizer);\n        this.privDeferralMap = new Exports_js_2.DeferralMap();\n        this.privSpeakerAudioSource = audioSource;\n        this.sendPrePayloadJSONOverride = () => this.noOp();\n    }\n    set SpeakerAudioSource(audioSource) {\n        this.privSpeakerAudioSource = audioSource;\n    }\n    processTypeSpecificMessages(connectionMessage) {\n        let processed = false;\n        const resultProps = new Exports_js_3.PropertyCollection();\n        if (connectionMessage.messageType === Exports_js_2.MessageType.Text) {\n            resultProps.setProperty(Exports_js_3.PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n        }\n        switch (connectionMessage.path.toLowerCase()) {\n            // Profile management response for create, fetch, delete, reset\n            case \"speaker.profiles\":\n                const response = JSON.parse(connectionMessage.textBody);\n                switch (response.operation.toLowerCase()) {\n                    case \"create\":\n                        this.handleCreateResponse(response, connectionMessage.requestId);\n                        break;\n                    case \"delete\":\n                    case \"reset\":\n                        this.handleResultResponse(response, connectionMessage.requestId);\n                        break;\n                    case \"fetch\":\n                        const enrollmentResponse = JSON.parse(connectionMessage.textBody);\n                        this.handleFetchResponse(enrollmentResponse, connectionMessage.requestId);\n                        break;\n                    default:\n                        break;\n                }\n                processed = true;\n                break;\n            // Activation and authorization phrase response\n            case \"speaker.phrases\":\n                const phraseResponse = JSON.parse(connectionMessage.textBody);\n                this.handlePhrasesResponse(phraseResponse, connectionMessage.requestId);\n                processed = true;\n                break;\n            // Enrollment response\n            case \"speaker.profile.enrollment\":\n                const enrollmentResponse = JSON.parse(connectionMessage.textBody);\n                const result = new Exports_js_3.VoiceProfileEnrollmentResult(this.enrollmentReasonFrom(!!enrollmentResponse.enrollment ? enrollmentResponse.enrollment.enrollmentStatus : enrollmentResponse.status.statusCode), !!enrollmentResponse.enrollment ? JSON.stringify(enrollmentResponse.enrollment) : undefined, enrollmentResponse.status.reason);\n                if (!!this.privDeferralMap.getId(connectionMessage.requestId)) {\n                    this.privDeferralMap.complete(connectionMessage.requestId, result);\n                }\n                this.privRequestSession.onSpeechEnded();\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        const defferal = new Exports_js_2.Deferred();\n        defferal.resolve(processed);\n        return defferal.promise;\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new Exports_js_3.PropertyCollection();\n        // const enrollmentResponse: EnrollmentResponse = JSON.parse(connectionMessage.textBody) as EnrollmentResponse;\n        properties.setProperty(Exports_js_4.CancellationErrorCodePropertyName, Exports_js_3.CancellationErrorCode[errorCode]);\n        const result = new Exports_js_3.VoiceProfileEnrollmentResult(Exports_js_3.ResultReason.Canceled, error, error);\n        if (!!this.privDeferralMap.getId(requestId)) {\n            this.privDeferralMap.complete(requestId, result);\n        }\n    }\n    async createProfile(profileType, locale) {\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\n        this.voiceProfileType = profileType.toString();\n        const conPromise = this.connectImpl();\n        try {\n            const createProfileDeferral = new Exports_js_2.Deferred();\n            await conPromise;\n            await this.sendCreateProfile(createProfileDeferral, profileType, locale);\n            void this.receiveMessage();\n            return createProfileDeferral.promise;\n        }\n        catch (err) {\n            throw err;\n        }\n    }\n    async resetProfile(profile) {\n        this.voiceProfileType = profile.profileType.toString();\n        return this.sendCommonRequest(\"reset\", profile.profileType, profile);\n    }\n    async deleteProfile(profile) {\n        this.voiceProfileType = profile.profileType.toString();\n        return this.sendCommonRequest(\"delete\", profile.profileType, profile);\n    }\n    async retrieveEnrollmentResult(profile) {\n        this.voiceProfileType = profile.profileType.toString();\n        this.privExpectedProfileId = profile.profileId;\n        return this.sendCommonRequest(\"fetch\", profile.profileType, profile);\n    }\n    async getAllProfiles(profileType) {\n        this.voiceProfileType = profileType.toString();\n        return this.sendCommonRequest(\"fetch\", profileType);\n    }\n    async getActivationPhrases(profileType, lang) {\n        this.voiceProfileType = profileType.toString();\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\n        const conPromise = this.connectImpl();\n        try {\n            const getPhrasesDeferral = new Exports_js_2.Deferred();\n            await conPromise;\n            await this.sendPhrasesRequest(getPhrasesDeferral, profileType, lang);\n            void this.receiveMessage();\n            return getPhrasesDeferral.promise;\n        }\n        catch (err) {\n            throw err;\n        }\n    }\n    async enrollProfile(profile) {\n        this.voiceProfileType = profile.profileType.toString();\n        const enrollmentDeferral = new Exports_js_2.Deferred();\n        this.privRequestSession.startNewRecognition();\n        this.privRequestSession.listenForServiceTelemetry(this.privSpeakerAudioSource.events);\n        this.privRecognizerConfig.parameters.setProperty(Exports_js_3.PropertyId.Speech_SessionId, this.privRequestSession.sessionId);\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\n        const conPromise = this.connectImpl();\n        const preAudioPromise = this.sendPreAudioMessages(profile, enrollmentDeferral);\n        const node = await this.privSpeakerAudioSource.attach(this.privRequestSession.audioNodeId);\n        const format = await this.privSpeakerAudioSource.format;\n        const deviceInfo = await this.privSpeakerAudioSource.deviceInfo;\n        const audioNode = new Exports_js_1.ReplayableAudioNode(node, format.avgBytesPerSec);\n        await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\n        this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\n        try {\n            await conPromise;\n            await preAudioPromise;\n        }\n        catch (err) {\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.ConnectionFailure, err);\n        }\n        const sessionStartEventArgs = new Exports_js_3.SessionEventArgs(this.privRequestSession.sessionId);\n        if (!!this.privRecognizer.sessionStarted) {\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\n        }\n        void this.receiveMessage();\n        const audioSendPromise = this.sendAudio(audioNode);\n        // /* eslint-disable no-empty */\n        audioSendPromise.then(() => { }, (error) => {\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.RuntimeError, error);\n        });\n        return enrollmentDeferral.promise;\n    }\n    async sendPreAudioMessages(profile, enrollmentDeferral) {\n        const connection = await this.fetchConnection();\n        this.privRequestSession.onSpeechContext();\n        this.privDeferralMap.add(this.privRequestSession.requestId, enrollmentDeferral);\n        await this.sendBaseRequest(connection, \"enroll\", this.scenarioFrom(profile.profileType), profile);\n    }\n    async sendPhrasesRequest(getPhrasesDeferral, profileType, locale) {\n        const connection = await this.fetchConnection();\n        this.privRequestSession.onSpeechContext();\n        this.privDeferralMap.add(this.privRequestSession.requestId, getPhrasesDeferral);\n        const scenario = this.scenarioFrom(profileType);\n        const profileCreateRequest = {\n            locale,\n            scenario,\n        };\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"speaker.profile.phrases\", this.privRequestSession.requestId, \"application/json; charset=utf-8\", JSON.stringify(profileCreateRequest)));\n    }\n    async sendCreateProfile(createProfileDeferral, profileType, locale) {\n        const connection = await this.fetchConnection();\n        this.privRequestSession.onSpeechContext();\n        this.privDeferralMap.add(this.privRequestSession.requestId, createProfileDeferral);\n        const scenario = profileType === Exports_js_3.VoiceProfileType.TextIndependentIdentification ? \"TextIndependentIdentification\" :\n            profileType === Exports_js_3.VoiceProfileType.TextIndependentVerification ? \"TextIndependentVerification\" : \"TextDependentVerification\";\n        const profileCreateRequest = {\n            locale,\n            number: \"1\",\n            scenario,\n        };\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"speaker.profile.create\", this.privRequestSession.requestId, \"application/json; charset=utf-8\", JSON.stringify(profileCreateRequest)));\n    }\n    async sendCommonRequest(operation, profileType, profile = undefined) {\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\n        const conPromise = this.connectImpl();\n        try {\n            const deferral = new Exports_js_2.Deferred();\n            this.privRequestSession.onSpeechContext();\n            await conPromise;\n            const connection = await this.fetchConnection();\n            this.privDeferralMap.add(this.privRequestSession.requestId, deferral);\n            await this.sendBaseRequest(connection, operation, this.scenarioFrom(profileType), profile);\n            void this.receiveMessage();\n            return deferral.promise;\n        }\n        catch (err) {\n            throw err;\n        }\n    }\n    async sendBaseRequest(connection, operation, scenario, profile) {\n        const profileRequest = {\n            scenario\n        };\n        if (!!profile) {\n            profileRequest.profileIds = [profile.profileId];\n        }\n        else {\n            profileRequest.maxPageSize = -1;\n        }\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, `speaker.profile.${operation}`, this.privRequestSession.requestId, \"application/json; charset=utf-8\", JSON.stringify(profileRequest)));\n    }\n    extractSpeakerContext(model) {\n        return {\n            features: {\n                interimResult: \"enabled\",\n                progressiveDetection: \"disabled\",\n            },\n            profileIds: model.profileIds,\n            scenario: model.scenario,\n        };\n    }\n    handlePhrasesResponse(response, requestId) {\n        if (!!this.privDeferralMap.getId(requestId)) {\n            if (response.status.statusCode.toLowerCase() !== \"success\") {\n                const reason = Exports_js_3.ResultReason.Canceled;\n                const result = new Exports_js_3.VoiceProfilePhraseResult(reason, response.status.statusCode, response.passPhraseType, []);\n                this.privDeferralMap.complete(requestId, result);\n            }\n            else if (!!response.phrases && response.phrases.length > 0) {\n                const reason = Exports_js_3.ResultReason.EnrollingVoiceProfile;\n                const result = new Exports_js_3.VoiceProfilePhraseResult(reason, response.status.statusCode, response.passPhraseType, response.phrases);\n                this.privDeferralMap.complete(requestId, result);\n            }\n            else {\n                throw new Error(\"Voice Profile get activation phrases failed, no phrases received\");\n            }\n        }\n        else {\n            throw new Error(`Voice Profile get activation phrases request for requestID ${requestId} not found`);\n        }\n    }\n    handleCreateResponse(response, requestId) {\n        if (!!response.profiles && response.profiles.length > 0) {\n            if (!!this.privDeferralMap.getId(requestId)) {\n                const profileIds = response.profiles.map((profile) => profile.profileId);\n                this.privDeferralMap.complete(requestId, profileIds);\n            }\n            else {\n                throw new Error(`Voice Profile create request for requestID ${requestId} not found`);\n            }\n        }\n        else {\n            throw new Error(\"Voice Profile create failed, no profile id received\");\n        }\n    }\n    handleResultResponse(response, requestId) {\n        if (!!this.privDeferralMap.getId(requestId)) {\n            const successReason = response.operation.toLowerCase() === \"delete\" ? Exports_js_3.ResultReason.DeletedVoiceProfile : Exports_js_3.ResultReason.ResetVoiceProfile;\n            const reason = response.status.statusCode.toLowerCase() === \"success\" ? successReason : Exports_js_3.ResultReason.Canceled;\n            const result = new Exports_js_3.VoiceProfileResult(reason, `statusCode: ${response.status.statusCode}, errorDetails: ${response.status.reason}`);\n            this.privDeferralMap.complete(requestId, result);\n        }\n        else {\n            throw new Error(`Voice Profile create request for requestID ${requestId} not found`);\n        }\n    }\n    handleFetchResponse(enrollmentResponse, requestId) {\n        if (!!this.privDeferralMap.getId(requestId) && !!enrollmentResponse.profiles[0]) {\n            if (!!this.privExpectedProfileId && enrollmentResponse.profiles.length === 1 && enrollmentResponse.profiles[0].profileId === this.privExpectedProfileId) {\n                this.privExpectedProfileId = undefined;\n                const profileInfo = enrollmentResponse.profiles[0];\n                const result = new Exports_js_3.VoiceProfileEnrollmentResult(this.enrollmentReasonFrom(profileInfo.enrollmentStatus), JSON.stringify(profileInfo), enrollmentResponse.status.reason);\n                this.privDeferralMap.complete(requestId, result);\n            }\n            else if (enrollmentResponse.profiles.length > 0) {\n                const iProfiles = enrollmentResponse.profiles;\n                const profileResults = [];\n                for (const profile of iProfiles) {\n                    profileResults.push(new Exports_js_3.VoiceProfileEnrollmentResult(this.enrollmentReasonFrom(profile.enrollmentStatus), JSON.stringify(profile), enrollmentResponse.status.reason));\n                }\n                this.privDeferralMap.complete(requestId, profileResults);\n            }\n        }\n        else {\n            throw new Error(`Voice Profile fetch request for requestID ${requestId} not found`);\n        }\n    }\n    enrollmentReasonFrom(statusCode) {\n        switch (statusCode.toLowerCase()) {\n            case \"enrolled\":\n                return Exports_js_3.ResultReason.EnrolledVoiceProfile;\n            case \"invalidlocale\":\n            case \"invalidphrase\":\n            case \"invalidaudioformat\":\n            case \"invalidscenario\":\n            case \"invalidprofilecount\":\n            case \"invalidoperation\":\n            case \"audiotooshort\":\n            case \"audiotoolong\":\n            case \"toomanyenrollments\":\n            case \"storageconflict\":\n            case \"profilenotfound\":\n            case \"incompatibleprofiles\":\n            case \"incompleteenrollment\":\n                return Exports_js_3.ResultReason.Canceled;\n            default:\n                return Exports_js_3.ResultReason.EnrollingVoiceProfile;\n        }\n    }\n    scenarioFrom(profileType) {\n        return profileType === Exports_js_3.VoiceProfileType.TextIndependentIdentification ? \"TextIndependentIdentification\" :\n            profileType === Exports_js_3.VoiceProfileType.TextIndependentVerification ? \"TextIndependentVerification\" : \"TextDependentVerification\";\n    }\n}\nexports.VoiceServiceRecognizer = VoiceServiceRecognizer;\n\n//# sourceMappingURL=VoiceServiceRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.type = exports.connectivity = exports.Device = exports.OS = exports.System = exports.Context = exports.SpeechServiceConfig = void 0;\n/* eslint-disable max-classes-per-file */\n// The config is serialized and sent as the Speech.Config\nclass SpeechServiceConfig {\n    constructor(context) {\n        this.context = context;\n    }\n    serialize() {\n        return JSON.stringify(this, (key, value) => {\n            if (value && typeof value === \"object\" && !Array.isArray(value)) {\n                const replacement = {};\n                for (const k in value) {\n                    if (Object.hasOwnProperty.call(value, k)) {\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        replacement[k && k.charAt(0).toLowerCase() + k.substring(1)] = value[k];\n                    }\n                }\n                return replacement;\n            }\n            return value;\n        });\n    }\n    get Context() {\n        return this.context;\n    }\n    get Recognition() {\n        return this.recognition;\n    }\n    set Recognition(value) {\n        this.recognition = value.toLowerCase();\n    }\n}\nexports.SpeechServiceConfig = SpeechServiceConfig;\nclass Context {\n    constructor(os) {\n        this.system = new System();\n        this.os = os;\n    }\n}\nexports.Context = Context;\nclass System {\n    constructor() {\n        // Note: below will be patched for official builds.\n        const SPEECHSDK_CLIENTSDK_VERSION = \"1.44.1\";\n        this.name = \"SpeechSDK\";\n        this.version = SPEECHSDK_CLIENTSDK_VERSION;\n        this.build = \"JavaScript\";\n        this.lang = \"JavaScript\";\n    }\n}\nexports.System = System;\nclass OS {\n    constructor(platform, name, version) {\n        this.platform = platform;\n        this.name = name;\n        this.version = version;\n    }\n}\nexports.OS = OS;\nclass Device {\n    constructor(manufacturer, model, version) {\n        this.manufacturer = manufacturer;\n        this.model = model;\n        this.version = version;\n    }\n}\nexports.Device = Device;\nvar connectivity;\n(function (connectivity) {\n    connectivity[\"Bluetooth\"] = \"Bluetooth\";\n    connectivity[\"Wired\"] = \"Wired\";\n    connectivity[\"WiFi\"] = \"WiFi\";\n    connectivity[\"Cellular\"] = \"Cellular\";\n    connectivity[\"InBuilt\"] = \"InBuilt\";\n    connectivity[\"Unknown\"] = \"Unknown\";\n})(connectivity = exports.connectivity || (exports.connectivity = {}));\nvar type;\n(function (type) {\n    type[\"Phone\"] = \"Phone\";\n    type[\"Speaker\"] = \"Speaker\";\n    type[\"Car\"] = \"Car\";\n    type[\"Headset\"] = \"Headset\";\n    type[\"Thermostat\"] = \"Thermostat\";\n    type[\"Microphones\"] = \"Microphones\";\n    type[\"Deskphone\"] = \"Deskphone\";\n    type[\"RemoteControl\"] = \"RemoteControl\";\n    type[\"Unknown\"] = \"Unknown\";\n    type[\"File\"] = \"File\";\n    type[\"Stream\"] = \"Stream\";\n})(type = exports.type || (exports.type = {}));\n\n//# sourceMappingURL=SpeechServiceConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AutoDetectSourceLanguagesOpenRangeOptionName = exports.ForceDictationPropertyName = exports.ServicePropertiesPropertyName = exports.CancellationErrorCodePropertyName = exports.OutputFormatPropertyName = exports.SpeechSynthesisAdapter = exports.AvatarSynthesisAdapter = void 0;\n// Make sure not to export internal modules.\n//\n__exportStar(require(\"./CognitiveSubscriptionKeyAuthentication.js\"), exports);\n__exportStar(require(\"./CognitiveTokenAuthentication.js\"), exports);\n__exportStar(require(\"./IAuthentication.js\"), exports);\n__exportStar(require(\"./IConnectionFactory.js\"), exports);\n__exportStar(require(\"./ISynthesisConnectionFactory.js\"), exports);\n__exportStar(require(\"./IntentConnectionFactory.js\"), exports);\n__exportStar(require(\"./SpeakerRecognitionConnectionFactory.js\"), exports);\n__exportStar(require(\"./RecognitionEvents.js\"), exports);\n__exportStar(require(\"./ServiceRecognizerBase.js\"), exports);\n__exportStar(require(\"./ConversationServiceRecognizer.js\"), exports);\n__exportStar(require(\"./RecognizerConfig.js\"), exports);\n__exportStar(require(\"./SpeechServiceInterfaces.js\"), exports);\n__exportStar(require(\"./WebsocketMessageFormatter.js\"), exports);\n__exportStar(require(\"./SpeechConnectionFactory.js\"), exports);\n__exportStar(require(\"./ConversationTranscriberConnectionFactory.js\"), exports);\n__exportStar(require(\"./TranscriberConnectionFactory.js\"), exports);\n__exportStar(require(\"./TranslationConnectionFactory.js\"), exports);\n__exportStar(require(\"./SpeechSynthesisConnectionFactory.js\"), exports);\n__exportStar(require(\"./EnumTranslation.js\"), exports);\n__exportStar(require(\"./ServiceMessages/Enums.js\"), exports);\n__exportStar(require(\"./ServiceMessages/TranslationSynthesisEnd.js\"), exports);\n__exportStar(require(\"./ServiceMessages/TranslationHypothesis.js\"), exports);\n__exportStar(require(\"./ServiceMessages/TranslationPhrase.js\"), exports);\n__exportStar(require(\"./TranslationServiceRecognizer.js\"), exports);\n__exportStar(require(\"./ServiceMessages/SpeechDetected.js\"), exports);\n__exportStar(require(\"./ServiceMessages/SpeechHypothesis.js\"), exports);\n__exportStar(require(\"./ServiceMessages/SpeechKeyword.js\"), exports);\n__exportStar(require(\"./SpeechServiceRecognizer.js\"), exports);\n__exportStar(require(\"./ConversationTranscriptionServiceRecognizer.js\"), exports);\n__exportStar(require(\"./TranscriptionServiceRecognizer.js\"), exports);\n__exportStar(require(\"./ServiceMessages/DetailedSpeechPhrase.js\"), exports);\n__exportStar(require(\"./ServiceMessages/SimpleSpeechPhrase.js\"), exports);\n__exportStar(require(\"./AddedLmIntent.js\"), exports);\n__exportStar(require(\"./IntentServiceRecognizer.js\"), exports);\n__exportStar(require(\"./ServiceMessages/IntentResponse.js\"), exports);\n__exportStar(require(\"./ServiceMessages/SpeakerResponse.js\"), exports);\n__exportStar(require(\"./RequestSession.js\"), exports);\n__exportStar(require(\"./SpeechContext.js\"), exports);\n__exportStar(require(\"./DynamicGrammarBuilder.js\"), exports);\n__exportStar(require(\"./DialogServiceAdapter.js\"), exports);\n__exportStar(require(\"./AgentConfig.js\"), exports);\n__exportStar(require(\"./Transcription/Exports.js\"), exports);\n__exportStar(require(\"./ServiceMessages/SynthesisAudioMetadata.js\"), exports);\n__exportStar(require(\"./SynthesisTurn.js\"), exports);\n__exportStar(require(\"./SynthesisAdapterBase.js\"), exports);\nvar AvatarSynthesisAdapter_js_1 = require(\"./AvatarSynthesisAdapter.js\");\nObject.defineProperty(exports, \"AvatarSynthesisAdapter\", { enumerable: true, get: function () { return AvatarSynthesisAdapter_js_1.AvatarSynthesisAdapter; } });\nvar SpeechSynthesisAdapter_js_1 = require(\"./SpeechSynthesisAdapter.js\");\nObject.defineProperty(exports, \"SpeechSynthesisAdapter\", { enumerable: true, get: function () { return SpeechSynthesisAdapter_js_1.SpeechSynthesisAdapter; } });\n__exportStar(require(\"./SynthesisRestAdapter.js\"), exports);\n__exportStar(require(\"./SynthesizerConfig.js\"), exports);\n__exportStar(require(\"./SynthesisContext.js\"), exports);\n__exportStar(require(\"./SpeakerRecognitionConfig.js\"), exports);\n__exportStar(require(\"./SpeakerServiceRecognizer.js\"), exports);\n__exportStar(require(\"./VoiceServiceRecognizer.js\"), exports);\n__exportStar(require(\"./SpeechServiceConfig.js\"), exports);\nexports.OutputFormatPropertyName = \"OutputFormat\";\nexports.CancellationErrorCodePropertyName = \"CancellationErrorCode\";\nexports.ServicePropertiesPropertyName = \"ServiceProperties\";\nexports.ForceDictationPropertyName = \"ForceDictation\";\nexports.AutoDetectSourceLanguagesOpenRangeOptionName = \"UND\";\n\n//# sourceMappingURL=Exports.js.map\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* eslint-disable @typescript-eslint/no-unused-vars */\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nconst Exports_js_1 = require(\"./src/common.speech/Exports.js\");\n// Note: this instantiation ensures the above import isn't\n// removed on compile. The import being absent causes an error on running\nvoid new Exports_js_1.AgentConfig();\n// Speech SDK API\n__exportStar(require(\"./src/sdk/Exports.js\"), exports);\n\n//# sourceMappingURL=microsoft.cognitiveservices.speech.sdk.js.map\n"],"names":["rng_1","rng","getRandomValues","rnds8","regex","_default","validate_1","_regex","_interopRequireDefault","require$$0","obj","validate","uuid","stringify_1","unsafeStringify","_validate","byteToHex","i","arr","offset","stringify","v1_1","_rng","_stringify","require$$1","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","options","buf","b","node","clockseq","seedBytes","msecs","nsecs","dt","tl","tmh","n","parse_1","parse","v","v35_1","v35","_parse","stringToBytes","str","bytes","DNS","URL","name","version","hashfunc","generateUUID","value","namespace","_namespace","md5_1","md5","msg","md5ToHexEncodedArray","wordsToMd5","bytesToWords","input","output","length32","hexTab","x","hex","getOutputLength","inputLength8","len","a","c","d","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","y","lsw","bitRotateLeft","num","cnt","md5cmn","q","s","t","v3_1","_v","_md","v3","native","randomUUID","v4_1","_native","require$$2","v4","rnds","sha1_1","f","z","ROTL","sha1","K","H","l","N","M","j","W","e","T","v5_1","_sha","v5","nil","version_1","exports","_nil","_v2","_v3","_v4","_version","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","Guid","uuid_1","createGuid","createNoDashGuid","Guid_js_1","EventType","PlatformEvent","eventName","eventType","AudioSourceEvents","PlatformEvent_js_1","AudioSourceEvent","audioSourceId","AudioSourceInitializingEvent","AudioSourceReadyEvent","AudioSourceOffEvent","AudioSourceErrorEvent","error","AudioStreamNodeEvent","audioNodeId","AudioStreamNodeAttachingEvent","AudioStreamNodeAttachedEvent","AudioStreamNodeDetachedEvent","AudioStreamNodeErrorEvent","ConnectionEvents","ServiceEvent","jsonstring","ConnectionEvent","connectionId","ConnectionStartEvent","uri","headers","ConnectionEstablishedEvent","ConnectionClosedEvent","statusCode","reason","ConnectionErrorEvent","message","type","ConnectionEstablishErrorEvent","statuscode","ConnectionMessageReceivedEvent","networkReceivedTimeISO","ConnectionMessageSentEvent","networkSentTimeISO","ConnectionRedirectEvent","redirectUrl","originalUrl","context","_Error","ArgumentNullError","argumentName","InvalidOperationError","ObjectDisposedError","objectName","Error_js_1","MessageType","ConnectionMessage","messageType","body","id","ConnectionOpenResponse_1","ConnectionOpenResponse","DeferralMap_1","DeferralMap","deferral","result","DialogEvents","DialogEvent","SendingAgentContextMessageEvent","agentConfig","EventSource_1","EventSource","metadata","event","paramName","eventId","onEventCallback","listener","Events_1","EventSource_js_1","Events","eventSource","IAudioSource","ConnectionState","IDetachable","IDictionary","IDisposable","IEventListener","IEventSource","IErrorMessages","ITimer","IWebsocketMessageFormatter","List_1","List","list","item","itemIndex","index","count","removedElements","addedCallback","subscriptionId","removedCallback","disposedCallback","seperator","cloneCopy","val","callback","selectList","filteredList","compareFn","orderedArray","array","subscriptions","PromiseState","PromiseResult","promiseResultEventSource","PromiseResultEventSource","onSetResult","onSetError","Deferred","resolve","reject","Sink","errorHandler","successCallback","errorCallback","marshalPromiseToCallbacks","promise","cb","err","typedError","Queue_1","List_js_1","Promise_js_1","SubscriberType","Queue","deferredSubscriber","pendingItemProcessor","subs","detachable","promiseArray","wrapper","lists","subscriber","dequeuedItem","RawWebsocketMessage_1","ConnectionMessage_js_1","RawWebsocketMessage","payload","RiffPcmEncoder_1","RiffPcmEncoder","actualSampleRate","desiredSampleRate","actualAudioFrame","audioFrame","audioLength","buffer","view","srcFrame","srcRate","dstRate","ratio","dstLength","dstFrame","srcOffset","dstOffset","nextSrcOffset","accum","Stream_1","Queue_js_1","Stream","streamId","streamChunk","TranslationStatus","ChunkedArrayBufferStream_1","Exports_js_1","ChunkedArrayBufferStream$1","targetChunkSize","chunk","bytesCopiedFromBuffer","bytesToCopy","targetView","sourceView","ChunkedArrayBufferStream","IAudioDestination","Timeout_1","Timeout","scheduledTimeoutFunctions","unhandledRequests","workerUrl","worker","data","timerId","idOrFunc","unhandledTimerId","func","delay","OCSPEvents","OCSPEvent","signature","OCSPMemoryCacheHitEvent","OCSPCacheMissEvent","OCSPDiskCacheHitEvent","OCSPCacheUpdateNeededEvent","OCSPMemoryCacheStoreEvent","OCSPDiskCacheStoreEvent","OCSPCacheUpdateCompleteEvent","OCSPStapleReceivedEvent","OCSPWSUpgradeStartedEvent","serialNumber","OCSPCacheEntryExpiredEvent","expireTime","OCSPCacheEntryNeedsRefreshEvent","startTime","OCSPCacheHitEvent","OCSPVerificationFailedEvent","OCSPCacheFetchErrorEvent","OCSPResponseRetrievedEvent","OCSPCacheUpdateErrorEvent","BackgroundError","BackgroundEvent","__createBinding","this","o","m","k","k2","__exportStar","p","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","require$$26","TranslationStatus_js_1","require$$27","require$$28","require$$29","require$$30","require$$31","require$$32","HeaderNames_1","HeaderNames","IAuthentication","AuthInfo","headerName","token","CognitiveSubscriptionKeyAuthentication_1","HeaderNames_js_1","IAuthentication_js_1","CognitiveSubscriptionKeyAuthentication","subscriptionKey","authFetchEventId","CognitiveTokenAuthentication_1","CognitiveTokenAuthentication","fetchCallback","fetchOnExpiryCallback","IConnectionFactory","ISynthesisConnectionFactory","__viteBrowserExternal","Contracts_1","Contracts","param","maxLength","minLength","isDisposed","__setModuleDefault","__importStar","mod","ConsoleLoggingListener_1","fs","LogLevel_js_1","Contracts_js_1","ConsoleLoggingListener","logLevelFilter","path","enableOutput","log","logFragments","prop","valueToLog","IRecorder","AudioFormatTag","AudioStreamFormat","AudioStreamFormatImpl","samplesPerSecond","bitsPerSample","channels","format","samplesPerSec","isWavFormat","sampleRate","AudioContext","Exports_js_2","AudioStreamFormat_js_1","MicAudioSource","privRecorder","deviceId","mediaStream","nav","getUserMedia","constraints","next","errorMsg","stream","label","defaultMicrophoneName","microphoneDeviceId","deferred","devices","device","hasClose","FileAudioSource_1","FileAudioSource$1","file","filename","header","headerResult","processHeader","getWord","formatSize","channelCount","pos","reader","h","onerror","processFile","buff","ev","fileBuffer","FileAudioSource","PCMRecorder","Exports_1","PcmRecorder","stopInputOnRelease","outputStream","waveStreamEncoder","micInput","attachScriptProcessor","scriptNode","bufferSize","audioSampleRate","inputFrame","waveFrame","skipAudioWorklet","workletScript","blob","workletNode","track","url","__importDefault","WebsocketMessageAdapter_1","net","tls","agent_base_1","https_proxy_agent_1","ws_1","WebsocketMessageAdapter","messageFormatter","proxyInfo","enableCompression","protocol","networkReceivedTime","rawMessage","connectionMessage","messageSendStatusDeferral","messageSendDeferral","sendItem","code","closeReason","pendingSendItem","sendError","agent","httpProxyOptions","request","socketPromise","baseAgent","socket","WebsocketConnection_1","WebsocketMessageAdapter_js_1","WebsocketConnection","queryParameters","queryParams","key","ReplayableAudioNode_1","ReplayableAudioNode","audioSource","bytesPerSecond","offsetToSeek","bytesToSeek","retVal","BufferEntry","startOffset","endOffset","serial","byteOffset","AudioFileWriter_1","AudioFileWriter","headerOffset","AudioInputStream_1","Exports_js_3","AudioInputStream$1","PushAudioInputStream","PullAudioInputStream","AudioInputStream","PushAudioInputStreamImpl","dataBuffer","arrayBuffer","PullAudioInputStreamImpl","totalBytes","transmitBuff","readBuff","pulledBytes","SpeechSynthesisOutputFormat","AudioOutputFormat","SpeechSynthesisOutputFormat_js_1","AudioOutputFormatImpl","formatTag","avgBytesPerSec","blockAlign","audioFormatString","requestAudioFormatString","hasHeader","speechSynthesisOutputFormat","speechSynthesisOutputFormatString","audio","tmp","AudioOutputStream_1","AudioOutputFormat_js_1","AudioOutputStream","PullAudioOutputStream","PullAudioOutputStreamImpl","intView","tmpBuffer","PushAudioOutputStream","PushAudioOutputStreamImpl","AudioConfig_1","AudioFileWriter_js_1","AudioInputStream_js_1","AudioOutputStream_js_1","AudioConfig$1","AudioConfig","pcmRecorder","AudioConfigImpl","audioStream","AudioOutputConfigImpl","player","source","def","destination","CancellationReason","PullAudioInputStreamCallback_1","PullAudioInputStreamCallback","PushAudioOutputStreamCallback_1","PushAudioOutputStreamCallback","KeywordRecognitionModel_1","KeywordRecognitionModel","fileName","SessionEventArgs_1","SessionEventArgs","sessionId","RecognitionEventArgs_1","RecognitionEventArgs$1","RecognitionEventArgs","OutputFormat","IntentRecognitionEventArgs_1","IntentRecognitionEventArgs$1","IntentRecognitionEventArgs","RecognitionResult_1","RecognitionResult","resultId","text","duration","language","languageDetectionConfidence","errorDetails","json","properties","SpeechRecognitionResult_1","SpeechRecognitionResult$1","speakerId","SpeechRecognitionResult","IntentRecognitionResult_1","IntentRecognitionResult$1","intentId","IntentRecognitionResult","LanguageUnderstandingModel_1","LanguageUnderstandingModel","langModelImp","LanguageUnderstandingModelImpl","firstDot","lastSegment","appId","region","SpeechRecognitionEventArgs_1","SpeechRecognitionEventArgs$1","SpeechRecognitionEventArgs","ConversationTranscriptionEventArgs","MeetingTranscriptionEventArgs","CancellationEventArgsBase_1","CancellationEventArgsBase$1","errorCode","CancellationEventArgsBase","SpeechRecognitionCanceledEventArgs_1","CancellationEventArgsBase_js_1","SpeechRecognitionCanceledEventArgs$1","SpeechRecognitionCanceledEventArgs","TranslationRecognitionEventArgs_1","TranslationRecognitionEventArgs$1","TranslationRecognitionEventArgs","TranslationSynthesisEventArgs_1","TranslationSynthesisEventArgs$1","TranslationSynthesisEventArgs","TranslationRecognitionResult_1","TranslationRecognitionResult$1","TranslationRecognitionResult","translations","TranslationSynthesisResult_1","TranslationSynthesisResult","ResultReason","SpeechConfig_1","SpeechConfig$1","speechImpl","SpeechConfigImpl","endpoint","auth","isValidString","isTokenCredential","hostName","authorizationToken","SpeechConfig","tokenCredential","proxyHostName","proxyPort","proxyUserName","proxyPassword","currentProperties","profanity","ret","voice","SpeechTranslationConfig_1","SpeechTranslationConfig$1","SpeechTranslationConfigImpl","SpeechTranslationConfig","languages","PropertyCollection_1","PropertyCollection$1","PropertyCollection","keyToUse","clonedMap","destinationCollection","PropertyId","Recognizer_1","Recognizer$1","Recognizer","audioConfig","connectionFactory","errorCb","disposing","enabled","osPlatform","osName","osVersion","recognizerConfig","recognitionMode","tokenResponse","RecognitionMode","SpeechRecognizer_1","PhraseDetectionContext_js_1","SpeechRecognizer$1","SpeechRecognizer","speechConfig","speechConfigImpl","autoDetectSourceLanguageConfig","model","authentication","configImpl","IntentRecognizer_1","IntentRecognizer$1","simplePhrase","intentName","modelImpl","audioImpl","refGrammers","addedLmIntent","grammer","IntentRecognizer","VoiceProfileType","ConnectionMessage_1","PropertyCollection_js_1","PropertyId_js_1","ConnectionMessage$1","ConnectionMessageImpl","Connection_1","Connection$1","Connection","recognizer","recoBase","synthesizer","synthBase","propertyName","propertyValue","success","connectionEvent","TranslationRecognizer_1","Connection_js_1","TranslationRecognizer$1","TranslationRecognizer","speechTranslationConfig","speechTranslationConfigImpl","lang","conn","Translations_1","Translations$1","Translations","NoMatchReason","NoMatchDetails_1","NoMatchDetails$1","NoMatchDetails","simpleSpeech","TranslationRecognitionCanceledEventArgs_1","TranslationRecognitionCanceledEventArgs","sessionid","cancellationReason","IntentRecognitionCanceledEventArgs_1","IntentRecognitionCanceledEventArgs$1","IntentRecognitionCanceledEventArgs","CancellationDetailsBase_1","CancellationDetailsBase","CancellationDetails_1","CancellationDetailsBase_js_1","CancellationDetails$1","CancellationDetails","CancellationErrorCode","ConnectionEventArgs_1","ConnectionEventArgs$1","ConnectionEventArgs","ServiceEventArgs_1","ServiceEventArgs$1","ServiceEventArgs","PhraseListGrammar_1","PhraseListGrammar","recogBase","phrase","phrases","DialogServiceConfig_1","DialogServiceConfig$1","DialogServiceConfig","DialogServiceConfigImpl","channel","BotFrameworkConfig_1","DialogServiceConfig_js_1","BotFrameworkConfig$1","subscription","botId","botFrameworkConfig","host","resolvedHost","BotFrameworkConfig","CustomCommandsConfig_1","CustomCommandsConfig$1","applicationId","customCommandsConfig","CustomCommandsConfig","QueryParameterNames_1","QueryParameterNames","ConnectionFactoryBase_1","QueryParameterNames_js_1","ConnectionFactoryBase$1","config","parameterName","propertyId","serviceProperties","propId","redirectUrlString","redirectedUrlString","redirectResponse","ConnectionFactoryBase","DialogConnectorFactory","ConnectionFactoryBase_js_1","Exports_js_4","DialogConnectionFactory","authInfo","dialogType","requestTurnStatus","resourceInfix","hostSuffix","DialogServiceConnector_1","DialogConnectorFactory_js_1","DialogServiceConnector$1","dialogConfig","dialogServiceConfigImpl","speechActivityTemplate","retPromise","activity","errCb","DialogServiceConnector","ActivityReceivedEventArgs_1","ActivityReceivedEventArgs","TurnStatusPayload","TurnStatusResponsePayload","TurnStatusReceivedEventArgs_1","TurnStatusPayload_js_1","TurnStatusReceivedEventArgs","turnStatus","ServicePropertyChannel","ProfanityOption","BaseAudioPlayer_1","BaseAudioPlayer$1","audioFormat","newAudioData","audioData","newSamplesData","timerPeriod","maxValue","float32Data","bufferSource","frameCount","audioBuffer","channelOffset","newBuffer","BaseAudioPlayer","ConnectionMessageEventArgs_1","ConnectionMessageEventArgs","VoiceProfile_1","VoiceProfile","profileId","profileType","VoiceProfileEnrollmentResult_1","VoiceProfileEnrollmentResult$1","VoiceProfileEnrollmentResult","statusText","results","VoiceProfileEnrollmentCancellationDetails","VoiceProfileResult_1","VoiceProfileResult$1","VoiceProfileResult","VoiceProfileCancellationDetails","VoiceProfilePhraseResult_1","VoiceProfilePhraseResult$1","phraseArray","VoiceProfilePhraseResult","VoiceProfileClient_1","AudioConfig_js_1","VoiceProfileClient$1","profileIds","profile","successReason","VoiceProfileClient","SpeakerRecognizer_1","SpeakerRecognizer$1","SpeakerRecognizer","SpeakerIdentificationModel_1","SpeakerIdentificationModel$1","SpeakerIdentificationModel","profiles","SpeakerVerificationModel_1","SpeakerVerificationModel$1","SpeakerVerificationModel","LanguageIdMode","AutoDetectSourceLanguageConfig_1","LanguageIdMode_js_1","AutoDetectSourceLanguageConfig$1","AutoDetectSourceLanguageConfig","configs","autoConfig","langs","customProperty","mode","AutoDetectSourceLanguageResult_1","AutoDetectSourceLanguageResult","SourceLanguageConfig_1","SourceLanguageConfig","endpointId","SpeakerRecognitionResultType","SpeakerRecognitionResult","response","resultReason","cancellationErrorCode","resultType","SpeakerRecognitionCancellationDetails","Conversation_1","Conversation$1","arg2","arg3","arg4","conversationImpl","ConversationImpl","Conversation","_a","r","updatedParticipant","newParticipant","ejectedParticipant","nickname","hostNickname","_b","convId","part","props","conversationTranslator","room","participant","conversationId","userId","participantId","conversationInfo","dispose","includeHost","participants","isMuted","isLocked","ConversationCommon_1","ConversationCommon","ConversationExpirationEventArgs_1","ConversationExpirationEventArgs$1","expirationTime","ConversationExpirationEventArgs","ConversationParticipantsChangedEventArgs_1","ConversationParticipantsChangedEventArgs$1","ConversationParticipantsChangedEventArgs","ConversationTranslationCanceledEventArgs_1","ConversationTranslationCanceledEventArgs$1","ConversationTranslationCanceledEventArgs","ConversationTranslationEventArgs_1","ConversationTranslationEventArgs$1","ConversationTranslationEventArgs","ConversationTranslationResult_1","TranslationRecognitionResult_js_1","ConversationTranslationResult$1","originalLanguage","ConversationTranslationResult","StringUtils_1","StringUtils","replacements","formatted","appendToFormatted","appendToKey","appendFunc","ConversationTranslatorConnectionFactory_1","StringUtils_js_1","ConversationTranslatorConnectionFactory$1","ConversationTranslatorConnectionFactory","convGetter","isVirtMicArrayEndpoint","convInfo","replacementValues","endpointUrl","parsedUrl","connFactory","ConversationTranslatorConnectionFactory_js_1","Conversation_js_1","SpeechState","ConversationTranslationRecognizer","translator","tr","newState","cancelEvent","ConversationTranslator","conversation","param1","param2","param3","propertyIdsToCopy","ConversationTranscriber_1","ConversationTranscriber$1","ConversationTranscriber","IParticipant","User","Participant","avatar","displayName","isHost","isUsingTts","preferredLanguage","ParticipantChangedReason","Meeting_1","Meeting$1","meetingId","meetingImpl","MeetingImpl","Meeting","meetingInfo","MeetingTranscriptionCanceledEventArgs_1","MeetingTranscriptionCanceledEventArgs","MeetingTranscriber_1","MeetingTranscriber$1","meeting","MeetingTranscriber","ConversationTranscriptionResult_1","ConversationTranscriptionResult$1","ConversationTranscriptionResult","ConversationCommon_js_1","ConversationExpirationEventArgs_js_1","ConversationParticipantsChangedEventArgs_js_1","ConversationTranslationCanceledEventArgs_js_1","ConversationTranslationEventArgs_js_1","ConversationTranslationResult_js_1","ConversationTranslator_js_1","ConversationTranscriber_js_1","IParticipant_js_1","ParticipantChangedReason_js_1","Meeting_js_1","MeetingTranscriptionCanceledEventArgs_js_1","MeetingTranscriber_js_1","ConversationTranscriptionResult_js_1","Synthesizer_1","Synthesizer$1","Synthesizer","languageToDefaultVoice","ssml","synthesizerConfig","SynthesisRequest","requestId","isSSML","dataStream","SpeechSynthesizer_1","Synthesizer_js_1","SpeechSynthesizer$1","SpeechSynthesizer","locale","IsSsml","audioDestination","SynthesisResult_1","SynthesisResult","SpeechSynthesisResult_1","SpeechSynthesisResult$1","audioDuration","SpeechSynthesisResult","SpeechSynthesisEventArgs_1","SpeechSynthesisEventArgs","SpeechSynthesisWordBoundaryEventArgs_1","SpeechSynthesisWordBoundaryEventArgs","audioOffset","wordLength","textOffset","boundaryType","SpeechSynthesisBookmarkEventArgs_1","SpeechSynthesisBookmarkEventArgs","SpeechSynthesisVisemeEventArgs_1","SpeechSynthesisVisemeEventArgs","visemeId","animation","SpeechSynthesisBoundaryType","SynthesisVoicesResult_1","SynthesisVoicesResult$1","SynthesisVoicesResult","SynthesisVoiceGender","SynthesisVoiceType","GENDER_LOOKUP","VOICE_TYPE_LOOKUP","VoiceInfo","style","SpeakerAudioDestination_1","MediaDurationPlaceholderSeconds","AudioFormatToMimeType","SpeakerAudioDestination","audioDestinationId","receivedAudio","audioBlob","mimeType","volume","binary","ConversationTranscriptionCanceledEventArgs_1","ConversationTranscriptionCanceledEventArgs$1","ConversationTranscriptionCanceledEventArgs","MeetingTranscriptionCanceledEventArgs$1","PronunciationAssessmentGradingSystem","PronunciationAssessmentGranularity","PronunciationAssessmentConfig_1","PronunciationAssessmentConfig$1","PronunciationAssessmentConfig","referenceText","gradingSystem","granularity","enableMiscue","phonemeAlphabet","enableMiscueString","nbestPhonemeCount","enableProsodyAssessment","topic","jsonString","paramsJson","PronunciationAssessmentResult_1","ContentAssessmentResult","detailResult","PronunciationAssessmentResult$1","PronunciationAssessmentResult","AvatarConfig_1","AvatarConfig$1","character","videoFormat","AvatarConfig","AvatarEventTypes","AvatarEventArgs","description","SpeechSynthesisConnectionFactory_1","SpeechSynthesisConnectionFactory$1","hostPrefix","pathName","SpeechSynthesisConnectionFactory","AvatarSynthesizer_1","SpeechSynthesisConnectionFactory_js_1","AvatarSynthesizer$1","avatarConfig","peerConnection","iceGatheringDone","sdp","sdpAnswerString","sdpAnswer","_authentication","_synthesizerConfig","deferredResult","AvatarSynthesizer","AvatarVideoFormat_1","Coordinate","AvatarVideoFormat","codec","bitrate","width","height","topLeft","bottomRight","AvatarWebRTCConnectionResult_1","AvatarWebRTCConnectionResult$1","SDPAnswer","AvatarWebRTCConnectionResult","Diagnostics_1","Diagnostics$1","logLevel","Diagnostics","CancellationReason_js_1","PullAudioInputStreamCallback_js_1","PushAudioOutputStreamCallback_js_1","KeywordRecognitionModel_js_1","SessionEventArgs_js_1","RecognitionEventArgs_js_1","OutputFormat_js_1","IntentRecognitionEventArgs_js_1","RecognitionResult_js_1","SpeechRecognitionResult_js_1","IntentRecognitionResult_js_1","LanguageUnderstandingModel_js_1","SpeechRecognitionEventArgs_js_1","SpeechRecognitionCanceledEventArgs_js_1","TranslationRecognitionEventArgs_js_1","TranslationSynthesisEventArgs_js_1","TranslationSynthesisResult_js_1","ResultReason_js_1","SpeechConfig_js_1","SpeechTranslationConfig_js_1","Recognizer_js_1","SpeechRecognizer_js_1","IntentRecognizer_js_1","VoiceProfileType_js_1","TranslationRecognizer_js_1","Translations_js_1","NoMatchReason_js_1","require$$33","NoMatchDetails_js_1","require$$34","TranslationRecognitionCanceledEventArgs_js_1","require$$35","IntentRecognitionCanceledEventArgs_js_1","require$$36","require$$37","CancellationDetails_js_1","require$$38","CancellationErrorCodes_js_1","require$$39","ConnectionEventArgs_js_1","require$$40","ServiceEventArgs_js_1","require$$41","require$$42","PhraseListGrammar_js_1","require$$43","require$$44","BotFrameworkConfig_js_1","require$$45","CustomCommandsConfig_js_1","require$$46","DialogServiceConnector_js_1","require$$47","ActivityReceivedEventArgs_js_1","require$$48","TurnStatusReceivedEventArgs_js_1","require$$49","ServicePropertyChannel_js_1","require$$50","ProfanityOption_js_1","require$$51","BaseAudioPlayer_js_1","require$$52","ConnectionMessageEventArgs_js_1","require$$53","require$$54","VoiceProfile_js_1","require$$55","VoiceProfileEnrollmentResult_js_1","require$$56","VoiceProfileResult_js_1","require$$57","VoiceProfilePhraseResult_js_1","require$$58","VoiceProfileClient_js_1","require$$59","SpeakerRecognizer_js_1","require$$60","SpeakerIdentificationModel_js_1","require$$61","SpeakerVerificationModel_js_1","require$$62","AutoDetectSourceLanguageConfig_js_1","require$$63","AutoDetectSourceLanguageResult_js_1","require$$64","SourceLanguageConfig_js_1","require$$65","SpeakerRecognitionResult_js_1","require$$66","require$$67","require$$68","require$$69","SpeechSynthesizer_js_1","require$$70","SynthesisResult_js_1","require$$71","SpeechSynthesisResult_js_1","require$$72","SpeechSynthesisEventArgs_js_1","require$$73","SpeechSynthesisWordBoundaryEventArgs_js_1","require$$74","SpeechSynthesisBookmarkEventArgs_js_1","require$$75","SpeechSynthesisVisemeEventArgs_js_1","require$$76","SpeechSynthesisBoundaryType_js_1","require$$77","SynthesisVoicesResult_js_1","require$$78","VoiceInfo_js_1","require$$79","SpeakerAudioDestination_js_1","require$$80","ConversationTranscriptionCanceledEventArgs_js_1","require$$81","require$$82","PronunciationAssessmentGradingSystem_js_1","require$$83","PronunciationAssessmentGranularity_js_1","require$$84","PronunciationAssessmentConfig_js_1","require$$85","PronunciationAssessmentResult_js_1","require$$86","require$$87","AvatarConfig_js_1","require$$88","AvatarEventArgs_js_1","require$$89","AvatarSynthesizer_js_1","require$$90","AvatarVideoFormat_js_1","require$$91","AvatarWebRTCConnectionResult_js_1","require$$92","Diagnostics_js_1","require$$93","require$$94","ProxyInfo_1","ProxyInfo$1","ProxyInfo","parameters","encodings","core","mkrequest","args","statusCodes","method","encoding","baseurl","arg","StatusError","res","params","_url","_headers","parsed","resp","browser","bent_1","RestRequestType","RestMessageAdapter","configParams","headerKey","headerValue","headerMap","line","parts","responseReceivedDeferral","requestCommand","handleRestResponse","send","postData","sendRequest","RestConfigBase_1","RestConfigBase","IntentConnectionFactory_1","IntentConnectionFactory$1","intentRegion","IntentConnectionFactory","SpeakerRecognitionConnectionFactory_1","SpeakerRecognitionConnectionFactoryBase","endpointPath","scenario","SpeakerRecognitionConnectionFactory","VoiceProfileConnectionFactory","SpeechRecognitionEvent","RecognitionTriggeredEvent","ListeningStartedEvent","ConnectingToServiceEvent","authFetchEventid","RecognitionStartedEvent","RecognitionCompletionStatus","RecognitionEndedEvent","serviceTag","status","SpeechConnectionMessage_Internal","SpeechConnectionMessage","contentType","additionalHeaders","SegmentationMode","NextAction","Mode","LanguageIdDetectionMode","LanguageIdDetectionPriority","OnUnknownAction","ResultType","PhraseResultOutputType","ServiceRecognizerBase_1","SpeechConnectionMessage_Internal_js_1","Segmentation_js_1","OnSuccess_js_1","InterimResults_js_1","LanguageIdContext_js_1","OnSuccess_js_2","OnUnknown_js_1","InterimResults_js_2","PhraseResults_js_1","OnSuccess_js_3","ServiceRecognizerBase$1","ServiceRecognizerBase","connectionClosedEvent","targetLanguages","translationVoice","categoryId","action","languageToVoiceMap","phraseDetection","speechSegmentationSilenceTimeoutMs","speechSegmentationMaximumTimeMs","speechSegmentationStrategy","segmentation","configuredSegment","segMode","segmentationSilenceTimeoutMs","segmentationMaximumTimeMs","sourceLanguages","speechContextLidMode","customModels","recoMode","errorCallBack","conPromise","audioNode","audioStreamNode","deviceInfo","sessionStartEventArgs","messagePayload","telemetryData","connection","speechStartDetected","speechStartEventArgs","speechStopDetected","speechStopEventArgs","sessionStopEventArgs","bytesSent","audioOffsetMs","generateNewRequestId","speechContextJson","hasLanguageId","translationContext","requestSession","SpeechServiceConfigJson","replacement","nextSendTime","fastLaneSizeMs","maxSendUnthrottledBytes","startRecogNumber","readAndUploadCycle","audioStreamChunk","sendDelay","isUnAuthorized","lastStatusCode","lastReason","delayMs","out","readView","ConversationServiceRecognizer_1","ConversationServiceRecognizer$1","textBody","processed","simple","resultProps","cancelReason","detailed","hypothesis","ConversationServiceRecognizer","SpeechResultFormat","RecognizerConfig","speechServiceConfig","models","modelsExist","modelId","SpeechServiceInterfaces","WebsocketMessageFormatter_1","CRLF","WebsocketMessageFormatter","textMessage","headerBodySplit","binaryMessage","dataView","headerLength","headersString","content","headerBuffer","headerInt8Array","payloadInt8Array","bodyInt8Array","headerMatches","separatorIndex","SpeechConnectionFactory_1","SpeechConnectionFactory$1","webSocketConnection","SpeechConnectionFactory","ConversationTranscriberConnectionFactory_1","ConversationTranscriberConnectionFactory$1","ConversationTranscriberConnectionFactory","TranscriberConnectionFactory_1","TranscriberConnectionFactory$1","hostDefault","wordLevelTimings","TranscriberConnectionFactory","TranslationConnectionFactory_1","TranslationConnectionFactory$1","returnRegionPlaceholder","TranslationConnectionFactory","EnumTranslation_1","EnumTranslation$1","recognitionStatus","expectEndOfDictation","EnumTranslation","SynthesisStatus","RecognitionStatus","TranslationSynthesisEnd_1","TranslationSynthesisEnd$1","TranslationSynthesisEnd","TranslationHypothesis_1","TranslationHypothesis","baseOffset","translationHypothesis","jsonObj","TranslationPhrase_1","TranslationPhrase$1","TranslationPhrase","translationResponse","serializedObj","TranslationServiceRecognizer_1","TranslationServiceRecognizer$1","translationRecognizer","handleTranslationPhrase","translatedPhrase","handleTranslationHypothesis","synthEnd","retEvent","canceledResult","serviceResult","translation","confidence","TranslationServiceRecognizer","SpeechDetected_1","SpeechDetected","SpeechHypothesis_1","SpeechHypothesis","SpeechKeyword_1","SpeechKeyword","SpeechServiceRecognizer_1","SpeechServiceRecognizer$1","speechRecognizer","SpeechServiceRecognizer","SpeakerDiarizationMode","IdentityProvider","ConversationTranscriptionServiceRecognizer_1","SpeakerDiarization_js_1","ConversationTranscriptionServiceRecognizer$1","conversationTranscriber","speakerDiarization","ConversationTranscriptionServiceRecognizer","TranscriptionServiceRecognizer_1","TranscriptionServiceRecognizer$1","transcriber","info","command","speechEventJson","eventDict","TranscriptionServiceRecognizer","DetailedSpeechPhrase_1","DetailedSpeechPhrase$1","DetailedSpeechPhrase","word","SimpleSpeechPhrase_1","SimpleSpeechPhrase$1","SimpleSpeechPhrase","AddedLmIntent_1","AddedLmIntent","IntentServiceRecognizer_1","IntentServiceRecognizer$1","addedIntents","umbrellaIntent","speechHypothesis","sendEvent","intentResponse","addedIntent","defferal","IntentServiceRecognizer","IntentResponse_1","IntentResponse","SpeakerResponse","ServiceTelemetryListener_Internal","RecognitionEvents_js_1","ServiceTelemetryListener","audioReceivedTime","metrics","telemetry","RequestSession_1","ServiceTelemetryListener_Internal_js_1","RequestSession","isError","continuousRecognition","PhraseOption","PhraseExtension","TentativePhraseResultsOption","SpeechContext_1","PhraseOutput_js_1","SpeechContext","dynamicGrammar","contentAssessmentTopic","isSpeakerDiarizationEnabled","dgi","GroupType","SubstringMatchType","DynamicGrammarBuilder_1","Group_js_1","DynamicGrammarBuilder","grammar","retObj","retPhrases","ActivityPayloadResponse","MessageDataStreamType","DialogServiceTurnState_1","ActivityResponsePayload_js_1","DialogServiceTurnState","manager","DialogServiceTurnStateManager_1","DialogServiceTurnState_js_1","DialogServiceTurnStateManager","turnState","InvocationSource","KeywordDetectionType","OnRejectAction","DialogServiceAdapter_1","DialogEvents_js_1","DialogServiceTurnStateManager_js_1","InvocationSource_js_1","KeywordDetection_js_1","DialogServiceAdapter$1","dialogServiceConnector","interactionGuid","agentMessage","agentMessageJson","speechPhrase","keyword","audioRequestId","turn","preAudioPromise","communicationCustodian","loop","terminateMessageLoop","turnRequestId","audioSessionReqId","turnEndRequestId","agentConfigJson","guid","agentContextJson","responseMessage","responsePayload","responseRequestId","activityPayload","updateAgentConfig","pullAudioOutputStream","keywordPropertyValue","keywordOffsetPropertyValue","keywordDurationPropertyValue","keywords","keywordOffsets","keywordDurations","keywordDefinitionArray","definition","DialogServiceAdapter","AgentConfig_1","AgentConfig","ConversationConnectionConfig_1","RestConfigBase_js_1","ConversationConnectionConfig","ConversationManager_1","ConversationConnectionConfig_js_1","ConversationManager$1","conversationCode","languageCode","endpointHost","correlationId","subscriptionRegion","authToken","errorMessage","errMessageRaw","sessionToken","ConversationManager","ConversationConnectionMessage_1","ConversationConnectionMessage","ConversationWebsocketMessageFormatter_1","ConversationConnectionMessage_js_1","ConversationWebsocketMessageFormatter","incomingMessage","ConversationConnectionFactory_1","ConversationWebsocketMessageFormatter_js_1","ConversationConnectionFactory$1","ConversationConnectionFactory","ConversationRequestSession_1","ConversationRequestSession","ConversationTranslatorEventArgs","MuteAllEventArgs","LockRoomEventArgs","ParticipantEventArgs","ParticipantAttributeEventArgs","ParticipantsListEventArgs","translateTo","profanityFilter","roomProfanityFilter","isRoomLocked","isMuteAll","ConversationReceivedTranslationEventArgs","ConversationTranslatorInterfaces","InternalParticipants","meId","exists","CommandResponsePayload_1","parseCommandResponse","CommandResponsePayload","ParticipantResponsePayload","parseListResponse","parseParticipantResponse","ParticipantsListPayloadResponse","ParticipantPayloadResponse","TranslationResponsePayload","parseSpeechResponse","parseTextResponse","SpeechResponsePayload","TextResponsePayload","CommandResponsePayload_js_1","ParticipantResponsePayload_js_1","TranslationResponsePayload_js_1","ConversationServiceAdapter_1","ConversationRequestSession_js_1","ConversationTranslatorEventArgs_js_1","ConversationTranslatorInterfaces_js_1","ConversationServiceAdapter$1","conversationServiceConnector","conversationMessageType","sendFinal","commandPayload","participantsPayload","participantsResult","joinParticipantPayload","joiningParticipant","leavingParticipant","disconnectParticipant","speechPayload","conversationResultReason","speechResult","textPayload","textResult","messageRetrievalPromise","serviceResultTranslations","ConversationServiceAdapter","ConversationTranslatorRecognizer_1","ConversationConnectionFactory_js_1","ConversationServiceAdapter_js_1","ConversationRecognizerFactory","ConversationTranslatorRecognizer","ConversationTranslatorRecognizer$1","serviceConfigImpl","withAsync","TranscriberRecognizer_1","TranscriberRecognizer$1","audioConfigImpl","reco","TranscriberRecognizer","ConversationManager_js_1","ConversationTranslatorRecognizer_js_1","TranscriberRecognizer_js_1","MetadataType","SynthesisAudioMetadata","SynthesisEvents","SpeechSynthesisEvent","SynthesisTriggeredEvent","sessionAudioDestinationId","turnAudioDestinationId","ConnectingToSynthesisServiceEvent","SynthesisStartedEvent","SynthesisTurn_1","SynthesisAudioMetadata_js_1","SynthesisEvents_js_1","SynthesisTurn$1","SynthesisTurn","rawText","responseJson","idx","SynthesisAdapterBase_1","SynthesisAdapterBase$1","_cancellationReason","_connectionMessage","metadataList","wordBoundaryEventArgs","bookmarkEventArgs","visemeEventArgs","synthesisContextJson","authPromise","_metadata","_requestId","_audio","_result","_wordBoundaryEventArgs","_visemeEventArgs","_bookmarkEventArgs","SynthesisAdapterBase","AvatarSynthesisAdapter_1","AvatarSynthesisAdapter$1","avatarSynthesizer","_e","_d","_c","_h","_g","_f","_k","_j","_i","_n","_m","_l","_o","_p","_q","avatarEventArgs","AvatarSynthesisAdapter","SpeechSynthesisAdapter_1","SpeechSynthesisAdapter$1","speechSynthesizer","synthesisStartEventArgs","audioWithHeader","SpeechSynthesisAdapter","SynthesisRestAdapter_1","SynthesisRestAdapter$1","SynthesisRestAdapter","SynthesisServiceType","SynthesizerConfig","SynthesisContext_1","SynthesisContext$1","sectionName","synthesisSection","SynthesisContext","SpeakerRecognitionConfig_1","SpeakerRecognitionConfig$1","SpeakerRecognitionConfig","SpeakerServiceRecognizer_1","SpeakerServiceRecognizer$1","speakerContextJson","SpeakerServiceRecognizer","VoiceServiceRecognizer_1","VoiceServiceRecognizer$1","enrollmentResponse","phraseResponse","createProfileDeferral","getPhrasesDeferral","enrollmentDeferral","profileCreateRequest","operation","profileRequest","profileInfo","iProfiles","profileResults","VoiceServiceRecognizer","SpeechServiceConfig","Context","os","System","SPEECHSDK_CLIENTSDK_VERSION","OS","platform","Device","manufacturer","connectivity","AvatarSynthesisAdapter_js_1","SpeechSynthesisAdapter_js_1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278]}