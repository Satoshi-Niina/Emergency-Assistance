name: Build and Deploy

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: "18.x"

jobs:
  # ===========================================
  # Build Job - クラウドに依存しないビルド処理
  # ===========================================
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install root dependencies
        run: npm ci

      - name: Install all workspace dependencies
        run: npm run install:all

      - name: Build shared package
        run: |
          cd shared
          npm run build

      - name: Build server
        run: |
          cd server
          npm run build

      - name: Build client
        run: |
          cd client
          npm run build
        env:
          # ビルド時の環境変数（適宜調整）
          VITE_API_BASE_URL: ${{ vars.API_BASE_URL || 'https://api.example.com' }}
          NODE_ENV: production

      - name: Run tests
        run: npm run test

      # ビルド成果物をアーティファクトとして保存
      - name: Upload client build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: client-build
          path: client/dist/
          retention-days: 7

      - name: Upload server build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: server-build
          path: |
            server/dist/
            server/package.json
          retention-days: 7

      - name: Upload shared build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: shared-build
          path: shared/dist/
          retention-days: 7

  # ===========================================
  # Deploy to Azure Static Web Apps
  # ===========================================
  deploy-azure-swa:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    environment: production-azure

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download client artifacts
        uses: actions/download-artifact@v4
        with:
          name: client-build
          path: client/dist/

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "client"
          api_location: "api"
          output_location: "dist"

  # ===========================================
  # Deploy to Vercel（代替クラウド例）
  # ===========================================
  deploy-vercel:
    if: github.ref == 'refs/heads/main' && vars.DEPLOY_TARGET == 'vercel'
    needs: build
    runs-on: ubuntu-latest
    environment: production-vercel

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download client artifacts
        uses: actions/download-artifact@v4
        with:
          name: client-build
          path: client/dist/

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./client

  # ===========================================
  # Deploy Server to Azure Container Apps
  # ===========================================
  deploy-server-azure:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    environment: production-azure

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download server artifacts
        uses: actions/download-artifact@v4
        with:
          name: server-build
          path: server/dist/

      - name: Download shared artifacts
        uses: actions/download-artifact@v4
        with:
          name: shared-build
          path: shared/dist/

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and push Docker image
        run: |
          az acr build --registry ${{ vars.AZURE_CONTAINER_REGISTRY }} \
            --image emergency-assistance-server:${{ github.sha }} \
            --file Dockerfile .

      - name: Deploy to Azure Container Apps
        run: |
          az containerapp update \
            --name ${{ vars.AZURE_CONTAINER_APP_NAME }} \
            --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} \
            --image ${{ vars.AZURE_CONTAINER_REGISTRY }}.azurecr.io/emergency-assistance-server:${{ github.sha }} \
            --set-env-vars \
              DATABASE_URL="${{ secrets.DATABASE_URL }}" \
              SESSION_SECRET="${{ secrets.SESSION_SECRET }}" \
              OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
              NODE_ENV=production

  # ===========================================
  # Deploy Database Migration
  # ===========================================
  deploy-database:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: |
          cd server
          npm ci

      - name: Run database migrations
        run: |
          cd server
          npm run migrate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
