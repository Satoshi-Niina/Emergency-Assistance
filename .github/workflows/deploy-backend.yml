name: Deploy Backend to Azure App Service

on:
  push:
    branches:
      - backup-clean
    paths:
      - "server/**"
      - ".github/workflows/deploy-backend.yml"
      - "trigger.txt"
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy Backend
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'server/package-lock.json'

      - name: Install dependencies
        working-directory: server
        run: npm ci --production=false

      - name: Build backend
        working-directory: server
        run: npm run build

      - name: Prepare deployment package
        working-directory: server
        run: |
          echo "=== Preparing deployment package ==="
          
          # Create deployment directory
          mkdir -p ../deploy-backend
          
          # Copy built files
          cp -r dist/* ../deploy-backend/
          
          # Copy essential files
          cp package.json ../deploy-backend/
          cp package-lock.json ../deploy-backend/
          
          # Copy other necessary files
          [ -f web.config ] && cp web.config ../deploy-backend/ || true
          [ -f .env.production ] && cp .env.production ../deploy-backend/.env || true
          
          # Install production dependencies in deployment directory
          cd ../deploy-backend
          npm ci --production
          
          # Verify deployment package
          echo "=== Deployment package contents ==="
          find . -name "*.js" | head -10
          echo "Total files: $(find . -type f | wc -l)"
          ls -la

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: emergencyassistance-sv
          slot-name: Production 
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: deploy-backend

      - name: Health check
        run: |
          echo "üîç Starting enhanced health check..."
          app_url="https://emergencyassistance-sv-fbanemhrbshuf9bd.japanwest-01.azurewebsites.net"
          
          # Wait for deployment to complete
          echo "‚è≥ Waiting for deployment to complete..."
          sleep 45
          
          # Check root endpoint
          echo "üîç Checking root endpoint: ${app_url}/"
          root_code=$(curl -o /dev/null -s -w "%{http_code}" -L "${app_url}/")
          echo "Root endpoint status: $root_code"
          
          if [ "$root_code" = "200" ] || [ "$root_code" = "302" ]; then
            echo "‚úÖ Root endpoint accessible"
            
            # Check health endpoint
            echo "üîç Checking health endpoint: ${app_url}/health"
            health_code=$(curl -o /dev/null -s -w "%{http_code}" -L "${app_url}/health")
            echo "Health endpoint status: $health_code"
            
            if [ "$health_code" = "200" ]; then
              echo "‚úÖ Health check passed"
              exit 0
            fi
          fi
          
          # Diagnostic info on failure
          echo "‚ùå Health check failed. Getting diagnostic info..."
          echo "Response headers:"
          curl -I -s "${app_url}/" || true
          echo "Response body sample:"
          curl -s "${app_url}/" | head -20 || true
          exit 1