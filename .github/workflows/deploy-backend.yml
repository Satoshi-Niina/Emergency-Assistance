name: Deploy Backend to Azure App Service

on:
  push:
    branches:
      - backup-clean          # ← 必要なら main も追加可
    paths:
      - "server/**"
      - ".github/workflows/deploy-backend.yml"
  workflow_dispatch:

env:
  NODE_VERSION: "20"
  AZURE_WEBAPP_NAME: "Emergencyassistance-sv"   # ← App Service のリソース名
  WORKING_DIR_SERVER: "server"
  WORKING_DIR_SHARED: "shared"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: |
            ${{ env.WORKING_DIR_SERVER }}/package-lock.json
            ${{ env.WORKING_DIR_SHARED }}/package-lock.json

      - name: Install (shared) if exists
        run: |
          if [ -f "${WORKING_DIR_SHARED}/package.json" ]; then
            cd "${WORKING_DIR_SHARED}"
            npm ci
          fi

      - name: Install (server)
        working-directory: ${{ env.WORKING_DIR_SERVER }}
        run: npm ci

      - name: Build (server) if script exists
        working-directory: ${{ env.WORKING_DIR_SERVER }}
        run: |
          if npm run | grep -q "^  build"; then
            npm run build
          fi

      - name: Verify dist entry (info)
        working-directory: ${{ env.WORKING_DIR_SERVER }}
        run: |
          if [ -f "./dist/index.js" ] || [ -f "./dist/server.js" ]; then
            echo "dist entry found."
          else
            echo "dist entry not found (info): Oryx on App Service may build."
          fi

      - name: Prepare artifact
        run: |
          mkdir -p deploy
          cd "${WORKING_DIR_SERVER}"
          zip -r ../deploy/server.zip . -x "node_modules/*" ".git/*"
          cd -

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: server-zip
          path: deploy/server.zip
          if-no-files-found: error

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: server-zip
          path: .

      # ★ 発行プロファイル(XML)の検証：Secret名は AZURE_WEBAPP_PUBLISH_PROFILE
      - name: Validate publish profile host
        shell: bash
        env:
          AZURE_WEBAPP_NAME: ${{ env.AZURE_WEBAPP_NAME }}
          AZURE_WEBAPP_PUBLISH_PROFILE: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        run: |
          node <<'NODE'
          const app = (process.env.AZURE_WEBAPP_NAME || '').toLowerCase();
          const expected = app + '.scm.azurewebsites.net';
          const xml = (process.env.AZURE_WEBAPP_PUBLISH_PROFILE || '').replace(/\r/g, '');
          const m = xml.match(/publishUrl="https?:\/\/([^:"'\/]+)/i);
          const actual = (m ? m[1] : '').toLowerCase();
          console.log('expectedHost=' + expected);
          console.log('actualHost=' + actual);
          if (!actual) {
            console.error('No publishUrl found in secret. Recreate publish profile from the App Service and paste XML as-is.');
            process.exit(1);
          }
          if (actual !== expected) {
            console.error('NG: publish profile host mismatch');
            process.exit(1);
          }
          NODE

      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: server.zip

      - name: Show Kudu deployment log url
        run: |
          echo "Kudu: https://${{ env.AZURE_WEBAPP_NAME }}.scm.azurewebsites.net/api/deployments"
