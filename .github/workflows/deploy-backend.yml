name: Deploy Backend

'on':
  push:
    branches: [ main, backup-clean ]
    paths:
      - "server/**"
      - ".github/workflows/deploy-backend.yml"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

concurrency:
  group: deploy-backend-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash   # ← ここも bash だけ

env:
  NODE_VERSION: "20"

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      AZURE_CLIENT_ID:       ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID:       ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_WEBAPP_NAME:     ${{ secrets.AZURE_WEBAPP_NAME }}

    steps:
      - name: Validate required secrets
        run: |
          set -euo pipefail
          missing=0
          for v in AZURE_CLIENT_ID AZURE_TENANT_ID AZURE_SUBSCRIPTION_ID AZURE_WEBAPP_NAME; do
            if [ -z "${!v:-}" ]; then
              echo "::error:: Missing required secret env: $v"
              missing=1
            fi
          done
          if [ "$missing" -ne 0 ]; then exit 1; fi
          echo "✅ Secrets OK"

      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: server/package-lock.json

      - name: Install deps
        working-directory: server
        run: |
          set -euo pipefail
          npm ci

      - name: Build (backend)
        working-directory: server
        run: |
          set -euo pipefail
          if jq -e '.scripts.build' package.json >/dev/null 2>&1; then
            npm run build
          else
            echo "no build script; skip build"
          fi

      - name: Create artifact zip
        run: |
          set -euo pipefail
          cd server
          zip -r ../server_artifact.zip . -x "**/node_modules/.cache/**"
          ls -lh ../server_artifact.zip

      - name: Upload artifact (for debug)
        uses: actions/upload-artifact@v4
        with:
          name: server_artifact
          path: server_artifact.zip
          retention-days: 7

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id:       ${{ env.AZURE_CLIENT_ID }}
          tenant-id:       ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: server_artifact.zip

      - name: Warmup & Health check
        run: |
          set -euo pipefail
          app_lower="$(printf "%s" "${AZURE_WEBAPP_NAME}" | tr '[:upper:]' '[:lower:]')"
          url="https://${app_lower}.azurewebsites.net/health"
          echo "Check: $url"
          for i in {1..12}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" "$url" || true)
            echo "try#$i -> $code"
            if [ "$code" -ge 200 ] && [ "$code" -lt 400 ]; then
              echo "✅ Health OK ($code)"; exit 0
            fi
            sleep 5
          done
          echo "::error:: Health check failed"; exit 1
