name: Deploy Backend

on:
  push:
    branches: [ main, backup-clean ]
    paths:
      - 'server/**'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

concurrency:
  group: emergency-backend
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      NODE_VERSION: 20
      APP_NAME: Emergencyassistance-sv   # ← Azureの実名
      PACKAGE_PATH: ./server/dist

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Preflight: Secrets & Azure settings
        env:
          C_ID: ${{ secrets.AZURE_CLIENT_ID }}
          T_ID: ${{ secrets.AZURE_TENANT_ID }}
          S_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          APP:  ${{ env.APP_NAME }}
        run: |
          miss=0
          for k in C_ID T_ID S_ID; do
            v="${!k}"
            if [ -z "$v" ]; then
              echo "::error title=Missing secret::${k} is empty"
              miss=1
            fi
          done
          if [ -z "$APP" ] || [ ${#APP} -lt 3 ]; then
            echo "::error title=Invalid APP_NAME::APP_NAME is empty or too short"
            miss=1
          fi
          if [ "$miss" -ne 0 ]; then
            echo "Preflight failed"; exit 1
          fi
          echo "Preflight OK"

      - name: Install & Build (server)
        run: |
          cd server
          npm ci
          npm run build
          cd ..

      - name: Verify artifact exists
        run: |
          if [ -d "./server/dist" ]; then
            files=$(find ./server/dist -type f | wc -l)
            echo "DIST_FILES=${files}"
            [ "$files" -gt 0 ] || (echo "dist empty!" >&2; exit 1)
          else
            echo "No deployable artifact (./server/dist)!" >&2
            exit 1
          fi

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.APP_NAME }}
          package: ${{ env.PACKAGE_PATH }}

      - name: Warmup & Health check
        run: |
          APP=$(echo "${{ env.APP_NAME }}" | tr '[:upper:]' '[:lower:]')
          URL="https://${APP}.azurewebsites.net/health"
          echo "Check: $URL"
          for i in {1..12}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" "$URL" || true)
            echo "try#$i -> $code"
            if [ "$code" = "200" ]; then exit 0; fi
            sleep 5
          done
          echo "Health check failed" >&2
          exit 1
