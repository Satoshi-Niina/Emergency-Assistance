name: Deploy Backend to Azure App Service

on:
  push:
    branches:
      - backup-clean
    paths:
      - "server/**"
      - ".github/workflows/deploy-backend.yml"
      - "trigger.txt"
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy Backend
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: server
        run: npm ci

      - name: Build backend
        working-directory: server
        run: npm run build

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: emergencyassistance-sv
          slot-name: Production 
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: server
    
      - name: Health check
        run: |
          echo "üîç Starting health check..."
          app_url="https://emergencyassistance-sv-fbanemhrbshuf9bd.japanwest-01.azurewebsites.net"
          
          # 1. Check root endpoint first (most basic)
          echo "üîç Checking root endpoint: ${app_url}/"
          sleep 30  # Allow app to fully start
          
          root_code=$(curl -o /dev/null -s -w "%{http_code}" -L "${app_url}/")
          echo "Root endpoint status: $root_code"
          
          if [ "$root_code" = "200" ] || [ "$root_code" = "302" ]; then
            echo "‚úÖ Root endpoint accessible"
            
            # 2. Now check health endpoint
            echo "üîç Checking health endpoint: ${app_url}/health"
            health_code=$(curl -o /dev/null -s -w "%{http_code}" -L "${app_url}/health")
            echo "Health endpoint status: $health_code"
            
            if [ "$health_code" = "200" ]; then
              echo "‚úÖ Health check passed"
              exit 0
            fi
          fi
          
          # 3. Diagnostic info on failure
          echo "‚ùå Health check failed. Getting diagnostic info..."
          echo "Response headers:"
          curl -I -s "${app_url}/" || true
          echo "Response body sample:"
          curl -s "${app_url}/" | head -10 || true
          exit 1