name: Deploy Backend

on:
  push:
    branches: [ main, develop, backup-clean ]
    paths:
      - "server/src/**"
      - "server/production-server.ts"
      - "server/azure-startup.js"
      - "server/startup-minimal.js"
      - "server/web.config"
      - "server/package.json"
      - "server/package-lock.json"
      - "server/tsconfig.json"
      - "server/drizzle.config.ts"
      - "server/migrations/**"
      - "server/lib/**"
      - "server/routes/**"
      - "server/services/**"
      - "server/types/**"
      - "server/utils/**"
      - "server/auth.ts"
      - "server/app.ts"
      - "server/index.ts"
      - "server/index.build.ts"
      - "server/index.dev.ts"
      - "server/index-minimal.ts"
      - "server/simple-server.ts"
      - "server/simple.ts"
      - ".github/workflows/deploy-backend.yml"
    paths-ignore:
      - "client/**"
      - "**/*.md"
      - "**/*.txt"
      - "**/*.log"
      - "**/node_modules/**"
      - "**/dist/**"
      - "**/.git/**"
  pull_request:
    branches: [ main, develop, backup-clean ]
    paths:
      - "server/src/**"
      - "server/production-server.ts"
      - "server/azure-startup.js"
      - "server/startup-minimal.js"
      - "server/web.config"
      - "server/package.json"
      - "server/package-lock.json"
      - "server/tsconfig.json"
      - "server/drizzle.config.ts"
      - "server/migrations/**"
      - "server/lib/**"
      - "server/routes/**"
      - "server/services/**"
      - "server/types/**"
      - "server/utils/**"
      - "server/auth.ts"
      - "server/app.ts"
      - "server/index.ts"
      - "server/index.build.ts"
      - "server/index.dev.ts"
      - "server/index-minimal.ts"
      - "server/simple-server.ts"
      - "server/simple.ts"
      - ".github/workflows/deploy-backend.yml"
    paths-ignore:
      - "client/**"
      - "**/*.md"
      - "**/*.txt"
      - "**/*.log"
      - "**/node_modules/**"
      - "**/dist/**"
      - "**/.git/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Debug Environment
        run: |
          echo "Current directory: $(pwd)"
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Directory contents:"
          ls -la

      - name: Install & Build
        run: |
          echo "Installing dependencies..."
          npm ci --verbose
          echo "Checking TypeScript configuration..."
          npm run build:check
          echo "Building project..."
          npm run build
          echo "Build completed. Checking dist directory:"
          ls -la dist/ || echo "dist directory not found"
          echo "Checking for JavaScript files in dist:"
          find dist/ -name "*.js" -type f | head -10 || echo "No JavaScript files found"

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Debug Azure CLI
        run: |
          echo "Azure CLI version:"
          az --version
          echo "Current Azure account:"
          az account show --query "{name:name, id:id, tenantId:tenantId}" --output table

      - name: Deploy using Azure CLI
        run: |
          echo "Creating deployment package..."
          zip -r deployment.zip dist/ package.json package-lock.json startup-minimal.js web.config
          echo "Deployment package created:"
          ls -la deployment.zip
          
          echo "Optimizing Azure Web App settings..."
          az webapp config set \
            --resource-group "rg-Emergencyassistant-app" \
            --name "Emergencyassistance-sv" \
            --startup-file "node startup-minimal.js" \
            --min-tls-version "1.2" \
            --http20-enabled true
          
          echo "Setting environment variables..."
          az webapp config appsettings set \
            --resource-group "rg-Emergencyassistant-app" \
            --name "Emergencyassistance-sv" \
            --settings \
            WEBSITE_NODE_DEFAULT_VERSION="~20" \
            NODE_ENV="production" \
            WEBSITE_RUN_FROM_PACKAGE="1" \
            WEBSITE_WEBSOCKETS_ENABLED="1" \
            WEBSITE_LOAD_BALANCER_ALGORITHM="LeastRequests"
          
          echo "Deploying to Azure Web App..."
          az webapp deployment source config-zip \
            --resource-group "rg-Emergencyassistant-app" \
            --name "Emergencyassistance-sv" \
            --src "deployment.zip" \
            --timeout 1800
          
          echo "Waiting for deployment to complete..."
          sleep 15
          
          echo "Checking application health..."
          # ヘルスチェックを複数回試行（短い間隔で）
          for i in {1..15}; do
            echo "Health check attempt $i..."
            if curl -f --max-time 10 "https://Emergencyassistance-sv.azurewebsites.net/" > /dev/null 2>&1; then
              echo "✅ Application is healthy!"
              break
            elif [ $i -eq 15 ]; then
              echo "❌ Application health check failed after 15 attempts"
              exit 1
            else
              echo "⏳ Application not ready yet, waiting 10 seconds..."
              sleep 10
            fi
          done
          
          echo "Deployment completed successfully!"
