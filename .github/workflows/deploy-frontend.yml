name: Deploy Frontend to Azure

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'client/**'
      - '.github/workflows/deploy-frontend.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'client/**'
      - '.github/workflows/deploy-frontend.yml'

jobs:
  fe:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          # キャッシュパスを明示的に指定（オプション）
          # cache-dependency-path: './client/package-lock.json'

      - name: Show tree (debug)
        run: |
          pwd
          ls -la
          test -f package.json || (echo "No package.json in client" && exit 1)

      - name: Install deps (Root)
        run: |
          echo "Installing root dependencies..."
          npm ci --legacy-peer-deps
      
      - name: Install deps (Client)
        run: |
          echo "Installing client dependencies..."
          cd client
          npm ci --legacy-peer-deps

      - name: Verify Dependencies
        run: |
          cd client
          echo "Checking if vite is installed..."
          if [ -d "node_modules/vite" ]; then
            echo "✅ vite package found"
            ls -la node_modules/vite
          else
            echo "❌ vite package not found"
            echo "Available packages:"
            ls -la node_modules/ | grep -E "(vite|@vitejs)"
            exit 1
          fi
      
      - name: Build
        env:
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL || 'https://emergencyassistance-sv.azurewebsites.net' }}
        run: |
          echo "Building with VITE_API_BASE_URL: $VITE_API_BASE_URL"
          echo "Current directory: $(pwd)"
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          cd client
          npm run build

      - name: Verify dist (debug)
        run: |
          cd client
          if [ ! -d dist ]; then
            echo "❌ dist directory not found - build failed"
            exit 1
          fi
          echo "✅ dist directory found"
          ls -la dist

      - name: Deploy Frontend
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "client/dist"
          skip_app_build: true
          deployment_environment: production


      - name: Cleanup (safe)
        if: always()
        run: rm -rf dist || true


