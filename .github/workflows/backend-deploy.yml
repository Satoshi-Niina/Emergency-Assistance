# Azure App Service GitHub Actions Workflow
# バックエンド（Node.jsアプリ）をビルドし、Azure App Service にデプロイ
name: Deploy Backend to Azure App Service

on:
  push:
    branches:
      - buckup
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy Backend
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install root dependencies
        run: |
          npm ci --legacy-peer-deps
      - name: Install shared dependencies
        run: |
          cd shared
          npm ci --legacy-peer-deps
      - name: Install server dependencies
        run: |
          cd server
          npm ci --legacy-peer-deps
      - name: Build shared
        run: |
          cd shared
          npm run build
      - name: Prepare server for deployment (skip TypeScript build)
        run: |
          mkdir -p deploy-package
          # Copy all server files to deploy-package root
          cp -r server/* deploy-package/
          # Copy shared directory to deploy-package
          cp -r shared deploy-package/
          # Copy workspace package.json for workspace setup
          cp package.json deploy-package/workspace-package.json
          # Create web.config for Azure App Service
          cat > deploy-package/web.config << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <handlers>
                <add name="iisnode" path="server.js" verb="*" modules="iisnode"/>
              </handlers>
              <rewrite>
                <rules>
                  <rule name="DynamicContent">
                    <conditions>
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
                    </conditions>
                    <action type="Rewrite" url="server.js"/>
                  </rule>
                </rules>
              </rewrite>
            </system.webServer>
          </configuration>
          EOF
          # Create simple server.js startup file for Azure
          cat > deploy-package/server.js << 'EOF'
          const { spawn } = require('child_process');
          const path = require('path');
          
          // Start the TypeScript server using tsx
          const server = spawn('npx', ['tsx', 'index-minimal.ts'], {
            cwd: __dirname,
            stdio: 'inherit'
          });
          
          server.on('error', (err) => {
            console.error('Server startup error:', err);
          });
          EOF
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'emergency-backend-api'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: 'deploy-package'
