# Azure App Service GitHub Actions Workflow
# バックエンド（Node.jsアプリ）をビルドし、Azure App Service にデプロイ
name: Deploy Backend to Azure App Service

on:
  push:
    branches:
      - buckup
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy Backend
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Prepare minimal server deployment for Function App
        run: |
          mkdir -p deploy-package
          # Copy essential server files
          cp server/index-minimal.ts deploy-package/index.js
          # Create simple package.json without type: module for compatibility
          cat > deploy-package/package.json << 'EOF'
          {
            "name": "emergency-backend-function",
            "version": "1.0.0",
            "main": "index.js",
            "scripts": {
              "start": "node index.js"
            },
            "dependencies": {
              "express": "^4.21.2",
              "cors": "^2.8.5"
            }
          }
          EOF
          # Convert TypeScript to JavaScript for simpler deployment
          cat > deploy-package/index.js << 'EOF'
          const express = require('express');
          const cors = require('cors');
          
          const app = express();
          const port = process.env.PORT || 3001;
          
          // Middleware
          app.use(cors());
          app.use(express.json());
          
          // Basic health check
          app.get('/', (req, res) => {
            res.json({ 
              message: 'Emergency Backend API is running!',
              timestamp: new Date().toISOString(),
              environment: process.env.NODE_ENV || 'development'
            });
          });
          
          app.get('/health', (req, res) => {
            res.json({ status: 'healthy', timestamp: new Date().toISOString() });
          });
          
          // Start server
          app.listen(port, () => {
            console.log(`Emergency Backend API listening on port ${port}`);
          });
          EOF
          # Install dependencies
          cd deploy-package
          npm install --only=production
      - name: Deploy to Azure Function App (using webapps-deploy)
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'emergency-backend-api'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: 'deploy-package'
