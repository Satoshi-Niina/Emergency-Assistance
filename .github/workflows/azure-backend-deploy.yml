name: Backend Build Test (Azure deployment temp disabled)

on:
  push:
    branches:
      - main
      - Niina
    paths:
      - "server/**"
      - "shared/**"
      - "Dockerfile.backend"
      - ".github/workflows/azure-backend-deploy.yml"
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - Niina
    paths:
      - "server/**"
      - "shared/**"
      - "Dockerfile.backend"

jobs:
  build-test:
    runs-on: ubuntu-latest
    name: Build and Test Backend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: |
          npm install
          cd server && npm install
          cd ../shared && npm install

      - name: Build shared library
        run: cd shared && npm run build

      - name: TypeScript compilation check
        run: |
          cd server
          npx tsc --noEmit --skipLibCheck
          echo "✅ TypeScript compilation passed!"

      - name: Test Docker build
        run: |
          echo "Testing Docker build..."
          docker build -f Dockerfile.backend -t test-backend:latest .
          echo "✅ Docker build test passed!"

      # TODO: Re-enable when Azure credentials are properly configured
      # - name: Log in to Azure
      #   uses: azure/login@v2
      #   with:
      #     client-id: ${{ secrets.AZURE_CLIENT_ID }}
      #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # - name: Build and deploy Container App to Azure
      #   uses: azure/container-apps-deploy-action@v2
      #   with:
      #     appSourcePath: ${{ github.workspace }}
      #     dockerfilePath: Dockerfile.backend
      #     acrName: ${{ secrets.REGISTRY_LOGIN_SERVER }}
      #     acrUsername: ${{ secrets.REGISTRY_USERNAME }}
      #     acrPassword: ${{ secrets.REGISTRY_PASSWORD }}
      #     containerAppName: emergency-backend-api
      #     resourceGroup: ${{ secrets.RESOURCE_GROUP }}
      #     environmentVariables: |
      #       DATABASE_URL=${{ secrets.DATABASE_URL }}
      #       OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
      #       AZURE_STORAGE_CONNECTION_STRING=${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
