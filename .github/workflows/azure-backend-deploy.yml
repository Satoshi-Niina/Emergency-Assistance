name: Azure Backend Deployment

on:
  push:
    branches:
      - main
      - Niina
    paths:
      - "server/**"
      - "shared/**"
      - "Dockerfile.backend"
      - ".github/workflows/azure-backend-deploy.yml"
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - Niina
    paths:
      - "server/**"
      - "shared/**"
      - "Dockerfile.backend"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy Backend to Azure

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: |
          npm install
          cd server && npm install
          cd ../shared && npm install

      - name: Build shared library
        run: cd shared && npm run build

      - name: TypeScript compilation check
        run: |
          cd server
          npx tsc --noEmit --skipLibCheck
          echo "âœ… TypeScript compilation passed!"

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and deploy Container App to Azure
        uses: azure/container-apps-deploy-action@v1
        with:
          appSourcePath: ${{ github.workspace }}
          dockerfilePath: Dockerfile.backend
          acrName: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          acrUsername: ${{ secrets.REGISTRY_USERNAME }}
          acrPassword: ${{ secrets.REGISTRY_PASSWORD }}
          containerAppName: emergency-backend-api
          resourceGroup: ${{ secrets.RESOURCE_GROUP }}
          environmentVariables: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            AZURE_STORAGE_CONNECTION_STRING=${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
